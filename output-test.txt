#INFO: **** input file is /Users/jaydenl/Dev/ASDRP/QCHEM/PySCF-UI/stream.py ****
import streamlit as st
import streamlit.components.v1 as components
from pyscf import gto, scf
from streamlit.runtime.scriptrunner import add_script_run_ctx
import threading
import time
from stmol import *
import py3Dmol
from rdkit import Chem
from rdkit.Chem import rdDetermineBonds
from rdkit.Chem.rdmolfiles import MolFromXYZFile
from rdkit.Chem import Descriptors
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from collections import defaultdict
import altair as alt
import os
from pyscf.hessian import thermo
from streamlit_extras.row import row

if 'queue' not in st.session_state:
    st.session_state['queue'] = []
if 'results' not in st.session_state:
    st.session_state['results'] = []
if 'computing' not in st.session_state:
    st.session_state['computing'] = False

# get all files in directory names precomputed_molecules:
precomputed_molecules = list(map(lambda x: x.split(
    ".")[0], os.listdir("precomputed_molecules")))


def compute_pyscf(atom, basis_option, verbose_option, temperature, pressure):
    # print(atom)
    # print(basis_option)
    # print(verbose_option)
    mol = gto.Mole()
    mol.atom = atom
    mol.basis = basis_option
    mol.verbose = int(verbose_option[0])
    mol.output = 'output-test.txt'
    mol.build()

    # mf = scf.RHF(mol)
    # mf.kernel()
    mf =mol.UHF().run()
    hessian = mf.Hessian().kernel()
    harmanalysis = thermo.harmonic_analysis(mf.mol, hessian)
    thermo_info =  thermo.thermo(mf, harmanalysis['freq_au'], temperature, pressure)
    
    outputFile = open("output-test.txt", "r")
    # Extract energy and time information
    time = None
    energy = None
    for line in outputFile.readlines():
        if line.startswith("    CPU time for SCF"):
            time = float(line.split(" ")[-2])

        elif line.startswith("converged SCF energy = "):
            energy = float(line.split(" ")[-1])
    data = {
        'energy': energy,
        'time': time,
        'nuclear energy': mf.energy_nuc(),
        'electronic energy': mf.energy_elec(),
        'total energy': mf.energy_tot(),
        # thermodynamics
        'entropy': thermo_info['S_tot'][0],
        'zero point energy': thermo_info['ZPE'][0],
        '0K internal energy': thermo_info['E_0K'][0],
        'internal energy': thermo_info['E_tot'][0],
        'enthalpy': thermo_info['H_tot'][0],
        'gibbs free energy': thermo_info['G_tot'][0],
        # 'Helmholtz free energy': thermo_info['Helmholtz'][0],
        # 'Helmholtz energy': thermo_info['Helmholtz'][0],
    }
    return data


def getMoleculeName(atom):
    d = {}
    for line in atom.split("\n"):
        try:
            name = line.split()[0]
            if name in d:
                d[name] += 1
            else:
                d[name] = 1
        except:
            pass
    name = ""
    for key in d:
        name += key + str(d[key])
    return name


# Streamlit layout
st.title("PySCF")

# Function to process the uploaded text file


def process_text_file(uploaded_file):
    if uploaded_file is not None:
        # Read the contents of the file
        text_contents = uploaded_file.getvalue().decode("utf-8")
        return text_contents
    else:
        return None


def addToQueue(atom, basis):
    st.session_state['queue'].append((atom, basis))


tabDatabase, tabTextInput, tabFileInput = st.tabs(
    ["Database", "Text Input", "File Input"])

basis_option = st.selectbox(
    "Basis", ["cc-pVTZ", "cc-pVDZ", "cc-pVQZ", "cc-pV5Z"])
verbose_option = st.selectbox("Verbose", index=2, options=[
                              "3, energy only", "4, cycles and energy", "5, cycles energy and runtime", "9, max"])

#Second Input (NEW) - Pressure of the system
# pressure = 101325 #in Pascals (Pa), 101325 Pa = 1 atm
#Third Input (NEW) - Temperature of the system
# temperature = 298.15 #in K, 298.15K = room temperature (25 degrees Celsius) 
thermo_row = row(2)
temp = thermo_row.number_input("Temperature", min_value=0.0)
press = thermo_row.number_input("Pressure", min_value=0.0)

with tabDatabase:
    selectedMolecule = st.selectbox(
        'Search Molecule Database', precomputed_molecules)
    if st.button('Add to Queue', use_container_width=True, key="db"):
        if selectedMolecule:
            parseDatafile = open(
                "precomputed_molecules/" + selectedMolecule + ".geom.txt", "r").readlines()[4:]
            parseDatafile = "\n".join(parseDatafile[:-1])
            addToQueue(parseDatafile, basis_option)
        else:
            st.warning(
                "Please select a molecule using dropdown menu or inputting a text file.")

with tabTextInput:
    # Create a Streamlit button which gives example
    with st.expander("See Example Input"):
        st.write("C 0.0000000 0.0000000 0.0000000")
        st.write("H 0.6311940 0.6311940 0.6311940")
        st.write("H -0.6311940 -0.6311940 0.6311940")
        st.write("H -0.6311940 0.6311940 -0.6311940")
        st.write("H 0.6311940 -0.6311940 -0.631194")
    # Fills xyz_input text area to the contents of the uploaded file
    xyz_input = st.text_area("XYZ Input", key="textxyz")

    if st.button('Add to Queue', use_container_width=True, key="text"):
        if xyz_input:
            addToQueue(xyz_input, basis_option)
        else:
            st.warning(
                "Please provide an XYZ input using the text box or inputting a text file.")

with tabFileInput:
    # Create a Streamlit button which gives example
    with st.expander("See Example Input"):
        st.write("C 0.0000000 0.0000000 0.0000000")
        st.write("H 0.6311940 0.6311940 0.6311940")
        st.write("H -0.6311940 -0.6311940 0.6311940")
        st.write("H -0.6311940 0.6311940 -0.6311940")
        st.write("H 0.6311940 -0.6311940 -0.631194")
    # Display file uploader for a single text file and processes it
    uploaded_file = st.file_uploader("Upload a XYZ input", type=["txt"])
    text_contents = process_text_file(uploaded_file)
    xyz_input = st.text_area(
        "XYZ Input", value=text_contents, key="filexyz") if text_contents else None
    if st.button('Add to Queue', use_container_width=True, key="filequeue"):
        if text_contents:
            addToQueue(text_contents, basis_option)
        else:
            st.warning(
                "Please provide an XYZ input using file uploader")

col1, col2, col3, col4 = st.columns(4, gap="small")

# if col1.button("Add to Queue"):
#     if xyz_input:
#         addToQueue(xyz_input)
#     else:
#         st.warning(
#             "Please provide an XYZ input using the text box or inputting a text file.")

# Computes only if something is added to the queue; grayed out otherwise
compute_disabled = len(st.session_state['queue']) == 0
if st.button("Compute", disabled=compute_disabled, type="primary", use_container_width=True) or st.session_state['computing'] == True:
    if len(st.session_state['queue']) > 0:
        with st.spinner("Computing " + getMoleculeName(st.session_state['queue'][0][0]) + "..."):
            st.session_state['computing'] = True
            atom = st.session_state['queue'][0][0]
            basis = st.session_state['queue'][0][1]
            st.session_state['queue'].pop(0)
            # st.write("Computing...")
            # progress_text = "Computing..."
            # my_bar = st.progress(0, text=progress_text)

            # for percent_complete in range(100):
            #     time.sleep(0.01)
            #     my_bar.progress(percent_complete + 1, text=progress_text)
            # time.sleep(1)
            # my_bar.empty()

            # Delete empty lines
            parsed = [line for line in atom.splitlines() if line.strip() != ""]
            xyz = "\n".join(parsed)
            mol = f"{len(parsed)}\nname\n{str(xyz)}"

            # output xyz into molecule.xyz file
            with open('molecule.xyz', 'w') as f:
                f.write(f"{len(parsed)}\nhi\n{str(xyz)}")

            raw_mol = MolFromXYZFile('molecule.xyz')
            rdkit_mol = Chem.Mol(raw_mol)
            rdDetermineBonds.DetermineBonds(rdkit_mol, charge=0)

            data = compute_pyscf(
                atom, basis, verbose_option, temp, press)
            data['atoms'] = rdkit_mol.GetNumAtoms()
            data['bonds'] = rdkit_mol.GetNumBonds()
            data['rings'] = rdkit_mol.GetRingInfo().NumRings()
            data['weight'] = Descriptors.MolWt(rdkit_mol)
            data['mol'] = mol
            data['rdkit_mol'] = rdkit_mol
            data['basis'] = basis
            data['molecule_name'] = getMoleculeName(atom)
            
            st.session_state['results'].append(data)
            st.rerun()
            
    elif st.session_state['computing'] == True:
        st.session_state['computing'] = False
    else:
        st.warning("Please add an XYZ input to the queue.")

if 'queue' in st.session_state:
    st.subheader("Queue")
    for queue_item in st.session_state['queue']:
        st.write(f"{getMoleculeName(queue_item[0])} | {queue_item[1]}")


tab1, tab2, tab3 = st.tabs(['Results', 'View Graphs', 'View Logs'])

with tab1:
    if 'results' in st.session_state:
        st.subheader("Results")
        for result_item in st.session_state['results']:
            data = result_item
            with st.container():
                result_col_1, result_col_2 = st.columns([2, 1])
                result_col_1.write(
                    f"{data['molecule_name']} | {data['basis']} | Energy: {data['energy']} | Time: {data['time']} seconds")
                result_col_1.write(
                    f"\# of Atoms: {data['atoms']} | \# of Bonds: {data['bonds']} | \# of Rings:  {data['rings']}")
                result_col_1.write(
                    f"Molecular Weight: {data['weight']}")
                # energy data
                result_col_1.write(f"Nuclear Energy: {data['nuclear energy']}")
                result_col_1.write(f"Electronic Energy: {data['electronic energy']}")
                result_col_1.write(f"Total Energy: {data['total energy']}")
                # thermodynamic data
                result_col_1.write(f"Entropy: {data['entropy']}")
                result_col_1.write(f"Zero-Point Energy: {data['zero point energy']}")
                result_col_1.write(f"0K Internal Energy: {data['0K internal energy']}")
                result_col_1.write(f"Internal Energy: {data['internal energy']}")
                result_col_1.write(f"Enthalpy: {data['enthalpy']}")
                result_col_1.write(f"Gibbs Free Energy: {data['gibbs free energy']}")

                with result_col_2:
                    speck_plot(
                        data['mol'], component_h=200, component_w=200, wbox_height="auto", wbox_width="auto")
                # linebreak
                st.write("")
                st.write("")

with tab2:
    st.subheader("Comparative Graphs (WIP)")
    # def count_atoms(m):
    #     atomic_count = defaultdict(lambda: 0)
    #     for atom in m.GetAtoms():
    #         atomic_count[atom.GetAtomicNum()] += 1
    #     return atomic_count

    # if 'results' in st.session_state and len(st.session_state['results']) > 1:
    #     st.subheader("Comparative Graphs")

    #     atom_counts = [count_atoms(result_item[4])
    #                    for result_item in st.session_state['results']]

    #     # Prepare datasets
    #     num_atoms = [result_item[4].GetNumAtoms()
    #                  for result_item in st.session_state['results']]
    #     num_bonds = [result_item[4].GetNumBonds()
    #                  for result_item in st.session_state['results']]
    #     num_conformers = [result_item[4].GetNumConformers()
    #                       for result_item in st.session_state['results']]
    #     # 6 and 1 are atomic code
    #     num_carbons = [atom_counts[i][6] for i in range(len(atom_counts))]
    #     num_hydrogens = [atom_counts[i][1] for i in range(len(atom_counts))]

    #     energies = [result_item[1]
    #                 for result_item in st.session_state['results']]
    #     runtimes = [result_item[2]
    #                 for result_item in st.session_state['results']]

    #     df_atoms = pd.DataFrame(
    #         {'Atoms': num_atoms, 'Energy': energies, 'Runtime': runtimes})
    #     df_bonds = pd.DataFrame(
    #         {'Bonds': num_bonds, 'Energy': energies, 'Runtime': runtimes})
    #     df_conformers = pd.DataFrame(
    #         {'Conformers': num_conformers, 'Energy': energies, 'Runtime': runtimes})
    #     df_carbons = pd.DataFrame(
    #         {'Carbons': num_carbons, 'Energy': energies, 'Runtime': runtimes})
    #     df_hydrogens = pd.DataFrame(
    #         {'Hydrogens': num_hydrogens, 'Energy': energies, 'Runtime': runtimes})

    #     # Generate Graphs
    #     for df, label in zip([df_atoms, df_bonds, df_carbons, df_hydrogens], ['Atoms', 'Bonds', 'Carbons', 'Hydrogens']):
    #         for target in ['Energy', 'Runtime']:
    #             st.markdown(f'### Number of {label} vs. {target}')

    #             # Linear Regression
    #             coeffs_linear = np.polyfit(
    #                 df[label].values, df[target].values, 1)
    #             poly1d_fn_linear = np.poly1d(coeffs_linear)
    #             x = np.linspace(min(df[label]), max(df[label]), 100)

    #             # Quadratic Regression
    #             coeffs_quad = np.polyfit(
    #                 df[label].values, df[target].values, 2)
    #             poly1d_fn_quad = np.poly1d(coeffs_quad)

    #             # Display Equations
    #             st.markdown(
    #                 f"<span style='color: red;'>Best Fit Linear Equation ({target}): Y = {coeffs_linear[0]:.4f}x + {coeffs_linear[1]:.4f}</span>", unsafe_allow_html=True)
    #             st.markdown(
    #                 f"<span style='color: green;'>Best Fit Quadratic Equation ({target}): Y = {coeffs_quad[0]:.4f}x² + {coeffs_quad[1]:.4f}x + {coeffs_quad[2]:.4f}</span>", unsafe_allow_html=True)

    #             # Create a DataFrame for the regression lines
    #             df_line = pd.DataFrame(
    #                 {label: x, 'Linear': poly1d_fn_linear(x), 'Quadratic': poly1d_fn_quad(x)})

    #             # Plot
    #             scatter = alt.Chart(df).mark_circle(size=60).encode(
    #                 x=label,
    #                 y=target,
    #                 tooltip=[label, target]
    #             )

    #             line_linear = alt.Chart(df_line).mark_line(color='red').encode(
    #                 x=label,
    #                 y='Linear'
    #             )

    #             line_quad = alt.Chart(df_line).mark_line(color='green').encode(
    #                 x=label,
    #                 y='Quadratic'
    #             )

    #             # Display the plot
    #             st.altair_chart(scatter + line_linear +
    #                             line_quad, use_container_width=True)

    #         # Display Equation
    #         # st.write(f"Best Fit Equation ({target}): Y = {coeffs[0]:.4f}x + {coeffs[1]:.4f}")

with tab3:
    with open('output-test.txt', 'r') as file:
        log_data = file.read()
        st.markdown(f'```\n{log_data}\n```')


# xyzview = py3Dmol.view(query='pdb:1A2C')
# xyzview.setStyle({'cartoon':{'color':'spectrum'}})
# showmol(xyzview, height = 500,width=800)

# def draw_with_spheres(mol):
#     v = py3Dmol.view(width=300,height=300)
#     IPythonConsole.addMolToView(mol,v)
#     v.zoomTo()
#     v.setStyle({'sphere':{'radius':0.3},'stick':{'radius':0.2}});
#     v.show()


# Attempt at creating an async queue, need to find a way to detect browser closing to stop the queue

# def runQueue():
#     for i in range(1, 10):
#         time.sleep(1)
#         print("test", str(i))


# if 'queue-running' not in st.session_state:
#     st.session_state['queue-running'] = True
#     t = threading.Thread(target=runQueue)
#     add_script_run_ctx(t)
#     t.start()

# components.html("""<html>
# <script>
#     const origClose = window.close;
#     window.close = () => {
#         console.log("asdf");
#         // origClose();
#     }
#     document.addEventListener("beforeunload", () => {
#                 alert(1);
#                 console.log(a.a.a.a);
#     })
# </script>
# <div style="color: white" onclick="">
#                 hihihihi
# </div>
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Jaydens-MacBook.local', release='23.0.0', version='Darwin Kernel Version 23.0.0: Fri Sep 15 14:41:34 PDT 2023; root:xnu-10002.1.13~1/RELEASE_ARM64_T8103', machine='arm64', processor='arm')  Threads 1
Python 3.8.18 | packaged by conda-forge | (default, Oct 10 2023, 15:46:56) 
[Clang 16.0.6 ]
numpy 1.24.4  scipy 1.10.1
Date: Tue Feb 27 00:08:39 2024
PySCF version 2.4.0
PySCF path  /Users/jaydenl/anaconda3/envs/pyscfui/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 5
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 C      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 H      0.624767000000   0.624767000000   0.624767000000 AA    1.180638521666   1.180638521666   1.180638521666 Bohr   0.0
[INPUT]  3 H     -0.624767000000  -0.624767000000   0.624767000000 AA   -1.180638521666  -1.180638521666   1.180638521666 Bohr   0.0
[INPUT]  4 H     -0.624767000000   0.624767000000  -0.624767000000 AA   -1.180638521666   1.180638521666  -1.180638521666 Bohr   0.0
[INPUT]  5 H      0.624767000000  -0.624767000000  -0.624767000000 AA    1.180638521666  -1.180638521666  -1.180638521666 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] H
[INPUT] 0    0    [3    /1   ]  33.87             0.006068
                                5.095             0.045308
                                1.159             0.202822
[INPUT] 0    0    [1    /1   ]  0.3258               1
[INPUT] 0    0    [1    /1   ]  0.1027               1
[INPUT] 1    0    [1    /1   ]  1.407                1
[INPUT] 1    0    [1    /1   ]  0.388                1
[INPUT] 2    0    [1    /1   ]  1.057                1
[INPUT] C
[INPUT] 0    0    [8    /2   ]  8236              0.000531 -0.000113
                                1235              0.004108 -0.000878
                                280.8             0.021087 -0.00454
                                79.27             0.081853 -0.018133
                                25.59             0.234817 -0.05576
                                8.997             0.434401 -0.126895
                                3.319             0.346129 -0.170352
                                0.3643            -0.008983 0.598684
[INPUT] 0    0    [1    /1   ]  0.9059               1
[INPUT] 0    0    [1    /1   ]  0.1285               1
[INPUT] 1    0    [3    /1   ]  18.71             0.014031
                                4.133             0.086866
                                1.2               0.290216
[INPUT] 1    0    [1    /1   ]  0.3827               1
[INPUT] 1    0    [1    /1   ]  0.1209               1
[INPUT] 2    0    [1    /1   ]  1.097                1
[INPUT] 2    0    [1    /1   ]  0.318                1
[INPUT] 3    0    [1    /1   ]  0.761                1

nuclear repulsion = 13.533123399669
number of shells = 33
number of NR pGTOs = 106
number of NR cGTOs = 86
basis = cc-pVTZ
ecp = {}
CPU time:       962.80


******** <class 'pyscf.scf.uhf.UHF'> ********
method = UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/_x/xd2ms3z958s6pfllwphw48vm0000gn/T/tmpuv9j7rjy
max_memory 4000 MB (current use 0 MB)
number electrons alpha = 5  beta = 5
Set gradient conv threshold to 3.16228e-05
E1 = -78.5470641773869  Ecoul = 24.99027042619465
init E= -40.0236703515232
cond(S) = 3592.2827229225286
    CPU time for initialize scf      3.47 sec, wall time      0.77 sec
  alpha nocc = 5  HOMO = -0.515155120993282  LUMO = 0.0826474789699365
  beta  nocc = 5  HOMO = -0.50587110332688  LUMO = 0.0844509031689659
  alpha mo_energy =
[-11.38608212  -1.29508177  -0.51515512  -0.51515512  -0.51515512
   0.08264748   0.17854781   0.17854781   0.17854781   0.3207784
   0.3207784    0.3207784    0.53686522   0.54954899   0.54954899
   0.54954899   0.61574888   0.61574888   0.69862185   1.0227467
   1.0227467    1.0227467    1.08466222   1.08466222   1.08466222
   1.26202788   1.26202788   1.26202788   1.46593062   1.46593062
   1.46593062   1.53493254   1.53493254   1.71108144   2.3180875
   2.3180875    2.3180875    2.45121329   2.87007613   2.87007613
   2.87007613   3.00301295   3.00301295   3.02249889   3.02249889
   3.02249889   3.18207741   3.18207741   3.18207741   3.53030416
   3.53030416   3.53030416   3.64897597   3.64897597   3.64897597
   3.71040831   3.71040831   3.80444618   4.00654286   4.00654286
   4.00654286   4.03789396   4.03789396   4.32642656   4.32642656
   4.32642656   4.4691328    4.4691328    4.4691328    4.72676226
   4.98597662   4.98597662   4.98597662   5.3825922    5.3825922
   5.3825922    5.41073644   5.41073644   5.41073644   5.47752693
   5.55967733   5.55967733   6.08582636   6.08582636   6.08582636
  14.48229262]
  beta  mo_energy =
[-11.40098189  -1.25400834  -0.5058711   -0.5058711   -0.5058711
   0.0844509    0.18006991   0.18006991   0.18006991   0.32104136
   0.32104136   0.32104136   0.53897374   0.55183752   0.55183752
   0.55183752   0.61762115   0.61762115   0.69866303   1.02210485
   1.02210485   1.02210485   1.08705845   1.08705845   1.08705845
   1.26206993   1.26206993   1.26206993   1.46677789   1.46677789
   1.46677789   1.53676865   1.53676865   1.71315959   2.31898845
   2.31898845   2.31898845   2.45355581   2.87266763   2.87266763
   2.87266763   3.00663451   3.00663451   3.02495963   3.02495963
   3.02495963   3.18516184   3.18516184   3.18516184   3.5302362
   3.5302362    3.5302362    3.649761     3.649761     3.649761
   3.71101556   3.71101556   3.80512028   4.00625961   4.00625961
   4.00625961   4.0376826    4.0376826    4.32609714   4.32609714
   4.32609714   4.46923756   4.46923756   4.46923756   4.72813272
   4.98637713   4.98637713   4.98637713   5.38371186   5.38371186
   5.38371186   5.41184802   5.41184802   5.41184802   5.47889156
   5.56058302   5.56058302   6.08719022   6.08719022   6.08719022
  14.48311624]
multiplicity <S^2> = 0.00084854016  2S+1 = 1.0016956
E1 = -80.01320798899323  Ecoul = 26.273895228559432
cycle= 1 E= -40.2061893607648  delta_E= -0.183  |g|= 0.11  |ddm|= 0.76
    CPU time for cycle= 1      1.69 sec, wall time      0.28 sec
  alpha nocc = 5  HOMO = -0.541226848283881  LUMO = 0.142555915311425
  beta  nocc = 5  HOMO = -0.540073358270161  LUMO = 0.142683859105637
  alpha mo_energy =
[-11.16964977  -0.94744291  -0.54122685  -0.54122685  -0.54122685
   0.14255592   0.22892283   0.22892283   0.22892283   0.36463143
   0.36463143   0.36463143   0.64267708   0.65046278   0.65046278
   0.65046278   0.684585     0.684585     0.75942844   1.07743454
   1.07743454   1.07743454   1.15993589   1.15993589   1.15993589
   1.32024881   1.32024881   1.32024881   1.53980504   1.53980504
   1.53980504   1.60164504   1.60164504   1.81777694   2.41786946
   2.41786946   2.41786946   2.56382516   2.99961769   2.99961769
   2.99961769   3.13804386   3.13804386   3.1460174    3.1460174
   3.1460174    3.31747907   3.31747907   3.31747907   3.61782244
   3.61782244   3.61782244   3.74716196   3.74716196   3.74716196
   3.80180666   3.80180666   3.89355192   4.09326216   4.09326216
   4.09326216   4.12064957   4.12064957   4.39176548   4.39176548
   4.39176548   4.55101871   4.55101871   4.55101871   4.85834822
   5.07738267   5.07738267   5.07738267   5.4974462    5.4974462
   5.4974462    5.52736155   5.52736155   5.52736155   5.59458802
   5.67048731   5.67048731   6.22881127   6.22881127   6.22881127
  14.6377829 ]
  beta  mo_energy =
[-11.1676033   -0.9425556   -0.54007336  -0.54007336  -0.54007336
   0.14268386   0.22935879   0.22935879   0.22935879   0.36386213
   0.36386213   0.36386213   0.64372647   0.65158768   0.65158768
   0.65158768   0.68421255   0.68421255   0.75767608   1.07610052
   1.07610052   1.07610052   1.16073952   1.16073952   1.16073952
   1.31972763   1.31972763   1.31972763   1.54065164   1.54065164
   1.54065164   1.60222331   1.60222331   1.81836044   2.41714169
   2.41714169   2.41714169   2.56434659   3.00115481   3.00115481
   3.00115481   3.13988953   3.13988953   3.14683882   3.14683882
   3.14683882   3.31941007   3.31941007   3.31941007   3.61710689
   3.61710689   3.61710689   3.74700396   3.74700396   3.74700396
   3.80175073   3.80175073   3.89309292   4.09233647   4.09233647
   4.09233647   4.11981394   4.11981394   4.39092278   4.39092278
   4.39092278   4.55060701   4.55060701   4.55060701   4.85870992
   5.07720396   5.07720396   5.07720396   5.49773337   5.49773337
   5.49773337   5.52760816   5.52760816   5.52760816   5.59498119
   5.67077622   5.67077622   6.22943379   6.22943379   6.22943379
  14.63898139]
multiplicity <S^2> = 0.0004196323  2S+1 = 1.0008389
E1 = -79.85651544619348  Ecoul = 26.11055651697327
cycle= 2 E= -40.2128355295512  delta_E= -0.00665  |g|= 0.0279  |ddm|= 0.0702
    CPU time for cycle= 2      3.78 sec, wall time      0.58 sec
  alpha nocc = 5  HOMO = -0.551669840215865  LUMO = 0.142579269512432
  beta  nocc = 5  HOMO = -0.550759781380554  LUMO = 0.14260992404247
  alpha mo_energy =
[-11.2208647   -0.95413236  -0.55166984  -0.55166984  -0.55166984
   0.14257927   0.22847478   0.22847478   0.22847478   0.36273437
   0.36273437   0.36273437   0.64063632   0.64610885   0.64610885
   0.64610885   0.6824151    0.6824151    0.7589361    1.07762875
   1.07762875   1.07762875   1.15503458   1.15503458   1.15503458
   1.31917801   1.31917801   1.31917801   1.53459745   1.53459745
   1.53459745   1.59923082   1.59923082   1.81384646   2.41616031
   2.41616031   2.41616031   2.55684831   2.9858573    2.9858573
   2.9858573    3.12720156   3.12720156   3.13856731   3.13856731
   3.13856731   3.30319816   3.30319816   3.30319816   3.61964104
   3.61964104   3.61964104   3.74422724   3.74422724   3.74422724
   3.80023099   3.80023099   3.89328807   4.09619828   4.09619828
   4.09619828   4.1240336    4.1240336    4.39618145   4.39618145
   4.39618145   4.55175975   4.55175975   4.55175975   4.85333658
   5.07582185   5.07582185   5.07582185   5.49358558   5.49358558
   5.49358558   5.52214293   5.52214293   5.52214293   5.58952232
   5.66647138   5.66647138   6.2202652    6.2202652    6.2202652
  14.60869441]
  beta  mo_energy =
[-11.21930851  -0.95094667  -0.55075978  -0.55075978  -0.55075978
   0.14260992   0.22876281   0.22876281   0.22876281   0.36225779
   0.36225779   0.36225779   0.64110981   0.64677155   0.64677155
   0.64677155   0.68222771   0.68222771   0.75768705   1.07673698
   1.07673698   1.07673698   1.15559614   1.15559614   1.15559614
   1.31883663   1.31883663   1.31883663   1.53512871   1.53512871
   1.53512871   1.59960603   1.59960603   1.81407784   2.41567634
   2.41567634   2.41567634   2.5571661    2.98689704   2.98689704
   2.98689704   3.12844289   3.12844289   3.1391029    3.1391029
   3.1391029    3.30447381   3.30447381   3.30447381   3.61915798
   3.61915798   3.61915798   3.74408305   3.74408305   3.74408305
   3.80018667   3.80018667   3.89293549   4.09556511   4.09556511
   4.09556511   4.12342839   4.12342839   4.39558738   4.39558738
   4.39558738   4.55145621   4.55145621   4.55145621   4.85352367
   5.07567615   5.07567615   5.07567615   5.49375256   5.49375256
   5.49375256   5.52228637   5.52228637   5.52228637   5.5897446
   5.66664017   5.66664017   6.22066366   6.22066366   6.22066366
  14.60950471]
multiplicity <S^2> = 0.0001919683  2S+1 = 1.0003839
E1 = -79.9457845365263  Ecoul = 26.199281594616295
cycle= 3 E= -40.213379542241  delta_E= -0.000544  |g|= 0.01  |ddm|= 0.0198
    CPU time for cycle= 3      3.66 sec, wall time      0.55 sec
  alpha nocc = 5  HOMO = -0.546458839339414  LUMO = 0.14391253910581
  beta  nocc = 5  HOMO = -0.545866660163607  LUMO = 0.143930462532015
  alpha mo_energy =
[-11.2024773   -0.94653976  -0.54645884  -0.54645884  -0.54645884
   0.14391254   0.22996236   0.22996236   0.22996236   0.36422778
   0.36422778   0.36422778   0.64437022   0.65041671   0.65041671
   0.65041671   0.68594429   0.68594429   0.76080788   1.07970777
   1.07970777   1.07970777   1.15848579   1.15848579   1.15848579
   1.32141523   1.32141523   1.32141523   1.53834949   1.53834949
   1.53834949   1.60223142   1.60223142   1.81911304   2.42087221
   2.42087221   2.42087221   2.56252571   2.9934424    2.9934424
   2.9934424    3.13459572   3.13459572   3.14483919   3.14483919
   3.14483919   3.31107561   3.31107561   3.31107561   3.62364566
   3.62364566   3.62364566   3.74933035   3.74933035   3.74933035
   3.80463602   3.80463602   3.89768437   4.10031163   4.10031163
   4.10031163   4.12819279   4.12819279   4.39934712   4.39934712
   4.39934712   4.55572786   4.55572786   4.55572786   4.86067187
   5.08067304   5.08067304   5.08067304   5.49972999   5.49972999
   5.49972999   5.52797048   5.52797048   5.52797048   5.59592547
   5.67237182   5.67237182   6.2283142    6.2283142    6.2283142
  14.62071747]
  beta  mo_energy =
[-11.2013736   -0.94439357  -0.54586666  -0.54586666  -0.54586666
   0.14393046   0.23018211   0.23018211   0.23018211   0.36389189
   0.36389189   0.36389189   0.6446783    0.65089177   0.65089177
   0.65089177   0.68582198   0.68582198   0.75990213   1.07907406
   1.07907406   1.07907406   1.15888813   1.15888813   1.15888813
   1.32117653   1.32117653   1.32117653   1.53874208   1.53874208
   1.53874208   1.60249883   1.60249883   1.81924448   2.42051288
   2.42051288   2.42051288   2.56273604   2.99418615   2.99418615
   2.99418615   3.13546862   3.13546862   3.14520728   3.14520728
   3.14520728   3.31197996   3.31197996   3.31197996   3.62329686
   3.62329686   3.62329686   3.74922256   3.74922256   3.74922256
   3.80460303   3.80460303   3.89742509   4.09985289   4.09985289
   4.09985289   4.12775579   4.12775579   4.39891939   4.39891939
   4.39891939   4.55550926   4.55550926   4.55550926   4.86078622
   5.08056494   5.08056494   5.08056494   5.49984222   5.49984222
   5.49984222   5.52806687   5.52806687   5.52806687   5.59607605
   5.67248823   5.67248823   6.22859291   6.22859291   6.22859291
  14.62127907]
multiplicity <S^2> = 9.7792309e-05  2S+1 = 1.0001956
E1 = -79.91423288337774  Ecoul = 26.167661098063327
cycle= 4 E= -40.2134483856454  delta_E= -6.88e-05  |g|= 0.00271  |ddm|= 0.00755
    CPU time for cycle= 4      3.73 sec, wall time      0.57 sec
  alpha nocc = 5  HOMO = -0.546722642008992  LUMO = 0.143932384341936
  beta  nocc = 5  HOMO = -0.546411148695695  LUMO = 0.14393968878416
  alpha mo_energy =
[-11.20363573  -0.94620565  -0.54672264  -0.54672264  -0.54672264
   0.14393238   0.23002896   0.23002896   0.23002896   0.36404888
   0.36404888   0.36404888   0.64428599   0.65034917   0.65034917
   0.65034917   0.68587412   0.68587412   0.7605296    1.07955442
   1.07955442   1.07955442   1.1583821    1.1583821    1.1583821
   1.32131607   1.32131607   1.32131607   1.53828987   1.53828987
   1.53828987   1.60220714   1.60220714   1.81899841   2.42072985
   2.42072985   2.42072985   2.56229449   2.99315249   2.99315249
   2.99315249   3.13436576   3.13436576   3.14460456   3.14460456
   3.14460456   3.31079212   3.31079212   3.31079212   3.62363035
   3.62363035   3.62363035   3.74924384   3.74924384   3.74924384
   3.80457512   3.80457512   3.89766076   4.10033423   4.10033423
   4.10033423   4.12828179   4.12828179   4.39949226   4.39949226
   4.39949226   4.55574446   4.55574446   4.55574446   4.86054498
   5.08065239   5.08065239   5.08065239   5.49964516   5.49964516
   5.49964516   5.52778763   5.52778763   5.52778763   5.59581745
   5.67228656   5.67228656   6.22809708   6.22809708   6.22809708
  14.61998926]
  beta  mo_energy =
[-11.20305263  -0.94503935  -0.54641115  -0.54641115  -0.54641115
   0.14393969   0.23015567   0.23015567   0.23015567   0.36386029
   0.36386029   0.36386029   0.64445548   0.65061648   0.65061648
   0.65061648   0.68581854   0.68581854   0.76001586   1.07919713
   1.07919713   1.07919713   1.15861069   1.15861069   1.15861069
   1.32118437   1.32118437   1.32118437   1.53851048   1.53851048
   1.53851048   1.60236162   1.60236162   1.81906334   2.42051826
   2.42051826   2.42051826   2.5624043    2.99356878   2.99356878
   2.99356878   3.13485446   3.13485446   3.14480909   3.14480909
   3.14480909   3.31130021   3.31130021   3.31130021   3.62343062
   3.62343062   3.62343062   3.74917978   3.74917978   3.74917978
   3.8045553    3.8045553    3.89751109   4.10006965   4.10006965
   4.10006965   4.12802901   4.12802901   4.39924777   4.39924777
   4.39924777   4.55561935   4.55561935   4.55561935   4.86059821
   5.08058864   5.08058864   5.08058864   5.49970378   5.49970378
   5.49970378   5.52784044   5.52784044   5.52784044   5.59589847
   5.67234906   5.67234906   6.22824787   6.22824787   6.22824787
  14.62028886]
multiplicity <S^2> = 3.1467061e-05  2S+1 = 1.0000629
E1 = -79.91587175915944  Ecoul = 26.16928755535046
cycle= 5 E= -40.21346080414  delta_E= -1.24e-05  |g|= 0.00137  |ddm|= 0.00403
    CPU time for cycle= 5      3.57 sec, wall time      0.62 sec
  alpha nocc = 5  HOMO = -0.546615304542183  LUMO = 0.143908220409392
  beta  nocc = 5  HOMO = -0.546581628702507  LUMO = 0.143910305528393
  alpha mo_energy =
[-11.20344245  -0.94583119  -0.5466153   -0.5466153   -0.5466153
   0.14390822   0.23007319   0.23007319   0.23007319   0.36394835
   0.36394835   0.36394835   0.6443196    0.65044716   0.65044716
   0.65044716   0.68583056   0.68583056   0.76029026   1.07937956
   1.07937956   1.07937956   1.1584517    1.1584517    1.1584517
   1.32123719   1.32123719   1.32123719   1.53836916   1.53836916
   1.53836916   1.60224778   1.60224778   1.81901744   2.42062133
   2.42062133   2.42062133   2.56230031   2.9932931    2.9932931
   2.9932931    3.13452752   3.13452752   3.14465514   3.14465514
   3.14465514   3.31096844   3.31096844   3.31096844   3.62352703
   3.62352703   3.62352703   3.74920134   3.74920134   3.74920134
   3.80453973   3.80453973   3.89758599   4.10021346   4.10021346
   4.10021346   4.12817594   4.12817594   4.39938843   4.39938843
   4.39938843   4.55567522   4.55567522   4.55567522   4.86055263
   5.08061432   5.08061432   5.08061432   5.49965603   5.49965603
   5.49965603   5.52777956   5.52777956   5.52777956   5.59583558
   5.6722946    5.6722946    6.22813982   6.22813982   6.22813982
  14.62007727]
  beta  mo_energy =
[-11.20335342  -0.9456525   -0.54658163  -0.54658163  -0.54658163
   0.14391031   0.23009499   0.23009499   0.23009499   0.36391872
   0.36391872   0.36391872   0.64434102   0.65048564   0.65048564
   0.65048564   0.68583024   0.68583024   0.76020489   1.07932403
   1.07932403   1.07932403   1.15848812   1.15848812   1.15848812
   1.32121806   1.32121806   1.32121806   1.53840261   1.53840261
   1.53840261   1.60227474   1.60227474   1.81901796   2.42057952
   2.42057952   2.42057952   2.56231161   2.99335481   2.99335481
   2.99335481   3.13460169   3.13460169   3.14468508   3.14468508
   3.14468508   3.31104663   3.31104663   3.31104663   3.62349307
   3.62349307   3.62349307   3.74918803   3.74918803   3.74918803
   3.8045357    3.8045357    3.89755922   4.10016687   4.10016687
   4.10016687   4.12813092   4.12813092   4.39934714   4.39934714
   4.39934714   4.55565403   4.55565403   4.55565403   4.86055337
   5.08060189   5.08060189   5.08060189   5.49966133   5.49966133
   5.49966133   5.52778672   5.52778672   5.52778672   5.59584545
   5.67230189   5.67230189   6.22815819   6.22815819   6.22815819
  14.62012178]
multiplicity <S^2> = 8.3011129e-07  2S+1 = 1.0000017
E1 = -79.91589034517682  Ecoul = 26.169301193742307
cycle= 6 E= -40.2134657517655  delta_E= -4.95e-06  |g|= 0.000276  |ddm|= 0.00371
    CPU time for cycle= 6      3.34 sec, wall time      0.65 sec
  alpha nocc = 5  HOMO = -0.546558212432241  LUMO = 0.143912353645281
  beta  nocc = 5  HOMO = -0.54656538588235  LUMO = 0.143913476799368
  alpha mo_energy =
[-11.2033175   -0.94569449  -0.54655821  -0.54655821  -0.54655821
   0.14391235   0.23008078   0.23008078   0.23008078   0.3639464
   0.3639464    0.3639464    0.64434317   0.6504744    0.6504744
   0.6504744    0.68582935   0.68582935   0.76025802   1.07935726
   1.07935726   1.07935726   1.15848562   1.15848562   1.15848562
   1.32123352   1.32123352   1.32123352   1.53839239   1.53839239
   1.53839239   1.60226802   1.60226802   1.81901679   2.42060554
   2.42060554   2.42060554   2.56233077   2.99335441   2.99335441
   2.99335441   3.13459709   3.13459709   3.14469373   3.14469373
   3.14469373   3.31103943   3.31103943   3.31103943   3.62350473
   3.62350473   3.62350473   3.74919449   3.74919449   3.74919449
   3.80454206   3.80454206   3.89756526   4.10017709   4.10017709
   4.10017709   4.12813168   4.12813168   4.39934366   4.39934366
   4.39934366   4.55565718   4.55565718   4.55565718   4.86055458
   5.08060137   5.08060137   5.08060137   5.49965919   5.49965919
   5.49965919   5.52779678   5.52779678   5.52779678   5.59584279
   5.67230052   5.67230052   6.22816106   6.22816106   6.22816106
  14.62014827]
  beta  mo_energy =
[-11.20331386  -0.94569412  -0.54656539  -0.54656539  -0.54656539
   0.14391348   0.2300829    0.2300829    0.2300829    0.36394497
   0.36394497   0.36394497   0.64434413   0.65047551   0.65047551
   0.65047551   0.68583191   0.68583191   0.76025392   1.07935554
   1.07935554   1.07935554   1.15848692   1.15848692   1.15848692
   1.32123357   1.32123357   1.32123357   1.53839353   1.53839353
   1.53839353   1.60226986   1.60226986   1.81901476   2.42060065
   2.42060065   2.42060065   2.56232892   2.99335528   2.99335528
   2.99335528   3.13459858   3.13459858   3.14469357   3.14469357
   3.14469357   3.3110417    3.3110417    3.3110417    3.62350239
   3.62350239   3.62350239   3.74919285   3.74919285   3.74919285
   3.8045415    3.8045415    3.89756322   4.10017351   4.10017351
   4.10017351   4.12812821   4.12812821   4.39934121   4.39934121
   4.39934121   4.5556559    4.5556559    4.5556559    4.8605521
   5.08060003   5.08060003   5.08060003   5.49965786   5.49965786
   5.49965786   5.52779654   5.52779654   5.52779654   5.59584217
   5.67229986   5.67229986   6.2281598    6.2281598    6.2281598
  14.62015001]
multiplicity <S^2> = 2.5488021e-09  2S+1 = 1
E1 = -79.9158185186604  Ecoul = 26.169229197812577
cycle= 7 E= -40.2134659211788  delta_E= -1.69e-07  |g|= 3.19e-05  |ddm|= 0.000805
    CPU time for cycle= 7      4.13 sec, wall time      0.68 sec
  alpha nocc = 5  HOMO = -0.546560630131037  LUMO = 0.143915857641739
  beta  nocc = 5  HOMO = -0.54656344627554  LUMO = 0.143916191300615
  alpha mo_energy =
[-11.20330562  -0.94568894  -0.54656063  -0.54656063  -0.54656063
   0.14391586   0.23008198   0.23008198   0.23008198   0.36394758
   0.36394758   0.36394758   0.64434983   0.6504762    0.6504762
   0.6504762    0.68583037   0.68583037   0.76025936   1.07935771
   1.07935771   1.07935771   1.15848861   1.15848861   1.15848861
   1.32123519   1.32123519   1.32123519   1.53839417   1.53839417
   1.53839417   1.60227039   1.60227039   1.81901973   2.42060426
   2.42060426   2.42060426   2.56233388   2.99335833   2.99335833
   2.99335833   3.13460127   3.13460127   3.14469624   3.14469624
   3.14469624   3.31104423   3.31104423   3.31104423   3.62350345
   3.62350345   3.62350345   3.74919381   3.74919381   3.74919381
   3.80454284   3.80454284   3.89756377   4.10017417   4.10017417
   4.10017417   4.12812768   4.12812768   4.3993403    4.3993403
   4.3993403    4.55565631   4.55565631   4.55565631   4.86055415
   5.0806002    5.0806002    5.0806002    5.49965835   5.49965835
   5.49965835   5.52779821   5.52779821   5.52779821   5.59584264
   5.67230041   5.67230041   6.22816117   6.22816117   6.22816117
  14.62015563]
  beta  mo_energy =
[-11.20330619  -0.94569113  -0.54656345  -0.54656345  -0.54656345
   0.14391619   0.23008233   0.23008233   0.23008233   0.3639476
   0.3639476    0.3639476    0.64434939   0.65047574   0.65047574
   0.65047574   0.68583137   0.68583137   0.7602592    1.07935802
   1.07935802   1.07935802   1.15848847   1.15848847   1.15848847
   1.32123552   1.32123552   1.32123552   1.53839396   1.53839396
   1.53839396   1.60227061   1.60227061   1.8190186    2.42060313
   2.42060313   2.42060313   2.56233297   2.9933576    2.9933576
   2.9933576    3.13460056   3.13460056   3.14469567   3.14469567
   3.14469567   3.31104371   3.31104371   3.31104371   3.62350315
   3.62350315   3.62350315   3.74919341   3.74919341   3.74919341
   3.8045427    3.8045427    3.89756345   4.10017362   4.10017362
   4.10017362   4.12812712   4.12812712   4.39934008   4.39934008
   4.39934008   4.55565618   4.55565618   4.55565618   4.86055311
   5.08059991   5.08059991   5.08059991   5.49965775   5.49965775
   5.49965775   5.52779797   5.52779797   5.52779797   5.5958422
   5.67230002   5.67230002   6.22816036   6.22816036   6.22816036
  14.62015527]
multiplicity <S^2> = 1.0310419e-10  2S+1 = 1
E1 = -79.91582802942801  Ecoul = 26.169238707161576
cycle= 8 E= -40.2134659225974  delta_E= -1.42e-09  |g|= 4.62e-06  |ddm|= 9.57e-05
    CPU time for cycle= 8      3.06 sec, wall time      0.56 sec
  alpha nocc = 5  HOMO = -0.546560617060802  LUMO = 0.143916305443029
  beta  nocc = 5  HOMO = -0.546561645274744  LUMO = 0.143916419899027
  alpha mo_energy =
[-11.20330426  -0.9456874   -0.54656062  -0.54656062  -0.54656062
   0.14391631   0.2300823    0.2300823    0.2300823    0.36394781
   0.36394781   0.36394781   0.64435004   0.65047642   0.65047642
   0.65047642   0.68583133   0.68583133   0.76025943   1.0793582
   1.0793582    1.0793582    1.15848909   1.15848909   1.15848909
   1.32123566   1.32123566   1.32123566   1.5383946    1.5383946
   1.5383946    1.60227093   1.60227093   1.81901981   2.42060455
   2.42060455   2.42060455   2.56233441   2.99335903   2.99335903
   2.99335903   3.13460201   3.13460201   3.14469695   3.14469695
   3.14469695   3.31104505   3.31104505   3.31104505   3.62350394
   3.62350394   3.62350394   3.74919441   3.74919441   3.74919441
   3.80454344   3.80454344   3.89756436   4.10017461   4.10017461
   4.10017461   4.1281281    4.1281281    4.39934073   4.39934073
   4.39934073   4.55565687   4.55565687   4.55565687   4.86055472
   5.0806008    5.0806008    5.0806008    5.49965898   5.49965898
   5.49965898   5.52779899   5.52779899   5.52779899   5.59584338
   5.67230108   5.67230108   6.22816193   6.22816193   6.22816193
  14.6201566 ]
  beta  mo_energy =
[-11.20330449  -0.94568836  -0.54656165  -0.54656165  -0.54656165
   0.14391642   0.23008242   0.23008242   0.23008242   0.36394782
   0.36394782   0.36394782   0.64434994   0.65047628   0.65047628
   0.65047628   0.68583166   0.68583166   0.76025942   1.07935832
   1.07935832   1.07935832   1.15848903   1.15848903   1.15848903
   1.32123578   1.32123578   1.32123578   1.53839453   1.53839453
   1.53839453   1.602271     1.602271     1.81901947   2.42060418
   2.42060418   2.42060418   2.5623341    2.99335877   2.99335877
   2.99335877   3.13460175   3.13460175   3.14469675   3.14469675
   3.14469675   3.31104485   3.31104485   3.31104485   3.62350385
   3.62350385   3.62350385   3.74919428   3.74919428   3.74919428
   3.80454339   3.80454339   3.89756426   4.10017444   4.10017444
   4.10017444   4.12812793   4.12812793   4.39934067   4.39934067
   4.39934067   4.55565683   4.55565683   4.55565683   4.86055437
   5.08060071   5.08060071   5.08060071   5.49965878   5.49965878
   5.49965878   5.52779891   5.52779891   5.52779891   5.59584323
   5.67230095   5.67230095   6.22816165   6.22816165   6.22816165
  14.62015646]
multiplicity <S^2> = 1.201883e-11  2S+1 = 1
E1 = -79.91582364416026  Ecoul = 26.169234321866767
cycle= 9 E= -40.2134659226245  delta_E= -2.71e-11  |g|= 1.51e-06  |ddm|= 5.75e-06
    CPU time for cycle= 9      3.65 sec, wall time      0.56 sec
  alpha nocc = 5  HOMO = -0.546561134877896  LUMO = 0.143916262933007
  beta  nocc = 5  HOMO = -0.546561652446067  LUMO = 0.143916320019524
  alpha mo_energy =
[-11.20330492  -0.9456881   -0.54656113  -0.54656113  -0.54656113
   0.14391626   0.23008227   0.23008227   0.23008227   0.36394774
   0.36394774   0.36394774   0.64434991   0.65047625   0.65047625
   0.65047625   0.68583126   0.68583126   0.76025936   1.07935813
   1.07935813   1.07935813   1.15848892   1.15848892   1.15848892
   1.32123559   1.32123559   1.32123559   1.53839445   1.53839445
   1.53839445   1.60227082   1.60227082   1.81901959   2.42060428
   2.42060428   2.42060428   2.5623341    2.99335868   2.99335868
   2.99335868   3.13460165   3.13460165   3.14469664   3.14469664
   3.14469664   3.3110447    3.3110447    3.3110447    3.62350377
   3.62350377   3.62350377   3.74919419   3.74919419   3.74919419
   3.80454326   3.80454326   3.89756418   4.10017443   4.10017443
   4.10017443   4.12812793   4.12812793   4.39934062   4.39934062
   4.39934062   4.55565672   4.55565672   4.55565672   4.86055439
   5.08060061   5.08060061   5.08060061   5.49965871   5.49965871
   5.49965871   5.52779874   5.52779874   5.52779874   5.59584311
   5.67230083   5.67230083   6.22816158   6.22816158   6.22816158
  14.62015616]
  beta  mo_energy =
[-11.20330504  -0.94568857  -0.54656165  -0.54656165  -0.54656165
   0.14391632   0.23008233   0.23008233   0.23008233   0.36394774
   0.36394774   0.36394774   0.64434985   0.65047617   0.65047617
   0.65047617   0.68583144   0.68583144   0.76025935   1.0793582
   1.0793582    1.0793582    1.15848889   1.15848889   1.15848889
   1.32123565   1.32123565   1.32123565   1.53839441   1.53839441
   1.53839441   1.60227086   1.60227086   1.81901941   2.42060409
   2.42060409   2.42060409   2.56233393   2.99335853   2.99335853
   2.99335853   3.13460151   3.13460151   3.14469654   3.14469654
   3.14469654   3.31104459   3.31104459   3.31104459   3.62350373
   3.62350373   3.62350373   3.74919412   3.74919412   3.74919412
   3.80454323   3.80454323   3.89756413   4.10017434   4.10017434
   4.10017434   4.12812785   4.12812785   4.39934059   4.39934059
   4.39934059   4.5556567    4.5556567    4.5556567    4.86055421
   5.08060056   5.08060056   5.08060056   5.49965861   5.49965861
   5.49965861   5.5277987    5.5277987    5.5277987    5.59584303
   5.67230076   5.67230076   6.22816143   6.22816143   6.22816143
  14.62015609]
multiplicity <S^2> = 3.176126e-12  2S+1 = 1
E1 = -79.91582484600175  Ecoul = 26.169235523705233
Extra cycle  E= -40.2134659226275  delta_E= -3.03e-12  |g|= 7.5e-07  |ddm|= 1.46e-06
    CPU time for scf_cycle     37.56 sec, wall time      6.39 sec
    CPU time for SCF     37.56 sec, wall time      6.39 sec
converged SCF energy = -40.2134659226275  <S^2> = 3.176126e-12  2S+1 = 1
    CPU time for UHF partial hessian     15.64 sec, wall time     14.74 sec
    CPU time for UHF hessian     42.25 sec, wall time     25.81 sec
E1 = -79.91582484600175  Ecoul = 26.169235523705233
E1 = -79.91582484600175  Ecoul = 26.169235523705233
