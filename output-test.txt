#INFO: **** input file is /Users/jaydenl/Dev/ASDRP/QCHEM/PySCF-UI/PySCFUI.py ****
import streamlit as st
import streamlit.components.v1 as components
from pyscf import gto, scf
from streamlit.runtime.scriptrunner import add_script_run_ctx
import threading
import time
from stmol import *
import py3Dmol
from rdkit import Chem
from rdkit.Chem import rdDetermineBonds
from rdkit.Chem.rdmolfiles import MolFromXYZFile
from rdkit.Chem import Descriptors, AllChem
from rdkit.Chem.Draw import MolToImage
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from collections import defaultdict
import altair as alt
import os
from pyscf.hessian import thermo
from streamlit_extras.row import row
from utils import getAtomicToMoleculeName
# R^2
from sklearn.metrics import r2_score
import requests
import timeit

st.set_page_config(
    page_title="PySCF UI",
    page_icon="ðŸ“ˆ",
)

# api_url = "http://0.0.0.0:8000/calculate"
moleculeNames = getAtomicToMoleculeName()
trend_threshold = 0.95

if 'queue' not in st.session_state:
    st.session_state['queue'] = []
if 'results' not in st.session_state:
    st.session_state['results'] = []
if 'computing' not in st.session_state:
    st.session_state['computing'] = False

# get all files in directory names precomputed_molecules:
precomputed_molecules = list(map(lambda x: x.split(
    ".")[0], os.listdir("precomputed_molecules")))


def compute_pyscf(atom, basis_option, verbose_option, temperature, pressure):
    # print(atom)
    # print(basis_option)
    # print(verbose_option)
    mol = gto.Mole()
    mol.atom = atom
    mol.basis = basis_option
    # mol.verbose = verbose_option
    mol.verbose = int(verbose_option[0])
    mol.output = 'output-test.txt'
    mol.build()

    # mf = scf.RHF(mol)
    # mf.kernel()
    mf =mol.UHF().run()
    hessian = mf.Hessian().kernel()
    harmanalysis = thermo.harmonic_analysis(mf.mol, hessian)
    thermo_info =  thermo.thermo(mf, harmanalysis['freq_au'], temperature, pressure)
    
    outputFile = open("output-test.txt", "r")
    # Extract energy and time information
    scf_cpu_time = None
    scf_wall_time = None
    hessian_cpu_time = None
    hessian_wall_time = None
    energy = None
    for line in outputFile.readlines():
        if line.startswith("    CPU time for SCF"):
            words = [i for i in line.split() if i]
            # ['CPU', 'time', 'for', 'SCF', '3.00', 'sec,', 'wall', 'time', '0.51', 'sec']
            scf_cpu_time = float(words[4])
            scf_wall_time = float(words[8])

        # elif line.startswith("converged SCF energy = "):
        #     energy = float([i for i in line.split() if i != ''][4])
        elif line.startswith("    CPU time for UHF hessian"):
            words = [i for i in line.split() if i]
            # ['CPU', 'time', 'for', 'UHF', 'hessian', '7.12', 'sec,', 'wall', 'time', '4.87', 'sec']
            hessian_cpu_time = float(words[5])
            hessian_wall_time = float(words[9])
    
    #Helmholtz Free Energy
    F_elec = (thermo_info['E_elec'][0] - temperature * thermo_info['S_elec' ][0], 'Eh')
    F_trans = (thermo_info['E_trans'][0] - temperature * thermo_info['S_trans'][0], 'Eh')
    F_rot = (thermo_info['E_rot'][0] - temperature * thermo_info['S_rot'][0], 'Eh')
    F_vib = (thermo_info['E_vib'][0] - temperature * thermo_info['S_vib'][0], 'Eh')
    F_tot = (F_elec[0] + F_trans[0] + F_rot[0] + F_vib[0], 'Eh') 
    
    #Massieu Potential/Helmholtz Free Entropy
    Î¦_elec = (F_elec[0]/(-1*temperature), 'Eh/K')
    Î¦_trans = (F_trans[0]/(-1*temperature), 'Eh/K')
    Î¦_rot = (F_rot[0]/(-1*temperature), 'Eh/K')
    Î¦_vib = (F_vib[0]/(-1*temperature), 'Eh/K')
    Î¦_tot = (F_tot[0]/(-1*temperature), 'Eh/K')    
    
    #Planck Potential/Gibbs Free Entropy
    Îž_elec = (thermo_info['G_elec'][0]/(-1*temperature), 'Eh/K')
    Îž_trans = (thermo_info['G_trans'][0]/(-1*temperature), 'Eh/K')
    Îž_rot = (thermo_info['G_rot'][0]/(-1*temperature), 'Eh/K')
    Îž_vib = (thermo_info['G_vib'][0]/(-1*temperature), 'Eh/K')
    Îž_tot = (thermo_info['G_tot'][0]/(-1*temperature), 'Eh/K')   
    
    data = {
        # 'energy': energy,
        'SCF CPU Runtime': scf_cpu_time,
        'SCF Wall Runtime': scf_wall_time,
        'Hessian CPU Runtime': hessian_cpu_time,
        'Hessian Wall Runtime': hessian_wall_time,
        'Converged SCF-HF Nuclear Energy (Ha)': mf.energy_nuc(),
        'Converged SCF-HF Electronic Energy (Ha)': mf.energy_elec(),
        'Converged SCF-HF Total Energy (Ha)': mf.energy_tot(),
        # thermodynamic data
        # Heat Capacity
        'Constant Volume Heat Capacity (Ha/K)': thermo_info['Cv_tot'][0],
        'Constant Pressure Heat Capacity (Ha/K)': thermo_info['Cp_tot'][0],
        'Zero-Point Energy (Ha)': thermo_info['ZPE'][0],
        '0K Internal Energy (Ha)': thermo_info['E_0K'][0],
        'Internal Energy (at given T) (Ha)': thermo_info['E_tot'][0],
            'Electronic Internal Energy (Ha)': thermo_info['E_elec'][0],
            'Vibrational Internal Energy (Ha)': thermo_info['E_vib'][0],
            'Translational Internal Energy (Ha)': thermo_info['E_trans'][0],
            'Rotational Internal Energy (Ha)': thermo_info['E_rot'][0],
        # enthalpy
        'Enthalpy (Ha)': thermo_info['H_tot'][0],
            'Electronic Enthalpy (Ha)': thermo_info['H_elec'][0],
            'Vibrational Enthalpy (Ha)': thermo_info['H_vib'][0],
            'Translational Enthalpy (Ha)': thermo_info['H_trans'][0],
            'Rotational Enthalpy (Ha)': thermo_info['H_rot'][0],
        # gibbs free energy
        'Gibbs Free Energy (Ha)': thermo_info['G_tot'][0],
            'Electronic Gibbs Free Energy (Ha)': thermo_info['G_elec'][0],
            'Vibrational Gibbs Free Energy (Ha)': thermo_info['G_vib'][0],
            'Translational Gibbs Free Energy (Ha)': thermo_info['G_trans'][0],
            'Rotational Gibbs Free Energy (Ha)': thermo_info['G_rot'][0],
        # Helmholtz free energy
        'Helmholtz Free Energy (Ha)': F_tot[0],
            'Electronic Helmholtz Free Energy (Ha)': F_elec[0],
            'Vibrational Helmholtz Free Energy (Ha)': F_vib[0],
            'Translational Helmholtz Free Energy (Ha)': F_trans[0],
            'Rotational Helmholtz Free Energy (Ha)': F_rot[0],
        # Entropy
        'Entropy (Ha/K)': thermo_info['S_tot'][0],
            'Electronic Entropy (Ha/K)': thermo_info['S_elec'][0],
            'Vibrational Entropy (Ha/K)': thermo_info['S_vib'][0],
            'Translational Entropy (Ha/K)': thermo_info['S_trans'][0],
            'Rotational Entropy (Ha/K)': thermo_info['S_rot'][0],
        # Massieu Potential/Helmholtz Free Entropy
        'Massieu Potential/Helmholtz Free Potential (Ha/K)': Î¦_tot[0],
            'Electronic Massieu Potential/Helmholtz Free Potential (Ha/K)': Î¦_elec[0],
            'Vibrational Massieu Potential/Helmholtz Free Potential (Ha/K)': Î¦_vib[0],
            'Translational Massieu Potential/Helmholtz Free Potential (Ha/K)': Î¦_trans[0],
            'Rotational Massieu Potential/Helmholtz Free Potential (Ha/K)': Î¦_rot[0],
        # Planck Potential/Gibbs Free Entropy
        'Planck Potential/Gibbs Free Potential (Ha/K)': Îž_tot[0],
            'Electronic Planck Potential/Gibbs Free Potential (Ha/K)': Îž_elec[0],
            'Vibrational Planck Potential/Gibbs Free Potential (Ha/K)': Îž_vib[0],
            'Translational Planck Potential/Gibbs Free Potential (Ha/K)': Îž_trans[0],
            'Rotational Planck Potential/Gibbs Free Potential (Ha/K)': Îž_rot[0],
    }

    return data


def getMoleculeName(atom):
    d = {}
    for line in atom.split("\n"):
        try:
            name = line.split()[0]
            if name in d:
                d[name] += 1
            else:
                d[name] = 1
        except:
            pass
    name = ""
    for key,value in d.items():
        if value > 1:
            name += key + str(value)
        else:
            name += key
    return name


# Streamlit layout
st.title("PySCF")

# Function to process the uploaded text file


def process_text_file(uploaded_file):
    if uploaded_file is not None:
        # Read the contents of the file
        text_contents = uploaded_file.getvalue().decode("utf-8")
        return text_contents
    else:
        return None


def addToQueue(atom, basis):
    st.session_state['queue'].append((atom, basis))


tabDatabase, tabTextInput, tabFileInput = st.tabs(
    ["Database", "Text Input", "File Input"])

basis_option = st.selectbox(
    "Basis", ["cc-pVTZ", "cc-pVDZ", "cc-pVQZ", "cc-pV5Z", "sto-3g"])
verbose_option = st.selectbox("Verbose", index=2, options=[
                              "3, energy only", "4, cycles and energy", "5, cycles energy and runtime", "6", "7", "8", "9, max"])
# verbose_option = st.slider("Verbose", min_value=0, max_value=9, value=2)

#Second Input (NEW) - Pressure of the system
# pressure = 101325 #in Pascals (Pa), 101325 Pa = 1 atm
#Third Input (NEW) - Temperature of the system
# temperature = 298.15 #in K, 298.15K = room temperature (25 degrees Celsius) 
thermo_row = row(2)
temp = thermo_row.number_input("Temperature (K)", min_value=0.0, value=298.15)
press = thermo_row.number_input("Pressure (Pa)", min_value=0.0, value=101325.0)

with tabDatabase:
    selectedMolecule = st.selectbox(
        'Search Molecule Database', precomputed_molecules)
    if st.button('Add to Queue', use_container_width=True, key="db"):
        if selectedMolecule:
            parseDatafile = open(
                "precomputed_molecules/" + selectedMolecule + ".geom.txt", "r").readlines()[4:]
            parseDatafile = "\n".join(parseDatafile[:-1])
            addToQueue(parseDatafile, basis_option)
        else:
            st.warning(
                "Please select a molecule using dropdown menu or inputting a text file.")

with tabTextInput:
    # Create a Streamlit button which gives example
    with st.expander("See Example Input"):
        st.write("C 0.0000000 0.0000000 0.0000000")
        st.write("H 0.6311940 0.6311940 0.6311940")
        st.write("H -0.6311940 -0.6311940 0.6311940")
        st.write("H -0.6311940 0.6311940 -0.6311940")
        st.write("H 0.6311940 -0.6311940 -0.631194")
    # Fills xyz_input text area to the contents of the uploaded file
    xyz_input = st.text_area("XYZ Input", key="textxyz")

    if st.button('Add to Queue', use_container_width=True, key="text"):
        if xyz_input:
            addToQueue(xyz_input, basis_option)
        else:
            st.warning(
                "Please provide an XYZ input using the text box or inputting a text file.")

with tabFileInput:
    # Create a Streamlit button which gives example
    with st.expander("See Example Input"):
        st.write("C 0.0000000 0.0000000 0.0000000")
        st.write("H 0.6311940 0.6311940 0.6311940")
        st.write("H -0.6311940 -0.6311940 0.6311940")
        st.write("H -0.6311940 0.6311940 -0.6311940")
        st.write("H 0.6311940 -0.6311940 -0.631194")
    # Display file uploader for a single text file and processes it
    uploaded_file = st.file_uploader("Upload a XYZ input", type=["txt"])
    text_contents = process_text_file(uploaded_file)
    xyz_input = st.text_area(
        "XYZ Input", value=text_contents, key="filexyz") if text_contents else None
    if st.button('Add to Queue', use_container_width=True, key="filequeue"):
        if text_contents:
            addToQueue(text_contents, basis_option)
        else:
            st.warning(
                "Please provide an XYZ input using file uploader")

col1, col2, col3, col4 = st.columns(4, gap="small")

# if col1.button("Add to Queue"):
#     if xyz_input:
#         addToQueue(xyz_input)
#     else:
#         st.warning(
#             "Please provide an XYZ input using the text box or inputting a text file.")

# Computes only if something is added to the queue; grayed out otherwise
compute_disabled = len(st.session_state['queue']) == 0
if st.button("Compute", disabled=compute_disabled, type="primary", use_container_width=True) or st.session_state['computing'] == True:
    if len(st.session_state['queue']) > 0:
        with st.spinner("Computing " + getMoleculeName(st.session_state['queue'][0][0]) + "..."):
            st.session_state['computing'] = True
            atom = st.session_state['queue'][0][0]
            basis = st.session_state['queue'][0][1]
            st.session_state['queue'].pop(0)
            # st.write("Computing...")
            # progress_text = "Computing..."
            # my_bar = st.progress(0, text=progress_text)

            # for percent_complete in range(100):
            #     time.sleep(0.01)
            #     my_bar.progress(percent_complete + 1, text=progress_text)
            # time.sleep(1)
            # my_bar.empty()

            # Delete empty lines
            parsed = [line for line in atom.splitlines() if line.strip() != ""]
            xyz = "\n".join(parsed)
            mol = f"{len(parsed)}\nname\n{str(xyz)}"

            # output xyz into molecule.xyz file
            with open('molecule.xyz', 'w') as f:
                f.write(f"{len(parsed)}\nhi\n{str(xyz)}")

            raw_mol = MolFromXYZFile('molecule.xyz')
            rdkit_mol = Chem.Mol(raw_mol)
            rdDetermineBonds.DetermineBonds(rdkit_mol, charge=0)
            tmpmol = Chem.AddHs(rdkit_mol)
            AllChem.EmbedMolecule(tmpmol)
            smiles = Chem.MolToSmiles(tmpmol)
            start = timeit.default_timer()
            data = compute_pyscf(
                atom, basis, verbose_option, temp, press)
            total_time = timeit.default_timer() - start
            
            # tdict = {"atom": atom, "basis_option": basis, "verbose_option": verbose_option, "temperature": temp, "pressure": press}
            # response = requests.post(api_url, params=tdict)
            
            # if response.status_code == 200:
            #     data = response.json()
            #     print("Yay, it worked!")
            # else:
            #     print(f"Error: {response.status_code} - {response.text}")   
            data['Atoms'] = rdkit_mol.GetNumAtoms()
            data['Bonds'] = rdkit_mol.GetNumBonds()
            data['Rings'] = rdkit_mol.GetRingInfo().NumRings()
            data['Weight'] = Descriptors.MolWt(rdkit_mol)
            data['Molecule'] = mol
            data['Rdkit Molecule'] = rdkit_mol
            data['Basis'] = basis
            data['Molecule Name'] = getMoleculeName(atom)
            data['Smiles'] = smiles
            data['Real Compute Time'] = total_time
            
            st.session_state['results'].append(data)
            st.rerun()
            
    elif st.session_state['computing'] == True:
        st.session_state['computing'] = False
    else:
        st.warning("Please add an XYZ input to the queue.")

if 'queue' in st.session_state:
    st.subheader("Queue")
    for queue_item in st.session_state['queue']:
        st.write(f"{getMoleculeName(queue_item[0])} | {queue_item[1]}")


tab1, tab2, tab3 = st.tabs(['Results', 'View Graphs', 'View Logs'])

with tab1:
    if 'results' in st.session_state:
        st.subheader("Results")
        st.text("Total Real Runtime: " + str(round(sum(x['Real Compute Time'] for x in st.session_state['results']),2)) + "s")
        st.text("Total Log CPU Runime: " + str(round(sum(x['SCF CPU Runtime'] + x['Hessian CPU Runtime'] for x in st.session_state['results']),2)) + "s")
        st.text("Total Log Wall Runtime: " + str(round(sum(x['SCF Wall Runtime'] + x['Hessian Wall Runtime'] for x in st.session_state['results']),2)) + "s")
        st.text("Log SCF Wall Runtime: " + str(round(sum(x['SCF Wall Runtime'] for x in st.session_state['results']),2)) + "s")
        st.text("Log Hessian Wall Runtime: " + str(round(sum(x['Hessian Wall Runtime'] for x in st.session_state['results']),2)) + "s")
        
        
        for result_item in st.session_state['results']:
            data = result_item
            energy = {
                'Internal Energy (E - Ha)':[data['Internal Energy (at given T) (Ha)'],data['Electronic Internal Energy (Ha)'],data['Vibrational Internal Energy (Ha)'],data['Translational Internal Energy (Ha)'],data['Rotational Internal Energy (Ha)']],
                'Helmholtz Free Energy (F - Ha)':[data['Helmholtz Free Energy (Ha)'],data['Electronic Helmholtz Free Energy (Ha)'],data['Vibrational Helmholtz Free Energy (Ha)'],data['Translational Helmholtz Free Energy (Ha)'],data['Rotational Helmholtz Free Energy (Ha)']],
                'Gibbs Free Energy (G - Ha)':[data['Gibbs Free Energy (Ha)'],data['Electronic Gibbs Free Energy (Ha)'],data['Vibrational Gibbs Free Energy (Ha)'],data['Translational Gibbs Free Energy (Ha)'],data['Rotational Gibbs Free Energy (Ha)']],
                'Enthalpy (H - Ha)':[data['Enthalpy (Ha)'],data['Electronic Enthalpy (Ha)'],data['Vibrational Enthalpy (Ha)'],data['Translational Enthalpy (Ha)'],data['Rotational Enthalpy (Ha)']],  
            }
            pd.set_option("display.precision", 16)
            enerdf = pd.DataFrame(energy, index = ["Total","Electronic","Vibrational","Translational","Rotational"])
            
            entropy = {
                'Entropy (S - Ha/K)':[data['Entropy (Ha/K)'],data['Electronic Entropy (Ha/K)'],data['Vibrational Entropy (Ha/K)'],data['Translational Entropy (Ha/K)'],data['Rotational Entropy (Ha/K)']],
                'Helmholtz Free Entropy (Î¦ - Ha/K)':[data['Massieu Potential/Helmholtz Free Potential (Ha/K)'],data['Electronic Massieu Potential/Helmholtz Free Potential (Ha/K)'],data['Vibrational Massieu Potential/Helmholtz Free Potential (Ha/K)'],data['Translational Massieu Potential/Helmholtz Free Potential (Ha/K)'],data['Rotational Massieu Potential/Helmholtz Free Potential (Ha/K)']],
                'Gibbs Free Entropy (Îž - Ha/K)':[data['Planck Potential/Gibbs Free Potential (Ha/K)'],data['Electronic Planck Potential/Gibbs Free Potential (Ha/K)'],data['Vibrational Planck Potential/Gibbs Free Potential (Ha/K)'],data['Translational Planck Potential/Gibbs Free Potential (Ha/K)'],data['Rotational Planck Potential/Gibbs Free Potential (Ha/K)']],
            }
            
            excluded_keys = ['Internal Energy (at given T) (Ha)', 'Electronic Internal Energy (Ha)', 'Vibrational Internal Energy (Ha)', 'Translational Internal Energy (Ha)', 'Rotational Internal Energy (Ha)', 'Helmholtz Free Energy (Ha)', 'Electronic Helmholtz Free Energy (Ha)', 'Vibrational Helmholtz Free Energy (Ha)', 'Translational Helmholtz Free Energy (Ha)', 'Rotational Helmholtz Free Energy (Ha)', 'Gibbs Free Energy (Ha)', 'Electronic Gibbs Free Energy (Ha)', 'Vibrational Gibbs Free Energy (Ha)', 'Translational Gibbs Free Energy (Ha)', 'Rotational Gibbs Free Energy (Ha)', 'Enthalpy (Ha)', 'Electronic Enthalpy (Ha)', 'Vibrational Enthalpy (Ha)', 'Translational Enthalpy (Ha)', 'Rotational Enthalpy (Ha)', 'Entropy (Ha/K)', 'Electronic Entropy (Ha/K)', 'Vibrational Entropy (Ha/K)', 'Translational Entropy (Ha/K)', 'Rotational Entropy (Ha/K)', 'Massieu Potential/Helmholtz Free Potential (Ha/K)', 'Electronic Massieu Potential/Helmholtz Free Potential (Ha/K)', 'Vibrational Massieu Potential/Helmholtz Free Potential (Ha/K)', 'Translational Massieu Potential/Helmholtz Free Potential (Ha/K)', 'Rotational Massieu Potential/Helmholtz Free Potential (Ha/K)', 'Planck Potential/Gibbs Free Potential (Ha/K)', 'Electronic Planck Potential/Gibbs Free Potential (Ha/K)', 'Vibrational Planck Potential/Gibbs Free Potential (Ha/K)', 'Translational Planck Potential/Gibbs Free Potential (Ha/K)', 'Rotational Planck Potential/Gibbs Free Potential (Ha/K)'] + ['Molecule', 'Rdkit Molecule', 'Basis', 'Molecule Name', 'Atoms', 'Bonds', 'Rings', 'Weight', 'SCF CPU Runtime', 'SCF Wall Runtime', 'Hessian CPU Runtime', 'Hessian Wall Runtime']
            
            pd.set_option("display.precision", 16)
            entrodf = pd.DataFrame(entropy, index = ["Total","Electronic","Vibrational","Translational","Rotational"])
            
            with st.expander(data['Molecule Name'] + ": " + str(round(data['Real Compute Time'], 2)) + "s"):
                result_col_1, result_col_2 = st.columns([2, 1])
                result_col_1.write(
                    f"{data['Molecule Name']} | {data['Basis']}")
                result_col_1.write(f"SCF CPU Runtime: {data['SCF CPU Runtime']}s")
                result_col_1.write(f"SCF Wall Runtime: {data['SCF Wall Runtime']}s")
                result_col_1.write(f"Hessian CPU Runtime: {data['Hessian CPU Runtime']}s")
                result_col_1.write(f"Hessian Wall Runtime: {data['Hessian Wall Runtime']}s")
                result_col_1.write(
                    f"\# of Atoms: {data['Atoms']} | \# of Bonds: {data['Bonds']} | \# of Rings:  {data['Rings']}")
                result_col_1.write(
                    f"Molecular Weight: {data['Weight']}")
                # energy data
                for key, value in data.items():
                    if key not in excluded_keys:
                        result_col_1.write(f"{key}: {value}")

                with result_col_2:
                    speck_plot(
                        data['Molecule'], component_h=200, component_w=200, wbox_height="auto", wbox_width="auto")
                    st.image(MolToImage(data['Rdkit Molecule'], size=(200, 200)))
                    st.image(MolToImage(Chem.MolFromSmiles(data['Smiles']), size=(200, 200)))
                # linebreak
                st.write("")
                st.write("")
                
                
                col_config = {i:st.column_config.NumberColumn(i, format="%.4f") for i in enerdf.columns}
                st.dataframe(
                    data=enerdf, 
                    use_container_width=True,
                    column_config=col_config
                )
                col_config = {i:st.column_config.NumberColumn(i, format="%.4f") for i in entrodf.columns}
                st.dataframe(
                    data=entrodf, 
                    use_container_width=True,
                    column_config=col_config
                )
                

with tab2:
    # st.subheader("Comparative Graphs (WIP)")
    
    def count_atoms(molecule):
    # Check that there is a valid molecule
        if molecule:

            # Add hydrogen atoms--RDKit excludes them by default
            molecule_with_Hs = Chem.AddHs(molecule)
            comp = defaultdict(lambda: 0)

            # Get atom counts
            for atom in molecule_with_Hs.GetAtoms():
                comp[atom.GetAtomicNum()] += 1

            # # If charged, add charge as "atomic number" 0
            # charge = GetFormalCharge(molecule_with_Hs)
            # if charge != 0:
            #     comp[0] = charge
            return comp

    if 'results' in st.session_state and len(st.session_state['results']) > 1:
        st.subheader("Comparative Graphs")

        independent = [
            'Atoms',
            'Bonds',
            # 'Rings',
            'Weight',
        ]
        
        exclude = [
            'Basis',
            'Rings',
            'Rdkit Molecule',
            'Converged SCF-HF Electronic Energy (Ha)',
            'Molecule',
            'Molecule Name',
            'Smiles',
            'Real Compute Time'
        ]
        
        dependent = [i for i in st.session_state['results'][0].keys() if i not in independent]
        dependent = [i for i in dependent if i not in exclude]
        # print(dependent)
        
        df_columns = list(st.session_state['results'][0].keys())
        df_columns.remove('Rdkit Molecule')
        
        df = pd.DataFrame(st.session_state['results'], columns=df_columns)
        
        
        for label in independent:
            for target in dependent:
                # print(label, target)
                # print(df[label].values, df[target].values)
                # Linear Regression
                coeffs_linear = np.polyfit(
                    df[label].values, df[target].values, 1)
                poly1d_fn_linear = np.poly1d(coeffs_linear)
                x = np.linspace(min(df[label]), max(df[label]), 100)

                # Quadratic Regression
                coeffs_quad = np.polyfit(
                    df[label].values, df[target].values, 2)
                poly1d_fn_quad = np.poly1d(coeffs_quad)
                
                # calculate R^2
                r2_linear = r2_score(df[target], poly1d_fn_linear(df[label]))
                r2_quad = r2_score(df[target], poly1d_fn_quad(df[label]))
                
                if r2_linear >= trend_threshold or r2_quad >= trend_threshold:
                    st.markdown(f'### Number of {label} vs. {target}')
                    # Display Equations
                    st.markdown(
                        f"<span style='color: red;'>Best Fit Linear Equation ({target}): Y = {coeffs_linear[0]:.4f}x + {coeffs_linear[1]:.4f} (R^2 = {r2_linear:.4f})</span>", unsafe_allow_html=True)
                    st.markdown(
                        f"<span style='color: green;'>Best Fit Quadratic Equation ({target}): Y = {coeffs_quad[0]:.4f}xÂ² + {coeffs_quad[1]:.4f}x + {coeffs_quad[2]:.4f} (R^2 = {r2_quad:.4f})</span>", unsafe_allow_html=True)

                    # Create a DataFrame for the regression lines
                    df_line = pd.DataFrame(
                        {label: x, 'Linear': poly1d_fn_linear(x), 'Quadratic': poly1d_fn_quad(x)})

                    # Plot
                    scatter = alt.Chart(df).mark_circle(size=60).encode(
                        x=label,
                        y=target,
                        tooltip=[label, target]
                    )

                    line_linear = alt.Chart(df_line).mark_line(color='red').encode(
                        x=label,
                        y='Linear'
                    )

                    line_quad = alt.Chart(df_line).mark_line(color='green').encode(
                        x=label,
                        y='Quadratic'
                    )

                    # Display the plot
                    st.altair_chart(scatter + line_linear +
                                    line_quad, use_container_width=True)
        
        
        # for atomic_num, count in count_atoms(st.session_state['results'][0]['rdkit_mol']).items():
        
        # atom_counts = [count_atoms(result_item['rdkit_mol'])
        #                for result_item in st.session_state['results']]

        # # Prepare datasets
        # num_atoms = [result_item['atoms']
        #              for result_item in st.session_state['results']]
        # num_bonds = [result_item['bonds'].GetNumBonds()
        #              for result_item in st.session_state['results']]
        # num_conformers = [result_item[4].GetNumConformers()
        #                   for result_item in st.session_state['results']]
        # # 6 and 1 are atomic code
        # num_carbons = [atom_counts[i][6] for i in range(len(atom_counts))]
        # num_hydrogens = [atom_counts[i][1] for i in range(len(atom_counts))]

        # energies = [result_item[1]
        #             for result_item in st.session_state['results']]
        # runtimes = [result_item[2]
        #             for result_item in st.session_state['results']]

        # df_atoms = pd.DataFrame(
        #     {'Atoms': num_atoms, 'Energy': energies, 'Runtime': runtimes})
        # df_bonds = pd.DataFrame(
        #     {'Bonds': num_bonds, 'Energy': energies, 'Runtime': runtimes})
        # df_conformers = pd.DataFrame(
        #     {'Conformers': num_conformers, 'Energy': energies, 'Runtime': runtimes})
        # df_carbons = pd.DataFrame(
        #     {'Carbons': num_carbons, 'Energy': energies, 'Runtime': runtimes})
        # df_hydrogens = pd.DataFrame(
        #     {'Hydrogens': num_hydrogens, 'Energy': energies, 'Runtime': runtimes})

        # Generate Graphs
        # for df, label in zip([df_atoms, df_bonds, df_carbons, df_hydrogens], ['Atoms', 'Bonds', 'Carbons', 'Hydrogens']):
        #     for target in ['Energy', 'Runtime']:
        #         st.markdown(f'### Number of {label} vs. {target}')

        #         # Linear Regression
        #         coeffs_linear = np.polyfit(
        #             df[label].values, df[target].values, 1)
        #         poly1d_fn_linear = np.poly1d(coeffs_linear)
        #         x = np.linspace(min(df[label]), max(df[label]), 100)

        #         # Quadratic Regression
        #         coeffs_quad = np.polyfit(
        #             df[label].values, df[target].values, 2)
        #         poly1d_fn_quad = np.poly1d(coeffs_quad)

        #         # Display Equations
        #         st.markdown(
        #             f"<span style='color: red;'>Best Fit Linear Equation ({target}): Y = {coeffs_linear[0]:.4f}x + {coeffs_linear[1]:.4f}</span>", unsafe_allow_html=True)
        #         st.markdown(
        #             f"<span style='color: green;'>Best Fit Quadratic Equation ({target}): Y = {coeffs_quad[0]:.4f}xÂ² + {coeffs_quad[1]:.4f}x + {coeffs_quad[2]:.4f}</span>", unsafe_allow_html=True)

        #         # Create a DataFrame for the regression lines
        #         df_line = pd.DataFrame(
        #             {label: x, 'Linear': poly1d_fn_linear(x), 'Quadratic': poly1d_fn_quad(x)})

        #         # Plot
        #         scatter = alt.Chart(df).mark_circle(size=60).encode(
        #             x=label,
        #             y=target,
        #             tooltip=[label, target]
        #         )

        #         line_linear = alt.Chart(df_line).mark_line(color='red').encode(
        #             x=label,
        #             y='Linear'
        #         )

        #         line_quad = alt.Chart(df_line).mark_line(color='green').encode(
        #             x=label,
        #             y='Quadratic'
        #         )

        #         # Display the plot
        #         st.altair_chart(scatter + line_linear +
        #                         line_quad, use_container_width=True)

        #     # Display Equation
        #     # st.write(f"Best Fit Equation ({target}): Y = {coeffs[0]:.4f}x + {coeffs[1]:.4f}")

with tab3:
    with open('output-test.txt', 'r') as file:
        log_data = file.read()
        st.markdown(f'```\n{log_data}\n```')


# xyzview = py3Dmol.view(query='pdb:1A2C')
# xyzview.setStyle({'cartoon':{'color':'spectrum'}})
# showmol(xyzview, height = 500,width=800)

# def draw_with_spheres(mol):
#     v = py3Dmol.view(width=300,height=300)
#     IPythonConsole.addMolToView(mol,v)
#     v.zoomTo()
#     v.setStyle({'sphere':{'radius':0.3},'stick':{'radius':0.2}});
#     v.show()


# Attempt at creating an async queue, need to find a way to detect browser closing to stop the queue

# def runQueue():
#     for i in range(1, 10):
#         time.sleep(1)
#         print("test", str(i))


# if 'queue-running' not in st.session_state:
#     st.session_state['queue-running'] = True
#     t = threading.Thread(target=runQueue)
#     add_script_run_ctx(t)
#     t.start()

# components.html("""<html>
# <script>
#     const origClose = window.close;
#     window.close = () => {
#         console.log("asdf");
#         // origClose();
#     }
#     document.addEventListener("beforeunload", () => {
#                 alert(1);
#                 console.log(a.a.a.a);
#     })
# </script>
# <div style="color: white" onclick="">
#                 hihihihi
# </div>
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Jaydens-MacBook.local', release='23.0.0', version='Darwin Kernel Version 23.0.0: Fri Sep 15 14:41:34 PDT 2023; root:xnu-10002.1.13~1/RELEASE_ARM64_T8103', machine='arm64', processor='arm')  Threads 1
Python 3.8.18 | packaged by conda-forge | (default, Oct 10 2023, 15:46:56) 
[Clang 16.0.6 ]
numpy 1.24.4  scipy 1.10.1
Date: Sat Jun 29 12:22:26 2024
PySCF version 2.4.0
PySCF path  /Users/jaydenl/anaconda3/envs/pyscfui/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 3
[INPUT] num. electrons = 22
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 N      0.000000000000   0.000000000000  -1.162966000000 AA    0.000000000000   0.000000000000  -2.197687232181 Bohr   0.0
[INPUT]  2 N      0.000000000000   0.000000000000  -0.080619000000 AA    0.000000000000   0.000000000000  -0.152347830436 Bohr   0.0
[INPUT]  3 O      0.000000000000   0.000000000000   1.088137000000 AA    0.000000000000   0.000000000000   2.056280916006 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] N
[INPUT] 0    0    [8    /2   ]  11420             0.000523 -0.000115
                                1712              0.004045 -0.000895
                                389.3             0.020775 -0.004624
                                110               0.080727 -0.018528
                                35.57             0.233074 -0.057339
                                12.54             0.433501 -0.132076
                                4.644             0.347472 -0.17251
                                0.5118            -0.008508 0.599944
[INPUT] 0    0    [1    /1   ]  1.293                1
[INPUT] 0    0    [1    /1   ]  0.1787               1
[INPUT] 1    0    [3    /1   ]  26.63             0.01467
                                5.948             0.091764
                                1.742             0.298683
[INPUT] 1    0    [1    /1   ]  0.555                1
[INPUT] 1    0    [1    /1   ]  0.1725               1
[INPUT] 2    0    [1    /1   ]  1.654                1
[INPUT] 2    0    [1    /1   ]  0.469                1
[INPUT] 3    0    [1    /1   ]  1.093                1
[INPUT] O
[INPUT] 0    0    [8    /2   ]  15330             0.000508 -0.000115
                                2299              0.003929 -0.000895
                                522.4             0.020243 -0.004636
                                147.3             0.079181 -0.018724
                                47.55             0.230687 -0.058463
                                16.76             0.433118 -0.136463
                                6.207             0.35026 -0.17574
                                0.6882            -0.008154 0.603418
[INPUT] 0    0    [1    /1   ]  1.752                1
[INPUT] 0    0    [1    /1   ]  0.2384               1
[INPUT] 1    0    [3    /1   ]  34.46             0.015928
                                7.749             0.09974
                                2.28              0.310492
[INPUT] 1    0    [1    /1   ]  0.7156               1
[INPUT] 1    0    [1    /1   ]  0.214                1
[INPUT] 2    0    [1    /1   ]  2.314                1
[INPUT] 2    0    [1    /1   ]  0.645                1
[INPUT] 3    0    [1    /1   ]  1.428                1

nuclear repulsion = 62.4761823453681
number of shells = 27
number of NR pGTOs = 126
number of NR cGTOs = 90
basis = cc-pVTZ
ecp = {}
CPU time:         7.47


******** <class 'pyscf.scf.uhf.UHF'> ********
method = UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/_x/xd2ms3z958s6pfllwphw48vm0000gn/T/tmpe34ctzeb
max_memory 4000 MB (current use 0 MB)
number electrons alpha = 11  beta = 11
Set gradient conv threshold to 3.16228e-05
E1 = -376.2549936126038  Ecoul = 128.86664173250682
init E= -184.912169534729
cond(S) = 8204.429324526422
    CPU time for initialize scf      2.97 sec, wall time      0.68 sec
  alpha nocc = 11  HOMO = -0.319810321281981  LUMO = 0.171723221461133
  beta  nocc = 11  HOMO = -0.321422638789607  LUMO = 0.169192977074491
  alpha mo_energy =
[-20.7489498  -15.58092338 -15.5466279   -1.86969999  -1.47212274
  -0.76083335  -0.61333101  -0.61333101  -0.46771788  -0.31981032
  -0.31981032   0.17172322   0.17172322   0.28539837   0.42961811
   0.60441028   0.61752798   0.61752798   0.69424921   0.72169415
   0.72169415   0.78975072   0.88029281   0.88029281   1.08845957
   1.09406128   1.09406128   1.31503639   1.42129167   1.42129167
   1.4484935    1.4484935    1.57137145   1.88300584   1.88300584
   1.97812719   1.97812719   2.21409603   2.45621947   2.55510844
   2.55510844   2.96102598   3.27187881   3.27187881   3.44687379
   3.64632451   3.64632451   3.91996315   3.91996315   3.92589635
   4.02018153   4.02018153   4.11102568   4.11102568   4.51674928
   4.51674928   4.5279223    4.54285048   4.54285048   4.55499317
   4.69878448   4.69878448   4.78843204   4.78843204   4.97440123
   4.97440123   5.15448376   5.15448376   5.31694596   5.37874453
   5.37874453   5.48043066   5.48043066   5.90402621   6.21988526
   6.21988526   6.49263812   6.49263812   6.65000069   6.65000069
   6.69691627   7.24748228   7.24748228   7.56448015   7.98446059
   8.17631921   8.17631921   8.35923827  15.03603174  18.82991599]
  beta  mo_energy =
[-20.7607913  -15.59386732 -15.56468994  -1.88450798  -1.51325466
  -0.75521773  -0.61293418  -0.61293418  -0.46216925  -0.32142264
  -0.32142264   0.16919298   0.16919298   0.28377649   0.42908804
   0.60407324   0.61611316   0.61611316   0.692559     0.7215198
   0.7215198    0.7849209    0.88067599   0.88067599   1.08848492
   1.09064334   1.09064334   1.30732103   1.41583529   1.41583529
   1.44772941   1.44772941   1.57150014   1.88508529   1.88508529
   1.97685867   1.97685867   2.21123143   2.4579343    2.5551916
   2.5551916    2.95820086   3.26916023   3.26916023   3.44154272
   3.64357013   3.64357013   3.91545105   3.91545105   3.92553688
   4.01779997   4.01779997   4.10955044   4.10955044   4.51517673
   4.51517673   4.52383825   4.54057624   4.54057624   4.55548082
   4.69495449   4.69495449   4.7858373    4.7858373    4.9737904
   4.9737904    5.15292639   5.15292639   5.31547333   5.37850767
   5.37850767   5.48331621   5.48331621   5.90203436   6.22002475
   6.22002475   6.49114926   6.49114926   6.65367974   6.65367974
   6.6960777    7.24954015   7.24954015   7.56180685   7.98329098
   8.17506559   8.17506559   8.35972525  15.03610107  18.82822435]
multiplicity <S^2> = 0.00057330152  2S+1 = 1.0011459
E1 = -371.7702663164606  Ecoul = 125.69959764523227
cycle= 1 E= -183.59448632586  delta_E= 1.32  |g|= 0.655  |ddm|= 1.17
    CPU time for cycle= 1      2.54 sec, wall time      0.35 sec
  alpha nocc = 11  HOMO = -0.508425494828693  LUMO = 0.0708676418744179
  beta  nocc = 11  HOMO = -0.50645401777725  LUMO = 0.0712393723504156
  alpha mo_energy =
[-20.46512423 -16.29786919 -15.8162949   -1.78897094  -1.57248197
  -0.90357218  -0.90357218  -0.81033138  -0.73699466  -0.50842549
  -0.50842549   0.07086764   0.07086764   0.23465048   0.39991836
   0.4833011    0.4833011    0.56542016   0.62286692   0.64540994
   0.64540994   0.71455304   0.87406112   0.87406112   0.88077108
   0.88077108   1.02726275   1.16396545   1.28357668   1.28357668
   1.33353675   1.33353675   1.56590243   1.87834606   1.87834606
   1.89412361   1.89412361   2.09650078   2.48678277   2.53851806
   2.53851806   2.8080517    2.93265294   2.93265294   3.15784692
   3.3812657    3.3812657    3.66487659   3.66487659   3.72032479
   3.72032479   3.78864015   3.9881604    3.9881604    4.26901729
   4.28705497   4.28705497   4.38378081   4.38378081   4.39179445
   4.39179445   4.55921385   4.55921385   4.58643984   4.78267599
   4.78267599   4.98082013   4.98082013   5.17868963   5.2850868
   5.2850868    5.59961901   5.59961901   5.74438019   6.1747262
   6.1747262    6.31086538   6.31086538   6.59318677   6.83709041
   6.83709041   7.27743158   7.38541363   7.38541363   7.95001416
   8.03064031   8.03064031   8.31407017  15.03253053  18.47537111]
  beta  mo_energy =
[-20.46399045 -16.29817908 -15.81603761  -1.79120585  -1.57433168
  -0.90655879  -0.90655879  -0.80871565  -0.7350425   -0.50645402
  -0.50645402   0.07123937   0.07123937   0.23582127   0.40011785
   0.48323378   0.48323378   0.56604823   0.62330015   0.64505952
   0.64505952   0.71469185   0.87330981   0.87330981   0.88167525
   0.88167525   1.02741988   1.16425454   1.28302615   1.28302615
   1.33299841   1.33299841   1.56620398   1.87931501   1.87931501
   1.89420429   1.89420429   2.09660389   2.48788424   2.53911723
   2.53911723   2.80805175   2.93210685   2.93210685   3.15681382
   3.38071455   3.38071455   3.6639849    3.6639849    3.71970906
   3.71970906   3.78918625   3.98781341   3.98781341   4.26821722
   4.28667457   4.28667457   4.38311536   4.38311536   4.39072293
   4.39072293   4.55986383   4.55986383   4.58748952   4.7825104
   4.7825104    4.98069949   4.98069949   5.17921309   5.28555445
   5.28555445   5.60062525   5.60062525   5.74441336   6.17527706
   6.17527706   6.31094312   6.31094312   6.59366355   6.8389709
   6.8389709    7.27712122   7.38693748   7.38693748   7.95096511
   8.03082477   8.03082477   8.31464171  15.03325765  18.47526812]
multiplicity <S^2> = 0.00020937319  2S+1 = 1.0004187
E1 = -374.4527236567293  Ecoul = 128.30092835940286
cycle= 2 E= -183.675612951958  delta_E= -0.0811  |g|= 0.497  |ddm|= 0.464
    CPU time for cycle= 2      3.78 sec, wall time      0.58 sec
  alpha nocc = 11  HOMO = -0.511800630124088  LUMO = 0.163290359905834
  beta  nocc = 11  HOMO = -0.509556514891598  LUMO = 0.162497243990713
  alpha mo_energy =
[-20.71174359 -15.84762138 -15.70563119  -1.65474074  -1.46823797
  -0.84750176  -0.79346153  -0.79346153  -0.69835016  -0.51180063
  -0.51180063   0.16329036   0.16329036   0.28236941   0.42619309
   0.53940771   0.53940771   0.59740971   0.65993428   0.68148921
   0.68148921   0.73800582   0.8649865    0.8649865    0.97741895
   0.97741895   1.0525424    1.27010572   1.34795605   1.34795605
   1.38308348   1.38308348   1.55629245   1.86364798   1.86364798
   1.93486408   1.93486408   2.1649699    2.46470011   2.53711357
   2.53711357   2.87811236   3.11941434   3.11941434   3.3100678
   3.50625897   3.50625897   3.79620035   3.79620035   3.85109568
   3.87287049   3.87287049   4.05754019   4.05754019   4.39131826
   4.39131826   4.40770415   4.46915883   4.46915883   4.54790533
   4.58750006   4.58750006   4.61009772   4.61009772   4.87058143
   4.87058143   5.06277727   5.06277727   5.24420409   5.32922435
   5.32922435   5.52121555   5.52121555   5.82765701   6.17826182
   6.17826182   6.40851005   6.40851005   6.65290065   6.70742514
   6.70742514   7.28256102   7.28256102   7.44030032   7.9409495
   8.0971779    8.0971779    8.31521843  14.99571488  18.67103322]
  beta  mo_energy =
[-20.71071043 -15.84805236 -15.70560031  -1.65506275  -1.46906615
  -0.84612106  -0.79451959  -0.79451959  -0.69706587  -0.50955651
  -0.50955651   0.16249724   0.16249724   0.28278787   0.42624075
   0.53925033   0.53925033   0.59784488   0.65986281   0.68118072
   0.68118072   0.73835275   0.86559603   0.86559603   0.97688662
   0.97688662   1.05267654   1.26969856   1.3474846    1.3474846
   1.3826401    1.3826401    1.55656256   1.8644912    1.8644912
   1.9349386    1.9349386    2.16501374   2.46553197   2.53759247
   2.53759247   2.87808871   3.11890106   3.11890106   3.3092382
   3.50566866   3.50566866   3.79557311   3.79557311   3.85141057
   3.87238534   3.87238534   4.05772855   4.05772855   4.39088291
   4.39088291   4.40713408   4.46911548   4.46911548   4.54868517
   4.58739539   4.58739539   4.60916628   4.60916628   4.87021994
   4.87021994   5.06267448   5.06267448   5.24453139   5.32949762
   5.32949762   5.52215748   5.52215748   5.82772446   6.17870282
   6.17870282   6.4086758    6.4086758    6.65344374   6.70917437
   6.70917437   7.28370592   7.28370592   7.43995927   7.94150298
   8.09729968   8.09729968   8.31564948  14.9963033   18.6708633 ]
multiplicity <S^2> = 0.00013072067  2S+1 = 1.0002614
E1 = -374.0229356219124  Ecoul = 127.79225758636687
cycle= 3 E= -183.754495690177  delta_E= -0.0789  |g|= 0.0521  |ddm|= 0.193
    CPU time for cycle= 3      4.43 sec, wall time      0.60 sec
  alpha nocc = 11  HOMO = -0.49025384680112  LUMO = 0.181067526955547
  beta  nocc = 11  HOMO = -0.488403600498774  LUMO = 0.18042553495521
  alpha mo_energy =
[-20.62924727 -15.8214557  -15.68380417  -1.62560531  -1.44530255
  -0.82026595  -0.77425565  -0.77425565  -0.69442742  -0.49025385
  -0.49025385   0.18106753   0.18106753   0.29771342   0.43037595
   0.54571047   0.54571047   0.61414148   0.67147406   0.68861944
   0.68861944   0.74685637   0.87733969   0.87733969   0.98750335
   0.98750335   1.05636534   1.29027377   1.36126209   1.36126209
   1.39343215   1.39343215   1.5716064    1.88342495   1.88342495
   1.94755367   1.94755367   2.17674673   2.48724274   2.55533696
   2.55533696   2.89804345   3.13671706   3.13671706   3.32931843
   3.51971917   3.51971917   3.8120483    3.8120483    3.86516809
   3.88524623   3.88524623   4.08749273   4.08749273   4.40065049
   4.40065049   4.42872354   4.49363126   4.49363126   4.57592852
   4.61895256   4.61895256   4.63005129   4.63005129   4.8800216
   4.8800216    5.08126836   5.08126836   5.26678548   5.34166712
   5.34166712   5.55676928   5.55676928   5.85437444   6.20902414
   6.20902414   6.43739374   6.43739374   6.68376898   6.75385651
   6.75385651   7.32140796   7.32140796   7.46516378   7.97736164
   8.12576704   8.12576704   8.3497614   15.04568802  18.68936702]
  beta  mo_energy =
[-20.62838732 -15.82184977 -15.68392188  -1.62578643  -1.44537644
  -0.81918606  -0.7748501   -0.7748501   -0.69393896  -0.4884036
  -0.4884036    0.18042553   0.18042553   0.2979402    0.43035474
   0.54556849   0.54556849   0.61447994   0.67130122   0.68832789
   0.68832789   0.74706745   0.87788127   0.87788127   0.98718177
   0.98718177   1.05638478   1.29004701   1.36098959   1.36098959
   1.39302123   1.39302123   1.57181696   1.88402879   1.88402879
   1.94761379   1.94761379   2.17676046   2.48780698   2.55568906
   2.55568906   2.89809857   3.13635753   3.13635753   3.32881808
   3.5192629    3.5192629    3.81171657   3.81171657   3.86529788
   3.88492551   3.88492551   4.08776033   4.08776033   4.40029339
   4.40029339   4.42837238   4.49364403   4.49364403   4.57644379
   4.61904499   4.61904499   4.62938204   4.62938204   4.87959272
   4.87959272   5.08120675   5.08120675   5.2670051    5.34178677
   5.34178677   5.5574716    5.5574716    5.85447174   6.20938394
   6.20938394   6.43756578   6.43756578   6.68420488   6.75530071
   6.75530071   7.32228799   7.32228799   7.46492451   7.97778878
   8.12589571   8.12589571   8.35009154  15.04615218  18.68919618]
multiplicity <S^2> = 8.0375812e-05  2S+1 = 1.0001607
E1 = -373.79504615178666  Ecoul = 127.56343545267299
cycle= 4 E= -183.755428353746  delta_E= -0.000933  |g|= 0.0212  |ddm|= 0.0408
    CPU time for cycle= 4      3.84 sec, wall time      0.54 sec
  alpha nocc = 11  HOMO = -0.493783238580575  LUMO = 0.181375782872168
  beta  nocc = 11  HOMO = -0.492318529995889  LUMO = 0.180833760227873
  alpha mo_energy =
[-20.64954135 -15.83463473 -15.67025828  -1.63134207  -1.44831391
  -0.82722472  -0.77804823  -0.77804823  -0.69106753  -0.49378324
  -0.49378324   0.18137578   0.18137578   0.29567728   0.43242712
   0.54595085   0.54595085   0.6116099    0.66905436   0.68867641
   0.68867641   0.7468641    0.87463341   0.87463341   0.98679462
   0.98679462   1.05738719   1.28888751   1.36088377   1.36088377
   1.39341721   1.39341721   1.56845787   1.87923926   1.87923926
   1.94685591   1.94685591   2.17805338   2.48164944   2.55259379
   2.55259379   2.89454106   3.13418896   3.13418896   3.32711195
   3.52175634   3.52175634   3.81205149   3.81205149   3.868728
   3.88433362   3.88433362   4.0832548    4.0832548    4.40236115
   4.40236115   4.42788324   4.49168168   4.49168168   4.57291061
   4.61212932   4.61212932   4.62519809   4.62519809   4.88626218
   4.88626218   5.080142     5.080142     5.26627712   5.34588087
   5.34588087   5.5491128    5.5491128    5.85063851   6.20272798
   6.20272798   6.43354763   6.43354763   6.68090879   6.74329811
   6.74329811   7.31231893   7.31231893   7.46165497   7.97092288
   8.12140087   8.12140087   8.34184033  15.03432194  18.6907573 ]
  beta  mo_energy =
[-20.64886106 -15.83491946 -15.67043315  -1.63130127  -1.44817824
  -0.82633252  -0.77827014  -0.77827014  -0.69105353  -0.49231853
  -0.49231853   0.18083376   0.18083376   0.29582037   0.43238989
   0.54583634   0.54583634   0.61184759   0.66889791   0.68843414
   0.68843414   0.74695467   0.87506878   0.87506878   0.98659103
   0.98659103   1.05736078   1.28875107   1.36072098   1.36072098
   1.3930593    1.3930593    1.56862431   1.8796903    1.8796903
   1.94690352   1.94690352   2.1780552    2.48203161   2.5528516
   2.5528516    2.89463339   3.13394845   3.13394845   3.3268131
   3.52140226   3.52140226   3.81187616   3.81187616   3.86875279
   3.8841201    3.8841201    4.08355808   4.08355808   4.40206715
   4.40206715   4.42766652   4.4916924    4.4916924    4.57323874
   4.61228724   4.61228724   4.6247508    4.6247508    4.88581706
   4.88581706   5.08011377   5.08011377   5.2664112    5.34590362
   5.34590362   5.54965972   5.54965972   5.85073439   6.20302195
   6.20302195   6.43371522   6.43371522   6.68124902   6.74447699
   6.74447699   7.31298626   7.31298626   7.46149911   7.97123678
   8.12151353   8.12151353   8.34209082  15.03469101  18.69061101]
multiplicity <S^2> = 5.1376442e-05  2S+1 = 1.0001027
E1 = -373.861989934598  Ecoul = 127.6301604186914
cycle= 5 E= -183.755647170539  delta_E= -0.000219  |g|= 0.0116  |ddm|= 0.0175
    CPU time for cycle= 5      3.69 sec, wall time      0.65 sec
  alpha nocc = 11  HOMO = -0.494273207358974  LUMO = 0.180141551621423
  beta  nocc = 11  HOMO = -0.493145755460463  LUMO = 0.179755086164437
  alpha mo_energy =
[-20.64637702 -15.83360054 -15.68123892  -1.63108303  -1.44989233
  -0.82543877  -0.77833055  -0.77833055  -0.69525526  -0.49427321
  -0.49427321   0.18014155   0.18014155   0.29603707   0.4314792
   0.54501644   0.54501644   0.61172804   0.66914936   0.68801296
   0.68801296   0.74589504   0.87543616   0.87543616   0.98548782
   0.98548782   1.05647294   1.2871183    1.35951886   1.35951886
   1.39224782   1.39224782   1.56912056   1.8804081    1.8804081
   1.9459899    1.9459899    2.1757637    2.4832759    2.55286032
   2.55286032   2.89428581   3.13277155   3.13277155   3.32565063
   3.51826527   3.51826527   3.80989817   3.80989817   3.86481601
   3.88241886   3.88241886   4.08273868   4.08273868   4.39930353
   4.39930353   4.42587758   4.49046388   4.49046388   4.57242082
   4.61269142   4.61269142   4.62463579   4.62463579   4.88088906
   4.88088906   5.07861704   5.07861704   5.2643541    5.34239455
   5.34239455   5.55182032   5.55182032   5.84998266   6.20381209
   6.20381209   6.4326907    6.4326907    6.6797588    6.74628634
   6.74628634   7.314605     7.314605     7.46060417   7.97118276
   8.12103269   8.12103269   8.34303168  15.03593199  18.68682682]
  beta  mo_energy =
[-20.64583856 -15.83377247 -15.6814277   -1.63097206  -1.44970795
  -0.82473314  -0.77837998  -0.77837998  -0.69543634  -0.49314576
  -0.49314576   0.17975509   0.17975509   0.29614517   0.43144245
   0.54491642   0.54491642   0.61191197   0.66904219   0.68781075
   0.68781075   0.74590473   0.87580706   0.87580706   0.98535327
   0.98535327   1.05643052   1.28703522   1.35940571   1.35940571
   1.39193265   1.39193265   1.56925147   1.88076621   1.88076621
   1.94602685   1.94602685   2.17576078   2.48354842   2.55304986
   2.55304986   2.89439237   3.132624     3.132624     3.32546461
   3.51798343   3.51798343   3.80979539   3.80979539   3.86478882
   3.88227573   3.88227573   4.08301618   4.08301618   4.39906016
   4.39906016   4.42573248   4.49047296   4.49047296   4.57262937
   4.61286533   4.61286533   4.6243582    4.6243582    4.88045851
   4.88045851   5.07860429   5.07860429   5.26443575   5.34236612
   5.34236612   5.55225791   5.55225791   5.85006255   6.20405402
   6.20405402   6.43283818   6.43283818   6.68002075   6.74725345
   6.74725345   7.31512298   7.31512298   7.46050753   7.97141695
   8.12112817   8.12112817   8.34322946  15.03623299  18.68671081]
multiplicity <S^2> = 3.6039861e-05  2S+1 = 1.0000721
E1 = -373.85740895178685  Ecoul = 127.6255184337817
cycle= 6 E= -183.755708172637  delta_E= -6.1e-05  |g|= 0.00252  |ddm|= 0.00728
    CPU time for cycle= 6      2.99 sec, wall time      0.76 sec
  alpha nocc = 11  HOMO = -0.494057605800135  LUMO = 0.180051533974429
  beta  nocc = 11  HOMO = -0.493346854137003  LUMO = 0.179846179355302
  alpha mo_energy =
[-20.64504521 -15.83357469 -15.68057036  -1.63100169  -1.44977151
  -0.82477677  -0.77826511  -0.77826511  -0.69520354  -0.49405761
  -0.49405761   0.18005153   0.18005153   0.29601824   0.43159213
   0.54488289   0.54488289   0.61177535   0.66898256   0.68800996
   0.68800996   0.74593459   0.87557488   0.87557488   0.98519317
   0.98519317   1.05646233   1.2870915    1.35943666   1.35943666
   1.39215081   1.39215081   1.56932023   1.88060525   1.88060525
   1.94601326   1.94601326   2.17581952   2.4835616    2.5530641
   2.5530641    2.89426304   3.13261063   3.13261063   3.32544574
   3.51818011   3.51818011   3.80966616   3.80966616   3.86496184
   3.88202098   3.88202098   4.08293156   4.08293156   4.39897852
   4.39897852   4.42581848   4.49057014   4.49057014   4.57294312
   4.61273654   4.61273654   4.62427469   4.62427469   4.88084661
   4.88084661   5.07852714   5.07852714   5.2645089    5.34259928
   5.34259928   5.55243278   5.55243278   5.85007706   6.20397474
   6.20397474   6.43273924   6.43273924   6.68011161   6.74714553
   6.74714553   7.31517787   7.31517787   7.46062909   7.97150682
   8.12106748   8.12106748   8.34332403  15.03643326  18.68699247]
  beta  mo_energy =
[-20.64467164 -15.83360388 -15.68075748  -1.63083052  -1.44965578
  -0.82428561  -0.77814858  -0.77814858  -0.69550607  -0.49334685
  -0.49334685   0.17984618   0.17984618   0.29609991   0.43156437
   0.54479911   0.54479911   0.61190653   0.66894489   0.68785087
   0.68785087   0.74588727   0.87586334   0.87586334   0.98512116
   0.98512116   1.05641905   1.28703651   1.35935764   1.35935764
   1.39189419   1.39189419   1.56940904   1.88087386   1.88087386
   1.94603578   1.94603578   2.17581481   2.4837304    2.55317904
   2.55317904   2.8943677    3.13256342   3.13256342   3.32535264
   3.51797282   3.51797282   3.80961011   3.80961011   3.86490325
   3.88194837   3.88194837   4.0831523    4.0831523    4.39879191
   4.39879191   4.4257322    4.49056278   4.49056278   4.57303447
   4.61289771   4.61289771   4.62418553   4.62418553   4.88044918
   4.88044918   5.07852634   5.07852634   5.26454133   5.34253114
   5.34253114   5.55275152   5.55275152   5.8501276    6.20415192
   6.20415192   6.43285384   6.43285384   6.68028247   6.74785207
   6.74785207   7.31552552   7.31552552   7.46059187   7.97164835
   8.12113609   8.12113609   8.34346365  15.03665552  18.68691723]
multiplicity <S^2> = 2.2959167e-05  2S+1 = 1.0000459
E1 = -373.8576343889189  Ecoul = 127.62573630233229
cycle= 7 E= -183.755715741219  delta_E= -7.57e-06  |g|= 0.00092  |ddm|= 0.00369
    CPU time for cycle= 7      2.41 sec, wall time      0.33 sec
  alpha nocc = 11  HOMO = -0.493942574883749  LUMO = 0.179972983608288
  beta  nocc = 11  HOMO = -0.493517161400204  LUMO = 0.179880011873989
  alpha mo_energy =
[-20.64478776 -15.83349859 -15.68099986  -1.63091     -1.44972718
  -0.82455034  -0.77825885  -0.77825885  -0.69539391  -0.49394257
  -0.49394257   0.17997298   0.17997298   0.29607615   0.43150837
   0.54487682   0.54487682   0.61186101   0.66897427   0.68799524
   0.68799524   0.74593498   0.87566697   0.87566697   0.98517718
   0.98517718   1.05640898   1.28707609   1.35940421   1.35940421
   1.39211796   1.39211796   1.56941104   1.88075656   1.88075656
   1.94600267   1.94600267   2.17572187   2.48369332   2.55312859
   2.55312859   2.8943227    3.13259914   3.13259914   3.32544586
   3.51804307   3.51804307   3.8096213    3.8096213    3.86477231
   3.88199458   3.88199458   4.08299927   4.08299927   4.39885342
   4.39885342   4.42578068   4.49058933   4.49058933   4.57296081
   4.61288095   4.61288095   4.62433281   4.62433281   4.88057476
   4.88057476   5.07850231   5.07850231   5.2644565    5.3424227
   5.3424227    5.55273093   5.55273093   5.85010886   6.20414544
   6.20414544   6.43277952   6.43277952   6.68012013   6.74746662
   6.74746662   7.31534625   7.31534625   7.46062386   7.97157292
   8.12113189   8.12113189   8.3434371   15.03662645  18.68684284]
  beta  mo_energy =
[-20.6445252  -15.83344504 -15.68118064  -1.63072365  -1.44968863
  -0.82420894  -0.77806438  -0.77806438  -0.69571412  -0.49351716
  -0.49351716   0.17988001   0.17988001   0.29614377   0.43148645
   0.54480047   0.54480047   0.6119598    0.66897795   0.68786257
   0.68786257   0.74587649   0.87589513   0.87589513   0.98513965
   0.98513965   1.05637158   1.28702265   1.35934123   1.35934123
   1.39190457   1.39190457   1.56947023   1.88097186   1.88097186
   1.94601609   1.94601609   2.17571745   2.48380673   2.553198
   2.553198     2.89441351   3.1326102    3.1326102    3.32539547
   3.51788056   3.51788056   3.80958262   3.80958262   3.86470941
   3.88196182   3.88196182   4.08316681   4.08316681   4.39870345
   4.39870345   4.42572296   4.49057044   4.49057044   4.5729886
   4.61301797   4.61301797   4.62435269   4.62435269   4.8802102
   4.8802102    5.07850711   5.07850711   5.26446644   5.34234273
   5.34234273   5.55296914   5.55296914   5.85013797   6.20427666
   6.20427666   6.43286755   6.43286755   6.68023245   6.74798316
   6.74798316   7.31558072   7.31558072   7.46061605   7.97165593
   8.12118058   8.12118058   8.34353738  15.03679169  18.68679331]
multiplicity <S^2> = 1.6471711e-05  2S+1 = 1.0000329
E1 = -373.857669886135  Ecoul = 127.62577084141705
cycle= 8 E= -183.75571669935  delta_E= -9.58e-07  |g|= 0.000323  |ddm|= 0.00127
    CPU time for cycle= 8      3.11 sec, wall time      0.56 sec
  alpha nocc = 11  HOMO = -0.493826508786779  LUMO = 0.179977098680984
  beta  nocc = 11  HOMO = -0.493590596513243  LUMO = 0.17994568217505
  alpha mo_energy =
[-20.64469366 -15.83338938 -15.68094769  -1.6308682   -1.44966026
  -0.82446012  -0.77823573  -0.77823573  -0.6953631   -0.49382651
  -0.49382651   0.1799771    0.1799771    0.2960962    0.43151607
   0.54489326   0.54489326   0.61190505   0.6689818    0.68800199
   0.68800199   0.74595872   0.87570133   0.87570133   0.98520257
   0.98520257   1.05641682   1.2871206    1.35942748   1.35942748
   1.39212737   1.39212737   1.56944455   1.88079733   1.88079733
   1.94603023   1.94603023   2.17575381   2.48373339   2.55316701
   2.55316701   2.89436688   3.13264509   3.13264509   3.32548802
   3.51808018   3.51808018   3.80966388   3.80966388   3.86480755
   3.88203471   3.88203471   4.08306436   4.08306436   4.39888375
   4.39888375   4.42582363   4.49063181   4.49063181   4.57301307
   4.61293659   4.61293659   4.62437175   4.62437175   4.88059981
   4.88059981   5.07854392   5.07854392   5.26450272   5.34245484
   5.34245484   5.55278817   5.55278817   5.8501607    6.20419715
   6.20419715   6.43283936   6.43283936   6.68018498   6.74756744
   6.74756744   7.31541236   7.31541236   7.46067847   7.97162932
   8.12118308   8.12118308   8.34348744  15.03669002  18.68690223]
  beta  mo_energy =
[-20.64451017 -15.83329605 -15.68112007  -1.63068471  -1.44967147
  -0.82421929  -0.77800881  -0.77800881  -0.69567084  -0.4935906
  -0.4935906    0.17994568   0.17994568   0.29615295   0.43149729
   0.54482249   0.54482249   0.61198172   0.66900704   0.68788706
   0.68788706   0.74590313   0.87588368   0.87588368   0.98518675
   0.98518675   1.05638457   1.28706782   1.35937821   1.35937821
   1.39194613   1.39194613   1.56948374   1.88097405   1.88097405
   1.94603847   1.94603847   2.17574884   2.48381462   2.55320902
   2.55320902   2.89444333   3.13268749   3.13268749   3.32546197
   3.51794691   3.51794691   3.80963718   3.80963718   3.86474742
   3.88202548   3.88202548   4.08319181   4.08319181   4.39875892
   4.39875892   4.42578326   4.49060712   4.49060712   4.57300612
   4.61305215   4.61305215   4.62445031   4.62445031   4.88026563
   4.88026563   5.07855214   5.07855214   5.26450208   5.34237342
   5.34237342   5.55296836   5.55296836   5.85017688   6.20429638
   6.20429638   6.43290829   6.43290829   6.68025987   6.74794629
   6.74794629   7.31557171   7.31557171   7.46068429   7.97167656
   8.12121841   8.12121841   8.34356045  15.03681268  18.68686738]
multiplicity <S^2> = 1.2589996e-05  2S+1 = 1.0000252
E1 = -373.8575932286367  Ecoul = 127.62569396682787
cycle= 9 E= -183.755716916441  delta_E= -2.17e-07  |g|= 0.000181  |ddm|= 0.000554
    CPU time for cycle= 9      3.60 sec, wall time      0.63 sec
  alpha nocc = 11  HOMO = -0.493755145906582  LUMO = 0.179949592561958
  beta  nocc = 11  HOMO = -0.49366950904748  LUMO = 0.179959374090987
  alpha mo_energy =
[-20.64467935 -15.83343708 -15.68095114  -1.63087226  -1.44965459
  -0.82443146  -0.77824726  -0.77824726  -0.69537106  -0.49375515
  -0.49375515   0.17994959   0.17994959   0.29609544   0.43151682
   0.54488634   0.54488634   0.61190648   0.66897028   0.68799042
   0.68799042   0.74595187   0.87571726   0.87571726   0.98518875
   0.98518875   1.05641491   1.28710928   1.35941679   1.35941679
   1.39210915   1.39210915   1.56944404   1.88080722   1.88080722
   1.94602908   1.94602908   2.17575259   2.48373484   2.553169
   2.553169     2.89436376   3.13262208   3.13262208   3.32546736
   3.5180617    3.5180617    3.80965128   3.80965128   3.86480692
   3.88201776   3.88201776   4.08307193   4.08307193   4.3988701
   4.3988701    4.42580816   4.49062683   4.49062683   4.57301699
   4.61293547   4.61293547   4.62433687   4.62433687   4.88058424
   4.88058424   5.07853652   5.07853652   5.26450168   5.34245479
   5.34245479   5.55280104   5.55280104   5.85015574   6.20420039
   6.20420039   6.43283834   6.43283834   6.68018889   6.74761336
   6.74761336   7.31542859   7.31542859   7.46066051   7.97163051
   8.12117863   8.12117863   8.34348634  15.03669638  18.68688624]
  beta  mo_energy =
[-20.64456424 -15.83332391 -15.68110759  -1.6307028   -1.44970038
  -0.82427369  -0.77801207  -0.77801207  -0.69565069  -0.49366951
  -0.49366951   0.17995937   0.17995937   0.29614163   0.43150139
   0.5448231    0.5448231    0.61196478   0.669008     0.68789377
   0.68789377   0.74590351   0.8758559    0.8758559    0.98518976
   0.98518976   1.05638819   1.28705982   1.35938082   1.35938082
   1.39196036   1.39196036   1.56946745   1.88094623   1.88094623
   1.94603342   1.94603342   2.17574669   2.48379112   2.55319028
   2.55319028   2.89442482   3.13268328   3.13268328   3.32545964
   3.51795556   3.51795556   3.80963545   3.80963545   3.86475238
   3.88202552   3.88202552   4.08316263   4.08316263   4.39876948
   4.39876948   4.42578161   4.49059928   4.49059928   4.57298794
   4.61302831   4.61302831   4.62445068   4.62445068   4.88028951
   4.88028951   5.078547     5.078547     5.26449425   5.34237723
   5.34237723   5.55292884   5.55292884   5.85016219   6.20427156
   6.20427156   6.43288992   6.43288992   6.68023367   6.74787009
   6.74787009   7.31552676   7.31552676   7.46067407   7.97165136
   8.12120269   8.12120269   8.34353625  15.03678059  18.68686303]
multiplicity <S^2> = 9.1836855e-06  2S+1 = 1.0000184
E1 = -373.8576273902653  Ecoul = 127.62572802121406
cycle= 10 E= -183.755717023683  delta_E= -1.07e-07  |g|= 0.0001  |ddm|= 0.000478
    CPU time for cycle= 10      3.30 sec, wall time      0.58 sec
  alpha nocc = 11  HOMO = -0.49373618099715  LUMO = 0.179943979710285
  beta  nocc = 11  HOMO = -0.493691327422291  LUMO = 0.179962130815617
  alpha mo_energy =
[-20.64467692 -15.83343608 -15.68095458  -1.63086979  -1.44965259
  -0.82442318  -0.77824472  -0.77824472  -0.6953837   -0.49373618
  -0.49373618   0.17994398   0.17994398   0.2960967    0.431515
   0.5448825    0.5448825    0.6119068    0.66896965   0.68798415
   0.68798415   0.74594756   0.87572542   0.87572542   0.98518455
   0.98518455   1.05641281   1.28710602   1.3594124    1.3594124
   1.39209841   1.39209841   1.56944414   1.88081243   1.88081243
   1.9460275    1.9460275    2.17575195   2.4837367    2.55317039
   2.55317039   2.89436547   3.13261989   3.13261989   3.32546266
   3.51805465   3.51805465   3.80964774   3.80964774   3.86480384
   3.88201362   3.88201362   4.08307618   4.08307618   4.39886292
   4.39886292   4.42580345   4.49062267   4.49062267   4.57301557
   4.61293552   4.61293552   4.62433201   4.62433201   4.8805714
   4.8805714    5.07853398   5.07853398   5.26449922   5.34245133
   5.34245133   5.55280367   5.55280367   5.85015434   6.20420004
   6.20420004   6.43283805   6.43283805   6.68019226   6.74762881
   6.74762881   7.31543565   7.31543565   7.46065834   7.97163177
   8.12117674   8.12117674   8.34348684  15.03669614  18.68688484]
  beta  mo_energy =
[-20.64458451 -15.83332567 -15.68109776  -1.63071396  -1.44970382
  -0.82429266  -0.77802186  -0.77802186  -0.69564032  -0.49369133
  -0.49369133   0.17996213   0.17996213   0.29613788   0.43150162
   0.54482477   0.54482477   0.61195827   0.6690073    0.68789746
   0.68789746   0.74590412   0.87584544   0.87584544   0.98518956
   0.98518956   1.05638902   1.28705999   1.35938161   1.35938161
   1.39196598   1.39196598   1.56946295   1.8809341    1.8809341
   1.94603079   1.94603079   2.17574598   2.48378469   2.55318591
   2.55318591   2.89441911   3.13268171   3.13268171   3.32545933
   3.51796102   3.51796102   3.80963545   3.80963545   3.86475367
   3.88202489   3.88202489   4.08315252   4.08315252   4.39877391
   4.39877391   4.42578123   4.49059589   4.49059589   4.57298403
   4.61301721   4.61301721   4.6244469    4.6244469    4.88030339
   4.88030339   5.07854447   5.07854447   5.26449073   5.34237919
   5.34237919   5.55291131   5.55291131   5.85015814   6.20426052
   6.20426052   6.4328826    6.4328826    6.68022774   6.74784118
   6.74784118   7.31551451   7.31551451   7.46067251   7.97164605
   8.12119684   8.12119684   8.34352875  15.03676618  18.68686567]
multiplicity <S^2> = 7.4838688e-06  2S+1 = 1.000015
E1 = -373.85761839529164  Ecoul = 127.62571899066991
cycle= 11 E= -183.755717059254  delta_E= -3.56e-08  |g|= 8.7e-05  |ddm|= 0.000222
    CPU time for cycle= 11      3.94 sec, wall time      0.57 sec
  alpha nocc = 11  HOMO = -0.49372924850556  LUMO = 0.179941758491139
  beta  nocc = 11  HOMO = -0.493698840127416  LUMO = 0.179958678877943
  alpha mo_energy =
[-20.64466449 -15.83344144 -15.68097129  -1.63086042  -1.4496584
  -0.82441348  -0.77823139  -0.77823139  -0.69540674  -0.49372925
  -0.49372925   0.17994176   0.17994176   0.29609934   0.43151285
   0.54487666   0.54487666   0.61190858   0.66897163   0.68797628
   0.68797628   0.74594234   0.87573531   0.87573531   0.98518153
   0.98518153   1.0564101    1.28709982   1.35940791   1.35940791
   1.3920862    1.3920862    1.56944509   1.88082247   1.88082247
   1.94602639   1.94602639   2.17574881   2.4837402    2.55317119
   2.55317119   2.89436773   3.13261863   3.13261863   3.32545771
   3.51804226   3.51804226   3.80964213   3.80964213   3.86479748
   3.88200981   3.88200981   4.08308026   4.08308026   4.39885198
   4.39885198   4.42579741   4.49061857   4.49061857   4.57301276
   4.6129404    4.6129404    4.62433457   4.62433457   4.88054673
   4.88054673   5.07853142   5.07853142   5.26449667   5.34244404
   5.34244404   5.55281393   5.55281393   5.85015155   6.20420427
   6.20420427   6.4328382    6.4328382    6.68019256   6.7476495
   6.7476495    7.3154437    7.3154437    7.46065382   7.97163161
   8.12117582   8.12117582   8.34348964  15.03670261  18.68687631]
  beta  mo_energy =
[-20.64458875 -15.83334727 -15.68109237  -1.63072877  -1.44970394
  -0.82430403  -0.77804156  -0.77804156  -0.69562425  -0.49369884
  -0.49369884   0.17995868   0.17995868   0.29613401   0.43150209
   0.54482788   0.54482788   0.61195267   0.6690032    0.68790332
   0.68790332   0.74590606   0.87583521   0.87583521   0.98518666
   0.98518666   1.05639018   1.28706038   1.35938226   1.35938226
   1.39197502   1.39197502   1.56946099   1.88092383   1.88092383
   1.94602922   1.94602922   2.17574346   2.48378091   2.55318381
   2.55318381   2.89441248   3.13267203   3.13267203   3.32545519
   3.51796373   3.51796373   3.80963218   3.80963218   3.86475478
   3.8820202    3.8820202    4.0831431    4.0831431    4.39877738
   4.39877738   4.42577849   4.49059537   4.49059537   4.57298606
   4.61300855   4.61300855   4.62443366   4.62443366   4.88032052
   4.88032052   5.0785406    5.0785406    5.26448923   5.34238266
   5.34238266   5.55290263   5.55290263   5.85015432   6.20425453
   6.20425453   6.43287545   6.43287545   6.68022184   6.74782395
   6.74782395   7.31550903   7.31550903   7.46066579   7.97164359
   8.12119253   8.12119253   8.34352475  15.03676024  18.68686045]
multiplicity <S^2> = 5.3069386e-06  2S+1 = 1.0000106
E1 = -373.8576292161344  Ecoul = 127.62572976694439
cycle= 12 E= -183.755717103822  delta_E= -4.46e-08  |g|= 7.39e-05  |ddm|= 0.000293
    CPU time for cycle= 12      4.23 sec, wall time      0.55 sec
  alpha nocc = 11  HOMO = -0.493715818602004  LUMO = 0.179949084020217
  beta  nocc = 11  HOMO = -0.493711891077493  LUMO = 0.179955532729482
  alpha mo_energy =
[-20.64465585 -15.83339426 -15.68101132  -1.63081431  -1.44966857
  -0.82438151  -0.77816682  -0.77816682  -0.695477    -0.49371582
  -0.49371582   0.17994908   0.17994908   0.29611148   0.43150858
   0.54486279   0.54486279   0.61192247   0.66898452   0.68795311
   0.68795311   0.74593081   0.87576828   0.87576828   0.98518735
   0.98518735   1.05640388   1.28709067   1.35940108   1.35940108
   1.39205074   1.39205074   1.56944921   1.88085568   1.88085568
   1.94602783   1.94602783   2.17574887   2.48375134   2.55317479
   2.55317479   2.89438556   3.13264249   3.13264249   3.32546322
   3.51802073   3.51802073   3.80964388   3.80964388   3.86478398
   3.88201948   3.88201948   4.08310234   4.08310234   4.39883143
   4.39883143   4.42579626   4.49061231   4.49061231   4.57299924
   4.61296472   4.61296472   4.6243752    4.6243752    4.880474
   4.880474     5.07853715   5.07853715   5.2644948    5.34242397
   5.34242397   5.55283918   5.55283918   5.85015472   6.20422044
   6.20422044   6.43285286   6.43285286   6.68020211   6.74770091
   6.74770091   7.31545928   7.31545928   7.4606635    7.97163319
   8.12118317   8.12118317   8.3434992   15.03671709  18.68687695]
  beta  mo_energy =
[-20.64463117 -15.83336241 -15.6810534   -1.63076987  -1.44968682
  -0.82434124  -0.77810131  -0.77810131  -0.69555207  -0.49371189
  -0.49371189   0.17995553   0.17995553   0.29612331   0.43150594
   0.54484594   0.54484594   0.61193955   0.66899355   0.6879281
   0.6879281    0.74591949   0.87580118   0.87580118   0.98518971
   0.98518971   1.0563973    1.287076     1.3593925    1.3593925
   1.39201319   1.39201319   1.5694555    1.88088892   1.88088892
   1.94602922   1.94602922   2.1757465    2.48376698   2.55317932
   2.55317932   2.89440018   3.13266147   3.13266147   3.32546149
   3.51799394   3.51799394   3.80964057   3.80964057   3.86476883
   3.88202357   3.88202357   4.08312198   4.08312198   4.39880625
   4.39880625   4.42578852   4.4906035    4.4906035    4.57299189
   4.61298704   4.61298704   4.62441004   4.62441004   4.88039655
   4.88039655   5.07854071   5.07854071   5.26449237   5.34240253
   5.34240253   5.55286736   5.55286736   5.85015534   6.2042372
   6.2042372    6.4328656    6.4328656    6.68021243   6.74775639
   6.74775639   7.31548235   7.31548235   7.46066685   7.97163874
   8.12118889   8.12118889   8.34351177  15.03673548  18.68687146]
multiplicity <S^2> = 6.1091662e-07  2S+1 = 1.0000012
E1 = -373.8576397825754  Ecoul = 127.62574023676964
cycle= 13 E= -183.755717200438  delta_E= -9.66e-08  |g|= 3.36e-05  |ddm|= 0.00102
    CPU time for cycle= 13      4.20 sec, wall time      0.55 sec
  alpha nocc = 11  HOMO = -0.493710366509819  LUMO = 0.179951212453147
  beta  nocc = 11  HOMO = -0.493712786992269  LUMO = 0.1799528900961
  alpha mo_energy =
[-20.64462114 -15.83338629 -15.68102953  -1.63079502  -1.4496755
  -0.82435884  -0.77814037  -0.77814037  -0.69550822  -0.49371037
  -0.49371037   0.17995121   0.17995121   0.29611719   0.43150724
   0.54485474   0.54485474   0.61193092   0.668989     0.68794316
   0.68794316   0.74592617   0.87578411   0.87578411   0.98518534
   0.98518534   1.05640065   1.28708443   1.35939708   1.35939708
   1.3920353    1.3920353    1.56945478   1.88087304   1.88087304
   1.94602865   1.94602865   2.17574743   2.48376241   2.55317974
   2.55317974   2.89439202   3.13264702   3.13264702   3.32546042
   3.51800722   3.51800722   3.80963994   3.80963994   3.86477748
   3.88201674   3.88201674   4.08311419   4.08311419   4.39881768
   4.39881768   4.4257922    4.49061072   4.49061072   4.5730024
   4.61297666   4.61297666   4.62438501   4.62438501   4.88044049
   4.88044049   5.07853788   5.07853788   5.26449478   5.34241526
   5.34241526   5.55286094   5.55286094   5.85015693   6.204232
   6.204232     6.43285943   6.43285943   6.68021006   6.74773764
   6.74773764   7.31547883   7.31547883   7.46066459   7.97164126
   8.12118755   8.12118755   8.34351023  15.03673518  18.68687205]
  beta  mo_energy =
[-20.64461633 -15.83337965 -15.6810391   -1.63078559  -1.4496806
  -0.82434824  -0.77812581  -0.77812581  -0.6955252   -0.49371279
  -0.49371279   0.17995289   0.17995289   0.29611968   0.43150726
   0.54485099   0.54485099   0.61193573   0.66898987   0.68793771
   0.68793771   0.74592421   0.8757906    0.8757906    0.9851862
   0.9851862    1.05639931   1.28708071   1.35939537   1.35939537
   1.39202741   1.39202741   1.56945667   1.88087943   1.88087943
   1.94602921   1.94602921   2.17574658   2.48376674   2.55318086
   2.55318086   2.89439491   3.13265148   3.13265148   3.32545961
   3.51800143   3.51800143   3.80963932   3.80963932   3.86477374
   3.88201791   3.88201791   4.08311753   4.08311753   4.3988124
   4.3988124    4.42578982   4.49060832   4.49060832   4.57300181
   4.61298106   4.61298106   4.62439299   4.62439299   4.88042359
   4.88042359   5.07853889   5.07853889   5.26449428   5.34241029
   5.34241029   5.55286591   5.55286591   5.85015692   6.20423545
   6.20423545   6.43286226   6.43286226   6.68021251   6.74774761
   6.74774761   7.31548439   7.31548439   7.46066493   7.97164333
   8.12118882   8.12118882   8.34351333  15.03673852  18.68687079]
multiplicity <S^2> = 2.7821958e-08  2S+1 = 1.0000001
E1 = -373.8576066995413  Ecoul = 127.62570714145076
cycle= 14 E= -183.755717212722  delta_E= -1.23e-08  |g|= 1.41e-05  |ddm|= 0.000413
    CPU time for cycle= 14      3.65 sec, wall time      0.60 sec
  alpha nocc = 11  HOMO = -0.493713327950183  LUMO = 0.179951063676729
  beta  nocc = 11  HOMO = -0.493715168912528  LUMO = 0.179951437410416
  alpha mo_energy =
[-20.64463298 -15.83338986 -15.68102756  -1.63079525  -1.44967966
  -0.82436078  -0.7781372   -0.7781372   -0.69551154  -0.49371333
  -0.49371333   0.17995106   0.17995106   0.29611623   0.431508
   0.54485341   0.54485341   0.61193041   0.66898783   0.68794087
   0.68794087   0.74592499   0.87578428   0.87578428   0.98518535
   0.98518535   1.05640069   1.28708166   1.359396     1.359396
   1.39203223   1.39203223   1.56945256   1.88087198   1.88087198
   1.94602812   1.94602812   2.17574765   2.48375919   2.55317723
   2.55317723   2.8943904    3.13264711   3.13264711   3.32545862
   3.51800609   3.51800609   3.80963938   3.80963938   3.86477793
   3.88201688   3.88201688   4.08311203   4.08311203   4.39881719
   4.39881719   4.42579036   4.49060802   4.49060802   4.57299869
   4.61297394   4.61297394   4.62438532   4.62438532   4.8804378
   4.8804378    5.07853719   5.07853719   5.26449361   5.34241511
   5.34241511   5.55285636   5.55285636   5.85015398   6.20422858
   6.20422858   6.43285757   6.43285757   6.68020752   6.74773327
   6.74773327   7.31547344   7.31547344   7.46066213   7.97163662
   8.12118465   8.12118465   8.34350573  15.03672902  18.68687177]
  beta  mo_energy =
[-20.644632   -15.83338839 -15.68103016  -1.63079306  -1.44968142
  -0.82435746  -0.77813357  -0.77813357  -0.69551585  -0.49371517
  -0.49371517   0.17995144   0.17995144   0.29611684   0.4315082
   0.5448524    0.5448524    0.61193203   0.66898762   0.68793944
   0.68793944   0.74592481   0.87578565   0.87578565   0.98518569
   0.98518569   1.0564004    1.28708051   1.35939564   1.35939564
   1.39203034   1.39203034   1.56945322   1.8808733    1.8808733
   1.94602836   1.94602836   2.17574729   2.48376069   2.5531776
   2.5531776    2.89439098   3.13264828   3.13264828   3.32545821
   3.51800459   3.51800459   3.80963924   3.80963924   3.86477686
   3.88201724   3.88201724   4.08311247   4.08311247   4.3988159
   4.3988159    4.42578946   4.49060723   4.49060723   4.57299897
   4.61297485   4.61297485   4.62438737   4.62438737   4.88043349
   4.88043349   5.07853753   5.07853753   5.26449353   5.34241378
   5.34241378   5.55285719   5.55285719   5.85015394   6.20422939
   6.20422939   6.4328583    6.4328583    6.68020822   6.74773494
   6.74773494   7.31547505   7.31547505   7.46066201   7.97163749
   8.12118498   8.12118498   8.34350665  15.03672959  18.68687139]
multiplicity <S^2> = 1.7019328e-09  2S+1 = 1
E1 = -373.8576367797542  Ecoul = 127.62573722102212
cycle= 15 E= -183.755717213364  delta_E= -6.42e-10  |g|= 6.53e-06  |ddm|= 8.43e-05
    CPU time for cycle= 15      3.55 sec, wall time      0.64 sec
  alpha nocc = 11  HOMO = -0.493712613377157  LUMO = 0.179951350640171
  beta  nocc = 11  HOMO = -0.493713613122592  LUMO = 0.179951714443235
  alpha mo_energy =
[-20.6446257  -15.83338601 -15.68103207  -1.63079313  -1.44967874
  -0.82435776  -0.77813574  -0.77813574  -0.69551325  -0.49371261
  -0.49371261   0.17995135   0.17995135   0.29611726   0.43150751
   0.54485334   0.54485334   0.61193173   0.66898846   0.6879409
   0.6879409    0.7459252    0.87578538   0.87578538   0.9851856
   0.9851856    1.0564004    1.28708213   1.35939621   1.35939621
   1.39203228   1.39203228   1.56945395   1.8808737    1.8808737
   1.94602851   1.94602851   2.17574719   2.48376156   2.55317848
   2.55317848   2.89439168   3.132648     3.132648     3.32545931
   3.51800534   3.51800534   3.80963946   3.80963946   3.86477666
   3.88201712   3.88201712   4.08311362   4.08311362   4.39881648
   4.39881648   4.42579063   4.49060882   4.49060882   4.57300023
   4.61297639   4.61297639   4.62438696   4.62438696   4.88043553
   4.88043553   5.07853771   5.07853771   5.26449397   5.34241378
   5.34241378   5.5528596    5.5528596    5.85015539   6.20423105
   6.20423105   6.43285907   6.43285907   6.6802089    6.74773739
   6.74773739   7.31547714   7.31547714   7.46066335   7.97163925
   8.12118633   8.12118633   8.34350873  15.0367331   18.68687124]
  beta  mo_energy =
[-20.64462467 -15.83338451 -15.68103437  -1.630791    -1.4496801
  -0.82435516  -0.77813237  -0.77813237  -0.69551719  -0.49371361
  -0.49371361   0.17995171   0.17995171   0.29611784   0.43150757
   0.54485244   0.54485244   0.61193295   0.66898856   0.6879396
   0.6879396    0.74592486   0.8757868    0.8757868    0.98518585
   0.98518585   1.05640011   1.2870812    1.35939584   1.35939584
   1.39203048   1.39203048   1.56945443   1.88087511   1.88087511
   1.94602867   1.94602867   2.17574694   2.48376269   2.55317876
   2.55317876   2.89439231   3.13264905   3.13264905   3.32545906
   3.51800397   3.51800397   3.80963931   3.80963931   3.86477575
   3.88201742   3.88201742   4.08311426   4.08311426   4.39881525
   4.39881525   4.42578998   4.4906082    4.4906082    4.5730002
   4.61297735   4.61297735   4.62438883   4.62438883   4.88043155
   4.88043155   5.07853797   5.07853797   5.26449387   5.3424126
   5.3424126    5.55286062   5.55286062   5.85015538   6.20423183
   6.20423183   6.43285972   6.43285972   6.68020948   6.74773941
   6.74773941   7.31547847   7.31547847   7.46066336   7.97163981
   8.12118663   8.12118663   8.34350948  15.03673379  18.68687092]
multiplicity <S^2> = 1.4915962e-09  2S+1 = 1
E1 = -373.8576161839338  Ecoul = 127.62571662517922
Extra cycle  E= -183.755717213387  delta_E= -2.25e-11  |g|= 5.23e-06  |ddm|= 5.93e-06
    CPU time for scf_cycle     60.01 sec, wall time      9.79 sec
    CPU time for SCF     60.01 sec, wall time      9.79 sec
converged SCF energy = -183.755717213387  <S^2> = 1.4915962e-09  2S+1 = 1
    CPU time for UHF partial hessian     24.73 sec, wall time     25.65 sec
    CPU time for UHF hessian     63.14 sec, wall time     40.51 sec
E1 = -373.8576161839338  Ecoul = 127.62571662517922
E1 = -373.8576161839338  Ecoul = 127.62571662517922
