#INFO: **** input file is /Users/jaydenl/Dev/ASDRP/QCHEM/PySCF-UI/stream.py ****
import streamlit as st
import streamlit.components.v1 as components
from pyscf import gto, scf
from streamlit.runtime.scriptrunner import add_script_run_ctx
import threading
import time
from stmol import *
import py3Dmol
from rdkit import Chem
from rdkit.Chem import rdDetermineBonds
from rdkit.Chem.rdmolfiles import MolFromXYZFile
from rdkit.Chem import Descriptors
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from collections import defaultdict
import altair as alt
import os
from pyscf.hessian import thermo
from streamlit_extras.row import row
from utils import getAtomicToMoleculeName
# R^2
from sklearn.metrics import r2_score

moleculeNames = getAtomicToMoleculeName()
trend_threshold = 0.95

if 'queue' not in st.session_state:
    st.session_state['queue'] = []
if 'results' not in st.session_state:
    st.session_state['results'] = []
if 'computing' not in st.session_state:
    st.session_state['computing'] = False

# get all files in directory names precomputed_molecules:
precomputed_molecules = list(map(lambda x: x.split(
    ".")[0], os.listdir("precomputed_molecules")))


def compute_pyscf(atom, basis_option, verbose_option, temperature, pressure):
    # print(atom)
    # print(basis_option)
    # print(verbose_option)
    mol = gto.Mole()
    mol.atom = atom
    mol.basis = basis_option
    # mol.verbose = verbose_option
    mol.verbose = int(verbose_option[0])
    mol.output = 'output-test.txt'
    mol.build()

    # mf = scf.RHF(mol)
    # mf.kernel()
    mf =mol.UHF().run()
    hessian = mf.Hessian().kernel()
    harmanalysis = thermo.harmonic_analysis(mf.mol, hessian)
    thermo_info =  thermo.thermo(mf, harmanalysis['freq_au'], temperature, pressure)
    
    outputFile = open("output-test.txt", "r")
    # Extract energy and time information
    time = None
    hessian_time = None
    energy = None
    for line in outputFile.readlines():
        if line.startswith("    CPU time for SCF"):
            time = float(line.split(" ")[-2])

        elif line.startswith("converged SCF energy = "):
            energy = float([i for i in line.split() if i != ''][4])
        elif line.startswith("    CPU time for UHF hessian"):
            hessian_time = float(line.split(" ")[-2])
    
    #Helmholtz Free Energy
    F_elec = (thermo_info['E_elec'][0] - temperature * thermo_info['S_elec' ][0], 'Eh')
    F_trans = (thermo_info['E_trans'][0] - temperature * thermo_info['S_trans'][0], 'Eh')
    F_rot = (thermo_info['E_rot'][0] - temperature * thermo_info['S_rot'][0], 'Eh')
    F_vib = (thermo_info['E_vib'][0] - temperature * thermo_info['S_vib'][0], 'Eh')
    F_tot = (F_elec[0] + F_trans[0] + F_rot[0] + F_vib[0], 'Eh') 
    
    #Massieu Potential/Helmholtz Free Entropy
    Φ_elec = (F_elec[0]/(-1*temperature), 'Eh/K')
    Φ_trans = (F_trans[0]/(-1*temperature), 'Eh/K')
    Φ_rot = (F_rot[0]/(-1*temperature), 'Eh/K')
    Φ_vib = (F_vib[0]/(-1*temperature), 'Eh/K')
    Φ_tot = (F_tot[0]/(-1*temperature), 'Eh/K')    
    
    #Planck Potential/Gibbs Free Entropy
    Ξ_elec = (thermo_info['G_elec'][0]/(-1*temperature), 'Eh/K')
    Ξ_trans = (thermo_info['G_trans'][0]/(-1*temperature), 'Eh/K')
    Ξ_rot = (thermo_info['G_rot'][0]/(-1*temperature), 'Eh/K')
    Ξ_vib = (thermo_info['G_vib'][0]/(-1*temperature), 'Eh/K')
    Ξ_tot = (thermo_info['G_tot'][0]/(-1*temperature), 'Eh/K')   
    
    data = {
        # 'energy': energy,
        'Runtime': time,
        'Hessian Runtime': hessian_time,
        'Converged SCF-HF Nuclear Energy (in Ha)': mf.energy_nuc(),
        'Converged SCF-HF Electronic Energy (in Ha)': mf.energy_elec(),
        'Converged SCF-HF Total Energy (in Ha)': mf.energy_tot(),
        # thermodynamic data
        # Heat Capacity
        'Constant Volume Heat Capacity (Ha/K)': thermo_info['Cv_tot'][0],
        'Constant Pressure Heat Capacity (Ha/K)': thermo_info['Cp_tot'][0],
        'Zero-Point Energy (Ha)': thermo_info['ZPE'][0],
        '0K Internal Energy (Ha)': thermo_info['E_0K'][0],
        'Internal Energy (at given T) (Ha)': thermo_info['E_tot'][0],
            'Electronic Internal Energy (Ha)': thermo_info['E_elec'][0],
            'Vibrational Internal Energy (Ha)': thermo_info['E_vib'][0],
            'Translational Internal Energy (Ha)': thermo_info['E_trans'][0],
            'Rotational Internal Energy (Ha)': thermo_info['E_rot'][0],
        # enthalpy
        'Enthalpy (Ha)': thermo_info['H_tot'][0],
            'Electronic Enthalpy (Ha)': thermo_info['H_elec'][0],
            'Vibrational Enthalpy (Ha)': thermo_info['H_vib'][0],
            'Translational Enthalpy (Ha)': thermo_info['H_trans'][0],
            'Rotational Enthalpy (Ha)': thermo_info['H_rot'][0],
        # gibbs free energy
        'Gibbs Free Energy (Ha)': thermo_info['G_tot'][0],
            'Electronic Gibbs Free Energy (Ha)': thermo_info['G_elec'][0],
            'Vibrational Gibbs Free Energy (Ha)': thermo_info['G_vib'][0],
            'Translational Gibbs Free Energy (Ha)': thermo_info['G_trans'][0],
            'Rotational Gibbs Free Energy (Ha)': thermo_info['G_rot'][0],
        # Helmholtz free energy
        'Helmholtz Free Energy (Ha)': F_tot[0],
            'Electronic Helmholtz Free Energy (Ha)': F_elec[0],
            'Vibrational Helmholtz Free Energy (Ha)': F_vib[0],
            'Translational Helmholtz Free Energy (Ha)': F_trans[0],
            'Rotational Helmholtz Free Energy (Ha)': F_rot[0],
        # Entropy
        'Entropy (Ha/K)': thermo_info['S_tot'][0],
            'Electronic Entropy (Ha/K)': thermo_info['S_elec'][0],
            'Vibrational Entropy (Ha/K)': thermo_info['S_vib'][0],
            'Translational Entropy (Ha/K)': thermo_info['S_trans'][0],
            'Rotational Entropy (Ha/K)': thermo_info['S_rot'][0],
        # Massieu Potential/Helmholtz Free Entropy
        'Massieu Potential/Helmholtz Free Potential (Ha/K)': Φ_tot[0],
            'Electronic Massieu Potential/Helmholtz Free Potential (Ha/K)': Φ_elec[0],
            'Vibrational Massieu Potential/Helmholtz Free Potential (Ha/K)': Φ_vib[0],
            'Translational Massieu Potential/Helmholtz Free Potential (Ha/K)': Φ_trans[0],
            'Rotational Massieu Potential/Helmholtz Free Potential (Ha/K)': Φ_rot[0],
        # Planck Potential/Gibbs Free Entropy
        'Planck Potential/Gibbs Free Potential (Ha/K)': Ξ_tot[0],
            'Electronic Planck Potential/Gibbs Free Potential (Ha/K)': Ξ_elec[0],
            'Vibrational Planck Potential/Gibbs Free Potential (Ha/K)': Ξ_vib[0],
            'Translational Planck Potential/Gibbs Free Potential (Ha/K)': Ξ_trans[0],
            'Rotational Planck Potential/Gibbs Free Potential (Ha/K)': Ξ_rot[0],
    }
    return data


def getMoleculeName(atom):
    d = {}
    for line in atom.split("\n"):
        try:
            name = line.split()[0]
            if name in d:
                d[name] += 1
            else:
                d[name] = 1
        except:
            pass
    name = ""
    for key in d:
        name += key + str(d[key])
    return name


# Streamlit layout
st.title("PySCF")

# Function to process the uploaded text file


def process_text_file(uploaded_file):
    if uploaded_file is not None:
        # Read the contents of the file
        text_contents = uploaded_file.getvalue().decode("utf-8")
        return text_contents
    else:
        return None


def addToQueue(atom, basis):
    st.session_state['queue'].append((atom, basis))


tabDatabase, tabTextInput, tabFileInput = st.tabs(
    ["Database", "Text Input", "File Input"])

basis_option = st.selectbox(
    "Basis", ["cc-pVTZ", "cc-pVDZ", "cc-pVQZ", "cc-pV5Z"])
verbose_option = st.selectbox("Verbose", index=2, options=[
                              "3, energy only", "4, cycles and energy", "5, cycles energy and runtime", "9, max"])
# verbose_option = st.slider("Verbose", min_value=0, max_value=9, value=2)

#Second Input (NEW) - Pressure of the system
# pressure = 101325 #in Pascals (Pa), 101325 Pa = 1 atm
#Third Input (NEW) - Temperature of the system
# temperature = 298.15 #in K, 298.15K = room temperature (25 degrees Celsius) 
thermo_row = row(2)
temp = thermo_row.number_input("Temperature (K)", min_value=0.0, value=298.15)
press = thermo_row.number_input("Pressure (Pa)", min_value=0.0, value=101325.0)

with tabDatabase:
    selectedMolecule = st.selectbox(
        'Search Molecule Database', precomputed_molecules)
    if st.button('Add to Queue', use_container_width=True, key="db"):
        if selectedMolecule:
            parseDatafile = open(
                "precomputed_molecules/" + selectedMolecule + ".geom.txt", "r").readlines()[4:]
            parseDatafile = "\n".join(parseDatafile[:-1])
            addToQueue(parseDatafile, basis_option)
        else:
            st.warning(
                "Please select a molecule using dropdown menu or inputting a text file.")

with tabTextInput:
    # Create a Streamlit button which gives example
    with st.expander("See Example Input"):
        st.write("C 0.0000000 0.0000000 0.0000000")
        st.write("H 0.6311940 0.6311940 0.6311940")
        st.write("H -0.6311940 -0.6311940 0.6311940")
        st.write("H -0.6311940 0.6311940 -0.6311940")
        st.write("H 0.6311940 -0.6311940 -0.631194")
    # Fills xyz_input text area to the contents of the uploaded file
    xyz_input = st.text_area("XYZ Input", key="textxyz")

    if st.button('Add to Queue', use_container_width=True, key="text"):
        if xyz_input:
            addToQueue(xyz_input, basis_option)
        else:
            st.warning(
                "Please provide an XYZ input using the text box or inputting a text file.")

with tabFileInput:
    # Create a Streamlit button which gives example
    with st.expander("See Example Input"):
        st.write("C 0.0000000 0.0000000 0.0000000")
        st.write("H 0.6311940 0.6311940 0.6311940")
        st.write("H -0.6311940 -0.6311940 0.6311940")
        st.write("H -0.6311940 0.6311940 -0.6311940")
        st.write("H 0.6311940 -0.6311940 -0.631194")
    # Display file uploader for a single text file and processes it
    uploaded_file = st.file_uploader("Upload a XYZ input", type=["txt"])
    text_contents = process_text_file(uploaded_file)
    xyz_input = st.text_area(
        "XYZ Input", value=text_contents, key="filexyz") if text_contents else None
    if st.button('Add to Queue', use_container_width=True, key="filequeue"):
        if text_contents:
            addToQueue(text_contents, basis_option)
        else:
            st.warning(
                "Please provide an XYZ input using file uploader")

col1, col2, col3, col4 = st.columns(4, gap="small")

# if col1.button("Add to Queue"):
#     if xyz_input:
#         addToQueue(xyz_input)
#     else:
#         st.warning(
#             "Please provide an XYZ input using the text box or inputting a text file.")

# Computes only if something is added to the queue; grayed out otherwise
compute_disabled = len(st.session_state['queue']) == 0
if st.button("Compute", disabled=compute_disabled, type="primary", use_container_width=True) or st.session_state['computing'] == True:
    if len(st.session_state['queue']) > 0:
        with st.spinner("Computing " + getMoleculeName(st.session_state['queue'][0][0]) + "..."):
            st.session_state['computing'] = True
            atom = st.session_state['queue'][0][0]
            basis = st.session_state['queue'][0][1]
            st.session_state['queue'].pop(0)
            # st.write("Computing...")
            # progress_text = "Computing..."
            # my_bar = st.progress(0, text=progress_text)

            # for percent_complete in range(100):
            #     time.sleep(0.01)
            #     my_bar.progress(percent_complete + 1, text=progress_text)
            # time.sleep(1)
            # my_bar.empty()

            # Delete empty lines
            parsed = [line for line in atom.splitlines() if line.strip() != ""]
            xyz = "\n".join(parsed)
            mol = f"{len(parsed)}\nname\n{str(xyz)}"

            # output xyz into molecule.xyz file
            with open('molecule.xyz', 'w') as f:
                f.write(f"{len(parsed)}\nhi\n{str(xyz)}")

            raw_mol = MolFromXYZFile('molecule.xyz')
            rdkit_mol = Chem.Mol(raw_mol)
            rdDetermineBonds.DetermineBonds(rdkit_mol, charge=0)

            data = compute_pyscf(
                atom, basis, verbose_option, temp, press)
            data['Atoms'] = rdkit_mol.GetNumAtoms()
            data['Bonds'] = rdkit_mol.GetNumBonds()
            data['Rings'] = rdkit_mol.GetRingInfo().NumRings()
            data['Weight'] = Descriptors.MolWt(rdkit_mol)
            data['Molecule'] = mol
            data['Rdkit Molecule'] = rdkit_mol
            data['Basis'] = basis
            data['Molecule Name'] = getMoleculeName(atom)
            
            st.session_state['results'].append(data)
            st.rerun()
            
    elif st.session_state['computing'] == True:
        st.session_state['computing'] = False
    else:
        st.warning("Please add an XYZ input to the queue.")

if 'queue' in st.session_state:
    st.subheader("Queue")
    for queue_item in st.session_state['queue']:
        st.write(f"{getMoleculeName(queue_item[0])} | {queue_item[1]}")


tab1, tab2, tab3 = st.tabs(['Results', 'View Graphs', 'View Logs'])

with tab1:
    if 'results' in st.session_state:
        st.subheader("Results")
        for result_item in st.session_state['results']:
            data = result_item
            with st.container():
                result_col_1, result_col_2 = st.columns([2, 1])
                result_col_1.write(
                    f"{data['Molecule Name']} | {data['Basis']} | Runtime: {data['Runtime']} seconds | Hessian Runtime: {data['Hessian Runtime']} seconds")
                result_col_1.write(
                    f"\# of Atoms: {data['Atoms']} | \# of Bonds: {data['Bonds']} | \# of Rings:  {data['Rings']}")
                result_col_1.write(
                    f"Molecular Weight: {data['Weight']}")
                # energy data
                for key, value in data.items():
                    if key not in ['Molecule', 'Rdkit Molecule', 'Basis', 'Molecule Name', 'Atoms', 'Bonds', 'Rings', 'Weight', 'Runtime', 'Hessian Runtime']:
                        result_col_1.write(f"{key}: {value}")

                with result_col_2:
                    speck_plot(
                        data['Molecule'], component_h=200, component_w=200, wbox_height="auto", wbox_width="auto")
                # linebreak
                st.write("")
                st.write("")

with tab2:
    # st.subheader("Comparative Graphs (WIP)")
    
    def count_atoms(molecule):
    # Check that there is a valid molecule
        if molecule:

            # Add hydrogen atoms--RDKit excludes them by default
            molecule_with_Hs = Chem.AddHs(molecule)
            comp = defaultdict(lambda: 0)

            # Get atom counts
            for atom in molecule_with_Hs.GetAtoms():
                comp[atom.GetAtomicNum()] += 1

            # # If charged, add charge as "atomic number" 0
            # charge = GetFormalCharge(molecule_with_Hs)
            # if charge != 0:
            #     comp[0] = charge
            return comp

    if 'results' in st.session_state and len(st.session_state['results']) > 1:
        st.subheader("Comparative Graphs")

        independent = [
            'Atoms',
            'Bonds',
            # 'Rings',
            'Weight',
        ]
        
        exclude = [
            'Basis',
            'Rings',
            'Rdkit Molecule',
            'Converged SCF-HF Electronic Energy (in Ha)',
            'Molecule',
            'Molecule Name',
        ]
        
        dependent = [i for i in st.session_state['results'][0].keys() if i not in independent]
        dependent = [i for i in dependent if i not in exclude]
        
        df_columns = list(st.session_state['results'][0].keys())
        df_columns.remove('Rdkit Molecule')
        
        df = pd.DataFrame(st.session_state['results'], columns=df_columns)
        
        
        for label in independent:
            for target in dependent:
                print(label, target)
                print(df[label].values, df[target].values)
                # Linear Regression
                coeffs_linear = np.polyfit(
                    df[label].values, df[target].values, 1)
                poly1d_fn_linear = np.poly1d(coeffs_linear)
                x = np.linspace(min(df[label]), max(df[label]), 100)

                # Quadratic Regression
                coeffs_quad = np.polyfit(
                    df[label].values, df[target].values, 2)
                poly1d_fn_quad = np.poly1d(coeffs_quad)
                
                # calculate R^2
                r2_linear = r2_score(df[target], poly1d_fn_linear(df[label]))
                r2_quad = r2_score(df[target], poly1d_fn_quad(df[label]))
                
                if r2_linear >= trend_threshold or r2_quad >= trend_threshold:
                    st.markdown(f'### Number of {label} vs. {target}')
                    # Display Equations
                    st.markdown(
                        f"<span style='color: red;'>Best Fit Linear Equation ({target}): Y = {coeffs_linear[0]:.4f}x + {coeffs_linear[1]:.4f} (R^2 = {r2_linear:.4f})</span>", unsafe_allow_html=True)
                    st.markdown(
                        f"<span style='color: green;'>Best Fit Quadratic Equation ({target}): Y = {coeffs_quad[0]:.4f}x² + {coeffs_quad[1]:.4f}x + {coeffs_quad[2]:.4f} (R^2 = {r2_quad:.4f})</span>", unsafe_allow_html=True)

                    # Create a DataFrame for the regression lines
                    df_line = pd.DataFrame(
                        {label: x, 'Linear': poly1d_fn_linear(x), 'Quadratic': poly1d_fn_quad(x)})

                    # Plot
                    scatter = alt.Chart(df).mark_circle(size=60).encode(
                        x=label,
                        y=target,
                        tooltip=[label, target]
                    )

                    line_linear = alt.Chart(df_line).mark_line(color='red').encode(
                        x=label,
                        y='Linear'
                    )

                    line_quad = alt.Chart(df_line).mark_line(color='green').encode(
                        x=label,
                        y='Quadratic'
                    )

                    # Display the plot
                    st.altair_chart(scatter + line_linear +
                                    line_quad, use_container_width=True)
        
        
        # for atomic_num, count in count_atoms(st.session_state['results'][0]['rdkit_mol']).items():
        
        # atom_counts = [count_atoms(result_item['rdkit_mol'])
        #                for result_item in st.session_state['results']]

        # # Prepare datasets
        # num_atoms = [result_item['atoms']
        #              for result_item in st.session_state['results']]
        # num_bonds = [result_item['bonds'].GetNumBonds()
        #              for result_item in st.session_state['results']]
        # num_conformers = [result_item[4].GetNumConformers()
        #                   for result_item in st.session_state['results']]
        # # 6 and 1 are atomic code
        # num_carbons = [atom_counts[i][6] for i in range(len(atom_counts))]
        # num_hydrogens = [atom_counts[i][1] for i in range(len(atom_counts))]

        # energies = [result_item[1]
        #             for result_item in st.session_state['results']]
        # runtimes = [result_item[2]
        #             for result_item in st.session_state['results']]

        # df_atoms = pd.DataFrame(
        #     {'Atoms': num_atoms, 'Energy': energies, 'Runtime': runtimes})
        # df_bonds = pd.DataFrame(
        #     {'Bonds': num_bonds, 'Energy': energies, 'Runtime': runtimes})
        # df_conformers = pd.DataFrame(
        #     {'Conformers': num_conformers, 'Energy': energies, 'Runtime': runtimes})
        # df_carbons = pd.DataFrame(
        #     {'Carbons': num_carbons, 'Energy': energies, 'Runtime': runtimes})
        # df_hydrogens = pd.DataFrame(
        #     {'Hydrogens': num_hydrogens, 'Energy': energies, 'Runtime': runtimes})

        # Generate Graphs
        # for df, label in zip([df_atoms, df_bonds, df_carbons, df_hydrogens], ['Atoms', 'Bonds', 'Carbons', 'Hydrogens']):
        #     for target in ['Energy', 'Runtime']:
        #         st.markdown(f'### Number of {label} vs. {target}')

        #         # Linear Regression
        #         coeffs_linear = np.polyfit(
        #             df[label].values, df[target].values, 1)
        #         poly1d_fn_linear = np.poly1d(coeffs_linear)
        #         x = np.linspace(min(df[label]), max(df[label]), 100)

        #         # Quadratic Regression
        #         coeffs_quad = np.polyfit(
        #             df[label].values, df[target].values, 2)
        #         poly1d_fn_quad = np.poly1d(coeffs_quad)

        #         # Display Equations
        #         st.markdown(
        #             f"<span style='color: red;'>Best Fit Linear Equation ({target}): Y = {coeffs_linear[0]:.4f}x + {coeffs_linear[1]:.4f}</span>", unsafe_allow_html=True)
        #         st.markdown(
        #             f"<span style='color: green;'>Best Fit Quadratic Equation ({target}): Y = {coeffs_quad[0]:.4f}x² + {coeffs_quad[1]:.4f}x + {coeffs_quad[2]:.4f}</span>", unsafe_allow_html=True)

        #         # Create a DataFrame for the regression lines
        #         df_line = pd.DataFrame(
        #             {label: x, 'Linear': poly1d_fn_linear(x), 'Quadratic': poly1d_fn_quad(x)})

        #         # Plot
        #         scatter = alt.Chart(df).mark_circle(size=60).encode(
        #             x=label,
        #             y=target,
        #             tooltip=[label, target]
        #         )

        #         line_linear = alt.Chart(df_line).mark_line(color='red').encode(
        #             x=label,
        #             y='Linear'
        #         )

        #         line_quad = alt.Chart(df_line).mark_line(color='green').encode(
        #             x=label,
        #             y='Quadratic'
        #         )

        #         # Display the plot
        #         st.altair_chart(scatter + line_linear +
        #                         line_quad, use_container_width=True)

        #     # Display Equation
        #     # st.write(f"Best Fit Equation ({target}): Y = {coeffs[0]:.4f}x + {coeffs[1]:.4f}")

with tab3:
    with open('output-test.txt', 'r') as file:
        log_data = file.read()
        st.markdown(f'```\n{log_data}\n```')


# xyzview = py3Dmol.view(query='pdb:1A2C')
# xyzview.setStyle({'cartoon':{'color':'spectrum'}})
# showmol(xyzview, height = 500,width=800)

# def draw_with_spheres(mol):
#     v = py3Dmol.view(width=300,height=300)
#     IPythonConsole.addMolToView(mol,v)
#     v.zoomTo()
#     v.setStyle({'sphere':{'radius':0.3},'stick':{'radius':0.2}});
#     v.show()


# Attempt at creating an async queue, need to find a way to detect browser closing to stop the queue

# def runQueue():
#     for i in range(1, 10):
#         time.sleep(1)
#         print("test", str(i))


# if 'queue-running' not in st.session_state:
#     st.session_state['queue-running'] = True
#     t = threading.Thread(target=runQueue)
#     add_script_run_ctx(t)
#     t.start()

# components.html("""<html>
# <script>
#     const origClose = window.close;
#     window.close = () => {
#         console.log("asdf");
#         // origClose();
#     }
#     document.addEventListener("beforeunload", () => {
#                 alert(1);
#                 console.log(a.a.a.a);
#     })
# </script>
# <div style="color: white" onclick="">
#                 hihihihi
# </div>
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Jaydens-MacBook.local', release='23.0.0', version='Darwin Kernel Version 23.0.0: Fri Sep 15 14:41:34 PDT 2023; root:xnu-10002.1.13~1/RELEASE_ARM64_T8103', machine='arm64', processor='arm')  Threads 1
Python 3.8.18 | packaged by conda-forge | (default, Oct 10 2023, 15:46:56) 
[Clang 16.0.6 ]
numpy 1.24.4  scipy 1.10.1
Date: Sun Mar 24 20:25:44 2024
PySCF version 2.4.0
PySCF path  /Users/jaydenl/anaconda3/envs/pyscfui/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 8
[INPUT] num. electrons = 18
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 C      0.000000000000   0.000000000000   0.762149000000 AA    0.000000000000   0.000000000000   1.440252876111 Bohr   0.0
[INPUT]  2 C      0.000000000000   0.000000000000  -0.762149000000 AA    0.000000000000   0.000000000000  -1.440252876111 Bohr   0.0
[INPUT]  3 H      0.000000000000   1.010687000000   1.154386000000 AA    0.000000000000   1.909921627658   2.181473382032 Bohr   0.0
[INPUT]  4 H     -0.875281000000  -0.505344000000   1.154386000000 AA   -1.654041372035  -0.954961758692   2.181473382032 Bohr   0.0
[INPUT]  5 H      0.875281000000  -0.505344000000   1.154386000000 AA    1.654041372035  -0.954961758692   2.181473382032 Bohr   0.0
[INPUT]  6 H      0.000000000000  -1.010687000000  -1.154386000000 AA    0.000000000000  -1.909921627658  -2.181473382032 Bohr   0.0
[INPUT]  7 H     -0.875281000000   0.505344000000  -1.154386000000 AA   -1.654041372035   0.954961758692  -2.181473382032 Bohr   0.0
[INPUT]  8 H      0.875281000000   0.505344000000  -1.154386000000 AA    1.654041372035   0.954961758692  -2.181473382032 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] C
[INPUT] 0    0    [8    /2   ]  8236              0.000531 -0.000113
                                1235              0.004108 -0.000878
                                280.8             0.021087 -0.00454
                                79.27             0.081853 -0.018133
                                25.59             0.234817 -0.05576
                                8.997             0.434401 -0.126895
                                3.319             0.346129 -0.170352
                                0.3643            -0.008983 0.598684
[INPUT] 0    0    [1    /1   ]  0.9059               1
[INPUT] 0    0    [1    /1   ]  0.1285               1
[INPUT] 1    0    [3    /1   ]  18.71             0.014031
                                4.133             0.086866
                                1.2               0.290216
[INPUT] 1    0    [1    /1   ]  0.3827               1
[INPUT] 1    0    [1    /1   ]  0.1209               1
[INPUT] 2    0    [1    /1   ]  1.097                1
[INPUT] 2    0    [1    /1   ]  0.318                1
[INPUT] 3    0    [1    /1   ]  0.761                1
[INPUT] H
[INPUT] 0    0    [3    /1   ]  33.87             0.006068
                                5.095             0.045308
                                1.159             0.202822
[INPUT] 0    0    [1    /1   ]  0.3258               1
[INPUT] 0    0    [1    /1   ]  0.1027               1
[INPUT] 1    0    [1    /1   ]  1.407                1
[INPUT] 1    0    [1    /1   ]  0.388                1
[INPUT] 2    0    [1    /1   ]  1.057                1

nuclear repulsion = 42.4530626912268
number of shells = 54
number of NR pGTOs = 180
number of NR cGTOs = 144
basis = cc-pVTZ
ecp = {}
CPU time:        91.34


******** <class 'pyscf.scf.uhf.UHF'> ********
method = UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/_x/xd2ms3z958s6pfllwphw48vm0000gn/T/tmpe9dy729z
max_memory 4000 MB (current use 0 MB)
number electrons alpha = 9  beta = 9
Set gradient conv threshold to 3.16228e-05
E1 = -187.0791524396599  Ecoul = 65.34358573233669
init E= -79.2825040160965
cond(S) = 6211.957606840642
    CPU time for initialize scf      5.73 sec, wall time      2.00 sec
  alpha nocc = 9  HOMO = -0.431671982495331  LUMO = 0.0705701856577406
  beta  nocc = 9  HOMO = -0.425712933640033  LUMO = 0.0730356900379176
  alpha mo_energy =
[-11.38700286 -11.38383442  -1.47856185  -1.06404563  -0.60294667
  -0.60294646  -0.47997687  -0.43167219  -0.43167198   0.07057019
   0.11503768   0.15261165   0.15261171   0.18097487   0.18097496
   0.25253563   0.32934687   0.34703705   0.34703711   0.35395199
   0.35395199   0.50694707   0.51425558   0.51425567   0.5184512
   0.56655894   0.56873904   0.56873926   0.64709411   0.64709412
   0.7336307    0.7577364    0.89374853   0.89374856   0.98607145
   1.05981681   1.06753108   1.0675311    1.1480261    1.17541672
   1.17541684   1.21095808   1.21095811   1.22202775   1.26687568
   1.30423069   1.30423079   1.38292903   1.4245004    1.42450051
   1.50721289   1.50721292   1.53262568   1.5326258    1.67817668
   1.69056393   1.69056417   1.73751261   2.35154575   2.35154629
   2.44097985   2.51124052   2.51124062   2.56023377   2.59452239
   2.73448072   2.73448083   2.75496      2.94219216   2.94219231
   2.95930673   2.96188215   3.05612864   3.05915723   3.05915758
   3.11293141   3.11293151   3.17120294   3.24305194   3.24305195
   3.27866334   3.27866336   3.31378386   3.31378437   3.45908426
   3.4590844    3.52614576   3.56004823   3.65734286   3.65734304
   3.68332757   3.68780965   3.68780966   3.78975914   3.79399829
   3.79399844   3.96369828   3.96369843   4.00901851   4.00901852
   4.01638581   4.03761009   4.13606096   4.13606106   4.22440155
   4.24740829   4.24740836   4.28218741   4.32123934   4.3432957
   4.34329589   4.38978734   4.50616014   4.55235772   4.55235774
   4.56035004   4.5902286    4.59022889   4.78103353   5.05784141
   5.07377062   5.07377106   5.08958993   5.08959055   5.10827665
   5.1172215    5.22250318   5.22250452   5.55510513   5.5899871
   5.60103745   5.6010377    5.60548391   5.60548407   5.61617304
   5.69521989   5.7009058    5.70090622   6.13921339   6.13921357
   6.17343558   6.17343581  13.84275269  13.91779869]
  beta  mo_energy =
[-11.40108715 -11.39754273  -1.43887835  -1.03491129  -0.59154596
  -0.59154576  -0.47374928  -0.42571314  -0.42571293   0.07303569
   0.11668206   0.15364028   0.15364034   0.1825782    0.18257828
   0.25551786   0.32939423   0.346763     0.34676305   0.35461444
   0.35461444   0.50995496   0.51517011   0.51517021   0.52059693
   0.56908264   0.57109535   0.57109556   0.64892513   0.64892514
   0.73388183   0.7578433    0.89416858   0.8941686    0.9853343
   1.05898648   1.06891123   1.06891124   1.1505786    1.17783408
   1.17783419   1.21174387   1.2117439    1.22232791   1.26786921
   1.30408383   1.30408393   1.38322897   1.42496703   1.42496715
   1.50907208   1.50907211   1.53297633   1.53297644   1.68003087
   1.69215562   1.69215585   1.73938934   2.35224743   2.35224798
   2.44281082   2.51201169   2.51201179   2.56171886   2.59612525
   2.73625586   2.73625597   2.75834679   2.94446467   2.94446482
   2.96122401   2.96418371   3.05817947   3.06161106   3.06161141
   3.11542939   3.11542949   3.17448976   3.245829     3.24582901
   3.28051812   3.28051813   3.31634385   3.31634436   3.46016566
   3.4601658    3.52589221   3.55984479   3.65769191   3.65769208
   3.68382107   3.688385     3.68838502   3.79053074   3.79425928
   3.79425943   3.96322049   3.96322064   4.00888084   4.00888085
   4.01769456   4.03705764   4.1364147    4.1364148    4.22414685
   4.24675885   4.24675892   4.28360614   4.32081382   4.34375282
   4.34375301   4.38934892   4.50638518   4.55200474   4.55200476
   4.56110333   4.59096712   4.59096741   4.78166911   5.05847869
   5.07412782   5.07412826   5.09028658   5.0902872    5.10888025
   5.11828485   5.2235239    5.22352524   5.55590162   5.59080663
   5.60177954   5.60177979   5.60642002   5.60642017   5.61718149
   5.69664158   5.70173636   5.70173678   6.14024607   6.14024625
   6.17461448   6.17461471  13.84343231  13.91843626]
multiplicity <S^2> = 0.001389509  2S+1 = 1.0027752
E1 = -189.59257573361583  Ecoul = 67.89506411016575
cycle= 1 E= -79.2444489322233  delta_E= 0.0381  |g|= 0.155  |ddm|= 1.04
    CPU time for cycle= 1      3.31 sec, wall time      1.31 sec
  alpha nocc = 9  HOMO = -0.483930263511584  LUMO = 0.140126789879551
  beta  nocc = 9  HOMO = -0.483878034701789  LUMO = 0.140451494815328
  alpha mo_energy =
[-11.19157751 -11.19096487  -1.02214958  -0.84957908  -0.59678395
  -0.59678377  -0.49951333  -0.48393045  -0.48393026   0.14012679
   0.17974502   0.20843533   0.20843534   0.23647643   0.23647646
   0.33942814   0.38466639   0.40113215   0.40113216   0.41408894
   0.41408899   0.60459531   0.60459544   0.62457151   0.65146591
   0.67166866   0.68070663   0.68070684   0.72509022   0.72509022
   0.81444729   0.82448548   0.96612856   0.9661286    1.04870411
   1.12109277   1.1461758    1.14617582   1.23564083   1.25843158
   1.25843169   1.29333909   1.2933391    1.30429367   1.36550824
   1.37112818   1.37112827   1.45015458   1.50242724   1.50242735
   1.59078237   1.59078238   1.60815049   1.6081506    1.77048486
   1.77048511   1.78370155   1.84961279   2.45659504   2.45659556
   2.58452476   2.62258713   2.62258724   2.674038     2.70560073
   2.869339     2.86933909   2.91026476   3.07108916   3.07108929
   3.09024769   3.09614433   3.18254831   3.19552521   3.19552558
   3.24199345   3.24199357   3.30672827   3.37816217   3.3781622
   3.40907167   3.40907168   3.44886126   3.44886178   3.5745471
   3.57454724   3.62052212   3.65417195   3.75896627   3.75896649
   3.7886076    3.79186075   3.79186079   3.89146936   3.89146949
   3.8992839    4.05795708   4.05795727   4.11066016   4.1106602
   4.12780887   4.14573589   4.23325381   4.23325389   4.32062316
   4.33466011   4.33466023   4.3971866    4.41735019   4.44385897
   4.44385919   4.46358518   4.60099853   4.63568556   4.6356856
   4.68076728   4.70208172   4.70208204   4.89454353   5.1770721
   5.17932192   5.17932238   5.19788827   5.1978889    5.22549945
   5.24263046   5.34457164   5.34457305   5.68334655   5.71346068
   5.71346093   5.7137915    5.72779372   5.72779388   5.73862175
   5.82389692   5.8238974    5.84407433   6.28338766   6.28338779
   6.31692306   6.31692333  13.9868828   14.06863008]
  beta  mo_energy =
[-11.18994822 -11.18933824  -1.01803686  -0.84537771  -0.5953038
  -0.59530363  -0.49807044  -0.48387822  -0.48387803   0.14045149
   0.17989559   0.20873636   0.20873637   0.23682233   0.23682236
   0.33940058   0.38400123   0.40077397   0.40077398   0.41257539
   0.41257544   0.60496214   0.60496226   0.62565873   0.65347007
   0.67284984   0.68202505   0.68202526   0.72491565   0.72491565
   0.81291353   0.82333553   0.9652       0.96520005   1.04732722
   1.11969773   1.14628182   1.14628184   1.23622896   1.25935701
   1.25935711   1.29339116   1.29339117   1.30343452   1.36603452
   1.37030036   1.37030045   1.4498149    1.502876     1.5028761
   1.59158302   1.59158303   1.60847383   1.60847393   1.77091857
   1.77091882   1.78450549   1.8503914    2.4558785    2.45587902
   2.58525225   2.62191679   2.6219169    2.67394613   2.70570568
   2.87036535   2.87036544   2.91205078   3.07229377   3.0722939
   3.09105491   3.09694111   3.18320063   3.19691588   3.19691625
   3.24296712   3.24296724   3.30830262   3.37949057   3.37949061
   3.40986824   3.40986824   3.45036507   3.45036559   3.5749122
   3.57491234   3.61969821   3.65342138   3.75861015   3.75861037
   3.78813126   3.7917548    3.79175484   3.89115803   3.89115817
   3.8989843    4.05694663   4.05694681   4.10991623   4.10991627
   4.12674101   4.14590513   4.23302051   4.23302059   4.31994194
   4.33354166   4.33354179   4.39629701   4.41783011   4.44366397
   4.44366419   4.46269403   4.60071998   4.63486364   4.63486367
   4.68082734   4.70213961   4.70213994   4.89448868   5.17705193
   5.17912268   5.17912314   5.19792385   5.19792448   5.2254784
   5.24306382   5.34484482   5.34484623   5.68340637   5.71357854
   5.71357878   5.71392883   5.72804318   5.72804334   5.73873348
   5.8241027    5.82410318   5.84482064   6.28381316   6.28381329
   6.31738647   6.31738674  13.98780765  14.06957601]
multiplicity <S^2> = 0.00065895321  2S+1 = 1.001317
E1 = -189.41422218001088  Ecoul = 67.70234882813111
cycle= 2 E= -79.258810660653  delta_E= -0.0144  |g|= 0.0385  |ddm|= 0.0954
    CPU time for cycle= 2      5.99 sec, wall time      1.36 sec
  alpha nocc = 9  HOMO = -0.491770842819389  LUMO = 0.140210682209177
  beta  nocc = 9  HOMO = -0.491547164642237  LUMO = 0.140365685360284
  alpha mo_energy =
[-11.22248443 -11.22187974  -1.02840343  -0.85030661  -0.60373383
  -0.60373365  -0.51623117  -0.49177104  -0.49177084   0.14021068
   0.18153619   0.2081554    0.2081554    0.23608333   0.23608336
   0.34007441   0.38251096   0.40044788   0.40044789   0.41206025
   0.4120603    0.60129352   0.60129364   0.62449789   0.64549858
   0.67285088   0.67809103   0.67809123   0.72406329   0.72406329
   0.81239884   0.82275131   0.96493766   0.9649377    1.04940371
   1.12230492   1.14318692   1.14318693   1.23294238   1.25380318
   1.2538033    1.2911692    1.29116922   1.30310593   1.35909458
   1.37121557   1.37121565   1.45065591   1.49850476   1.49850486
   1.58758006   1.58758007   1.60534612   1.60534622   1.76930094
   1.76930119   1.78405021   1.84944953   2.45695064   2.45695117
   2.56753983   2.62214115   2.62214126   2.67181216   2.70473868
   2.85807519   2.85807528   2.89724315   3.06480047   3.06480061
   3.08457681   3.08666035   3.17864661   3.18436578   3.18436614
   3.23941572   3.23941585   3.30118743   3.3726478    3.37264783
   3.4015032    3.4015032    3.44133842   3.44133893   3.57182547
   3.5718256    3.62684183   3.66018356   3.75887912   3.75887933
   3.7887955    3.79175466   3.79175469   3.89259496   3.8925951
   3.89704009   4.06242512   4.0624253    4.11286348   4.11286351
   4.13488717   4.14059734   4.23505497   4.23505505   4.32537481
   4.34169403   4.34169414   4.40366081   4.41430731   4.44470467
   4.44470488   4.47029287   4.60313594   4.64109856   4.64109859
   4.67881171   4.69992524   4.69992556   4.89822923   5.17304945
   5.17957172   5.17957217   5.19701964   5.19702027   5.22320692
   5.23979422   5.34289662   5.34289801   5.68095699   5.70925892
   5.71647269   5.71647294   5.72861981   5.72861999   5.73804409
   5.82120519   5.82120565   5.83648205   6.28153574   6.28153588
   6.31559117   6.31559144  13.97086736  14.0505911 ]
  beta  mo_energy =
[-11.22130936 -11.22070702  -1.02596494  -0.84776602  -0.60255271
  -0.60255253  -0.51526855  -0.49154737  -0.49154716   0.14036569
   0.1815446    0.20833021   0.20833021   0.23630964   0.23630967
   0.34008566   0.38212372   0.40026834   0.40026835   0.4111296
   0.41112965   0.60145358   0.6014537    0.6249969    0.64677018
   0.67326451   0.67889093   0.67889113   0.7239987    0.72399871
   0.81136475   0.82200081   0.96436012   0.96436016   1.04855179
   1.12143859   1.14325607   1.14325608   1.23331349   1.254438
   1.25443811   1.29120157   1.29120158   1.30257977   1.35939905
   1.3706785    1.37067859   1.4504237    1.49877789   1.49877799
   1.58806944   1.58806944   1.60554851   1.60554862   1.76956145
   1.76956171   1.7844112    1.84982153   2.45653803   2.45653856
   2.56801448   2.62174203   2.62174214   2.67177283   2.70481434
   2.85873556   2.85873565   2.89832491   3.0655827    3.06558284
   3.08509647   3.08718809   3.1790737    3.18524171   3.18524206
   3.24002947   3.2400296    3.30212872   3.37350165   3.37350167
   3.40202099   3.40202099   3.44231197   3.44231248   3.57204478
   3.57204492   3.6263289    3.6597162    3.75863992   3.75864013
   3.7884782    3.7916767    3.79167673   3.89238327   3.89238341
   3.89683061   4.06179345   4.06179363   4.1123958    4.11239583
   4.13421154   4.14070026   4.2349024    4.23490248   4.32493828
   4.34098427   4.34098437   4.40308718   4.41457268   4.44455421
   4.44455442   4.46971776   4.60292857   4.64056227   4.6405623
   4.6788114    4.69994251   4.69994283   4.89816911   5.17303355
   5.17943875   5.17943921   5.1970332    5.19703383   5.22317562
   5.24004361   5.3430336    5.34303499   5.68098729   5.70934073
   5.71653535   5.7165356    5.72876281   5.72876298   5.73809534
   5.82132975   5.8213302    5.83693851   6.28181251   6.28181264
   6.31588086   6.31588113  13.97144597  14.05119039]
multiplicity <S^2> = 0.00026270626  2S+1 = 1.0005253
E1 = -189.56393007534786  Ecoul = 67.85095907636727
cycle= 3 E= -79.2599083077538  delta_E= -0.0011  |g|= 0.0127  |ddm|= 0.0328
    CPU time for cycle= 3      4.96 sec, wall time      0.93 sec
  alpha nocc = 9  HOMO = -0.487487921748412  LUMO = 0.141586327422645
  beta  nocc = 9  HOMO = -0.487342302126872  LUMO = 0.141690806730028
  alpha mo_energy =
[-11.20699809 -11.2063883   -1.0201482   -0.84451872  -0.59838746
  -0.59838728  -0.5091698   -0.48748812  -0.48748792   0.14158633
   0.1825839    0.20955255   0.20955255   0.23758807   0.23758809
   0.34218793   0.38399769   0.40180616   0.40180617   0.41428213
   0.41428218   0.60513484   0.60513497   0.6275853    0.65224843
   0.67569763   0.68231429   0.68231449   0.7272383    0.7272383
   0.81497592   0.82482817   0.9674788    0.96747884   1.05121659
   1.12398134   1.14640259   1.14640261   1.23604449   1.25752761
   1.25752772   1.29424408   1.29424409   1.30558548   1.36362607
   1.37327095   1.37327103   1.45252014   1.50210569   1.50210579
   1.59119406   1.59119406   1.60852168   1.60852178   1.77214651
   1.77214676   1.7879026    1.85346209   2.46090138   2.46090191
   2.57692658   2.62636462   2.62636473   2.67648621   2.70896008
   2.86571534   2.86571544   2.90602014   3.07095015   3.07095028
   3.09054575   3.09390249   3.18422907   3.19211222   3.19211258
   3.24464835   3.24464848   3.30670178   3.37886198   3.37886201
   3.40829895   3.40829896   3.44837311   3.44837362   3.57681605
   3.57681618   3.62921323   3.66258029   3.76313116   3.76313137
   3.79307628   3.79598406   3.79598409   3.89622339   3.89622353
   3.90193358   4.06577677   4.06577694   4.1169672    4.11696723
   4.13721529   4.14700663   4.23831655   4.23831664   4.32816055
   4.34429189   4.34429199   4.40584317   4.4205212    4.44853541
   4.44853562   4.47236286   4.60656714   4.64368878   4.64368881
   4.68409797   4.70503883   4.70503915   4.90223302   5.17867492
   5.18406767   5.18406813   5.20189566   5.2018963    5.22862569
   5.2456983    5.34776472   5.34776612   5.68687288   5.71509706
   5.72034918   5.72034942   5.73333828   5.73333846   5.74337921
   5.82694729   5.82694775   5.84440352   6.28796564   6.28796577
   6.32162904   6.32162931  13.98065984  14.06128527]
  beta  mo_energy =
[-11.20615685 -11.20554886  -1.01841243  -0.84274223  -0.59753225
  -0.59753207  -0.50849458  -0.4873425   -0.4873423    0.14169081
   0.18258612   0.20969401   0.20969401   0.23776334   0.23776336
   0.34217474   0.38371742   0.40167796   0.40167798   0.41360432
   0.41360437   0.60527014   0.60527026   0.62792293   0.65318687
   0.67597595   0.68292309   0.6829233    0.72718636   0.72718637
   0.81422016   0.82427817   0.96705326   0.9670533    1.05059235
   1.12334661   1.14645852   1.14645854   1.23630863   1.25799103
   1.25799113   1.29427412   1.29427413   1.30519218   1.36386296
   1.37287892   1.372879     1.45234623   1.50231932   1.50231942
   1.5915589    1.5915589    1.60868408   1.60868418   1.7723345
   1.77233475   1.78815228   1.85372563   2.46059833   2.46059886
   2.57727796   2.62607151   2.62607162   2.67645837   2.70901506
   2.86620741   2.8662075    2.90681178   3.07152514   3.07152528
   3.09093009   3.09429074   3.18454548   3.19275953   3.19275989
   3.24508802   3.24508815   3.30737875   3.37948173   3.37948176
   3.40868232   3.40868232   3.44908731   3.44908782   3.57698055
   3.57698068   3.62883573   3.66223612   3.7629604    3.76296061
   3.7928452    3.79593336   3.79593339   3.89607044   3.89607057
   3.90178096   4.06531632   4.0653165    4.116626     4.11662603
   4.13671969   4.14706906   4.2382039    4.23820398   4.32784221
   4.34377408   4.34377419   4.40542318   4.42070603   4.44842441
   4.44842462   4.47194171   4.60641514   4.64329752   4.64329755
   4.68409829   4.70505321   4.70505353   4.90218436   5.17866661
   5.18397276   5.18397321   5.20190809   5.20190872   5.22860531
   5.24588106   5.34786261   5.34786401   5.68689357   5.71516057
   5.72039397   5.72039422   5.73344249   5.73344266   5.74341793
   5.82704118   5.82704164   5.8447404    6.2881724    6.28817254
   6.32184244   6.32184271  13.98106973  14.06171144]
multiplicity <S^2> = 0.0001417545  2S+1 = 1.0002835
E1 = -189.49746768763094  Ecoul = 67.78439724692214
cycle= 4 E= -79.260007749482  delta_E= -9.94e-05  |g|= 0.00349  |ddm|= 0.00815
    CPU time for cycle= 4      5.57 sec, wall time      1.02 sec
  alpha nocc = 9  HOMO = -0.488081338019453  LUMO = 0.141568043316847
  beta  nocc = 9  HOMO = -0.48798646185688  LUMO = 0.141617076381415
  alpha mo_energy =
[-11.20879677 -11.20818642  -1.02026136  -0.84455022  -0.59870841
  -0.59870823  -0.510092    -0.48808154  -0.48808134   0.14156804
   0.18254228   0.20955156   0.20955156   0.23759758   0.2375976
   0.34198569   0.38359362   0.40162856   0.40162857   0.41396459
   0.41396464   0.6048903    0.60489042   0.62734207   0.65176175
   0.67540444   0.68210827   0.68210847   0.72699685   0.72699685
   0.81457678   0.82453107   0.96718573   0.96718577   1.05095721
   1.12373282   1.14617949   1.14617951   1.23562467   1.25728434
   1.25728445   1.29397186   1.29397188   1.3052972    1.36301061
   1.37301817   1.37301825   1.45229256   1.50189972   1.50189982
   1.59098532   1.59098532   1.60831609   1.6083162    1.77190607
   1.77190633   1.78754172   1.85302374   2.46051757   2.4605181
   2.57625613   2.62596236   2.62596247   2.67604474   2.70850986
   2.86512133   2.86512142   2.90527893   3.07035935   3.07035949
   3.0900477    3.09317774   3.18374467   3.19159807   3.19159843
   3.24408573   3.24408586   3.30601889   3.37827428   3.37827431
   3.40778482   3.40778482   3.44782926   3.44782977   3.57637228
   3.57637241   3.62893077   3.66229954   3.76284654   3.76284675
   3.79277953   3.79566598   3.79566601   3.89594864   3.89594877
   3.90157915   4.06561576   4.06561594   4.11675129   4.11675131
   4.13700118   4.14648169   4.23801631   4.23801639   4.32786988
   4.34416564   4.34416574   4.40578847   4.4199336    4.44824285
   4.44824305   4.47232098   4.60631817   4.64356677   4.6435668
   4.68367448   4.70470318   4.7047035    4.90185302   5.17831571
   5.18376561   5.18376606   5.20158259   5.20158322   5.22819011
   5.24524027   5.34724819   5.34724959   5.68646744   5.71468101
   5.71997214   5.71997239   5.73289787   5.73289805   5.7429869
   5.82653587   5.82653633   5.84378481   6.28738911   6.28738925
   6.32101378   6.32101405  13.9795221   14.06013631]
  beta  mo_energy =
[-11.20834075 -11.20773144  -1.01926827  -0.84355688  -0.59819774
  -0.59819756  -0.50972146  -0.48798666  -0.48798646   0.14161708
   0.18253959   0.20963365   0.20963365   0.23769978   0.2376998
   0.34197419   0.3834317    0.40155771   0.40155772   0.41357387
   0.41357392   0.60497602   0.60497614   0.62752461   0.65230982
   0.67555064   0.68246748   0.68246768   0.72696876   0.72696877
   0.81413848   0.82421548   0.96694048   0.96694052   1.05059544
   1.12336498   1.1462142    1.14621422   1.23577737   1.25755516
   1.25755527   1.29399171   1.29399172   1.30506784   1.36314583
   1.37279086   1.37279094   1.45218987   1.50202524   1.50202533
   1.59119982   1.59119982   1.60841148   1.60841158   1.77201473
   1.77201498   1.78768072   1.85317039   2.46034436   2.46034489
   2.5764631    2.62579528   2.62579539   2.67603169   2.70854278
   2.86540768   2.86540778   2.9057362    3.07069286   3.070693
   3.09027738   3.09340219   3.18393469   3.19197703   3.19197739
   3.24433748   3.24433761   3.3064067    3.3786324    3.37863242
   3.40800974   3.40800974   3.44824491   3.44824542   3.57646821
   3.57646834   3.62871109   3.66209914   3.76274946   3.76274967
   3.792648     3.79563875   3.79563878   3.89585986   3.89586
   3.90149233   4.06535079   4.06535097   4.11655503   4.11655505
   4.13671327   4.14651478   4.23795082   4.23795091   4.32768444
   4.34386636   4.34386647   4.40554545   4.42003666   4.4481775
   4.44817771   4.47207724   4.60622879   4.64334039   4.64334042
   4.68367296   4.70471209   4.70471241   4.90182187   5.17831399
   5.1837122    5.18371266   5.2015908    5.20159143   5.22817893
   5.24534516   5.34730269   5.34730408   5.68647937   5.71472093
   5.71999724   5.71999748   5.73295765   5.73295782   5.74301021
   5.82659165   5.82659211   5.84397946   6.28750979   6.28750993
   6.3211366    6.32113687  13.97974628  14.06037042]
multiplicity <S^2> = 4.7893575e-05  2S+1 = 1.0000958
E1 = -189.50150381604743  Ecoul = 67.78841444266268
cycle= 5 E= -79.260026682158  delta_E= -1.89e-05  |g|= 0.00177  |ddm|= 0.00493
    CPU time for cycle= 5      5.56 sec, wall time      1.10 sec
  alpha nocc = 9  HOMO = -0.487996453891928  LUMO = 0.141582527192174
  beta  nocc = 9  HOMO = -0.487955635127966  LUMO = 0.141597033485628
  alpha mo_energy =
[-11.20835465 -11.20774384  -1.01996467  -0.84417994  -0.59850347
  -0.59850328  -0.51000984  -0.48799666  -0.48799645   0.14158253
   0.1825646    0.20958849   0.20958849   0.23763754   0.23763756
   0.34204142   0.38354171   0.40161324   0.40161325   0.41383741
   0.41383746   0.60493371   0.60493383   0.62743174   0.65194731
   0.67551153   0.68226809   0.68226829   0.72703298   0.72703299
   0.81443404   0.82440757   0.96711835   0.96711839   1.05084268
   1.1236257    1.14619102   1.14619103   1.2357439    1.2573817
   1.25738181   1.29400159   1.29400161   1.3052424    1.36311295
   1.37297062   1.37297071   1.45229769   1.50194833   1.50194843
   1.59106282   1.59106283   1.60836845   1.60836856   1.77197736
   1.77197761   1.7876837    1.85318604   2.46051607   2.4605166
   2.57628003   2.6259554    2.62595551   2.67607268   2.70858669
   2.86525619   2.86525628   2.90550499   3.07055349   3.07055362
   3.09012121   3.09334006   3.18382092   3.19171802   3.19171838
   3.24426663   3.24426675   3.30625646   3.37847483   3.37847485
   3.40788437   3.40788437   3.44802968   3.44803018   3.57646935
   3.57646949   3.62895447   3.66232729   3.76285618   3.76285639
   3.79276871   3.7957002    3.79570023   3.89597376   3.89597389
   3.90158015   4.0655754    4.06557557   4.11673598   4.11673601
   4.13700346   4.14659088   4.23805165   4.23805173   4.32790095
   4.34414123   4.34414133   4.40577201   4.42010242   4.44828386
   4.44828407   4.47230521   4.60636521   4.64355475   4.64355478
   4.68375159   4.7047503    4.70475062   4.90197106   5.17830089
   5.18380172   5.18380218   5.20164247   5.2016431    5.22825512
   5.24535359   5.34737243   5.34737383   5.68653549   5.7146863
   5.72009561   5.72009585   5.73302328   5.73302345   5.74306365
   5.82660592   5.82660638   5.84392707   6.2875314    6.28753154
   6.32117988   6.32118015  13.97977695  14.06037613]
  beta  mo_energy =
[-11.20818505 -11.20757462  -1.01958322  -0.84380945  -0.59830022
  -0.59830003  -0.50988378  -0.48795584  -0.48795564   0.14159703
   0.18256246   0.20962019   0.20962019   0.23767712   0.23767714
   0.34203537   0.38348051   0.40158815   0.40158817   0.41368836
   0.41368841   0.60496822   0.60496834   0.62749447   0.65215567
   0.67555865   0.68240692   0.68240713   0.7270231    0.7270231
   0.81426488   0.82428802   0.96702532   0.96702536   1.05070542
   1.12348602   1.14620548   1.14620549   1.23580078   1.25748559
   1.2574857    1.2940097    1.29400971   1.30515384   1.3631624
   1.37288404   1.37288412   1.45225753   1.50199709   1.50199719
   1.59114603   1.59114603   1.60840545   1.60840555   1.77201859
   1.77201884   1.78773211   1.85323705   2.46044996   2.46045049
   2.57635955   2.62589209   2.6258922    2.6760686    2.70859906
   2.86536544   2.86536554   2.90567737   3.07068025   3.07068038
   3.09021193   3.09342382   3.18389635   3.19186428   3.19186464
   3.24436051   3.24436064   3.30640186   3.37861021   3.37861024
   3.40797098   3.40797099   3.44818861   3.44818912   3.57650603
   3.57650616   3.62886989   3.66225009   3.76281982   3.76282003
   3.79271931   3.79569072   3.79569075   3.89593976   3.89593989
   3.90154746   4.06547505   4.06547522   4.11666159   4.11666162
   4.13689285   4.14660107   4.2380265    4.23802659   4.32782947
   4.34402715   4.34402725   4.40567943   4.42013876   4.44825829
   4.4482585    4.47221232   4.60633076   4.64346838   4.64346842
   4.68374999   4.70475386   4.70475418   4.90195733   5.17830167
   5.18378188   5.18378234   5.20164579   5.20164642   5.22825067
   5.24539316   5.3473919    5.34739329   5.68653961   5.71470297
   5.72010447   5.72010471   5.7330455    5.73304567   5.74307268
   5.82662761   5.82662807   5.84400088   6.28757742   6.28757755
   6.32122579   6.32122606  13.97985973  14.06046319]
multiplicity <S^2> = 6.9931087e-06  2S+1 = 1.000014
E1 = -189.50069707243728  Ecoul = 67.7876008271507
cycle= 6 E= -79.2600335540598  delta_E= -6.87e-06  |g|= 0.000691  |ddm|= 0.00359
    CPU time for cycle= 6      5.12 sec, wall time      0.97 sec
  alpha nocc = 9  HOMO = -0.487997739249824  LUMO = 0.141577667935363
  beta  nocc = 9  HOMO = -0.487992943546928  LUMO = 0.141576724513281
  alpha mo_energy =
[-11.20839945 -11.20778917  -1.01982903  -0.84407737  -0.59843513
  -0.59843495  -0.50993807  -0.48799794  -0.48799774   0.14157767
   0.18253937   0.20959164   0.20959164   0.23764713   0.23764715
   0.34200461   0.38350188   0.4015904    0.40159041   0.41376683
   0.41376688   0.60493609   0.60493621   0.62743094   0.65202002
   0.67549368   0.6823071    0.6823073    0.72700142   0.72700142
   0.81434854   0.8243524    0.96706127   0.96706131   1.05076767
   1.12354665   1.14618824   1.14618825   1.23573087   1.25741826
   1.25741837   1.29398524   1.29398526   1.30518484   1.36310102
   1.37290997   1.37291005   1.45225326   1.50195849   1.50195858
   1.5910865    1.5910865    1.60836799   1.6083681    1.77197071
   1.77197096   1.78765423   1.8531502    2.46045133   2.46045186
   2.57632002   2.62589423   2.62589434   2.67604302   2.70855165
   2.86527848   2.86527858   2.9055411    3.07056662   3.07056676
   3.09014815   3.09333026   3.18383489   3.19177154   3.1917719
   3.24425695   3.24425707   3.30626484   3.37848904   3.37848907
   3.4079003    3.4079003    3.4480641    3.44806461   3.57644615
   3.57644629   3.62886214   3.66223931   3.76281022   3.76281043
   3.7927194    3.7956642    3.79566423   3.89592256   3.8959227
   3.90153949   4.06549823   4.06549841   4.1166694    4.11666943
   4.13690009   4.14654646   4.23800244   4.23800252   4.32781677
   4.34404611   4.34404621   4.40569091   4.42005259   4.44823249
   4.4482327    4.47222348   4.60630609   4.64347567   4.6434757
   4.68370705   4.704721     4.70472132   4.90189931   5.17829222
   5.18375829   5.18375875   5.20160808   5.20160871   5.22821222
   5.24532596   5.34732516   5.34732656   5.68649984   5.71468232
   5.72004091   5.72004116   5.7329786    5.73297877   5.74302778
   5.82658196   5.82658242   5.8439162    6.28749897   6.2874991
   6.32113804   6.32113831  13.9797345   14.06034289]
  beta  mo_energy =
[-11.20838523 -11.20777496  -1.01979572  -0.84405275  -0.59841505
  -0.59841487  -0.5099375   -0.48799315  -0.48799294   0.14157672
   0.18253938   0.209595     0.209595     0.2376509    0.23765093
   0.34200313   0.38349727   0.40158928   0.40158929   0.41375423
   0.41375427   0.60494066   0.60494078   0.62743271   0.65203776
   0.67549319   0.68231997   0.68232017   0.72700051   0.72700051
   0.81433367   0.82434309   0.96705386   0.9670539    1.05075681
   1.12353553   1.14619004   1.14619005   1.2357345    1.25742686
   1.25742697   1.29398618   1.29398619   1.30517705   1.36310396
   1.3729029    1.37290299   1.45224936   1.50196325   1.50196335
   1.59109405   1.59109405   1.60837154   1.60837164   1.77197381
   1.77197406   1.78765613   1.85315197   2.46044559   2.46044611
   2.57632706   2.62588905   2.62588916   2.67604311   2.70855236
   2.86528751   2.86528761   2.90555421   3.07057661   3.07057674
   3.09015721   3.09333595   3.18384258   3.19178479   3.19178515
   3.24426321   3.24426334   3.30627522   3.37849943   3.37849946
   3.40790785   3.40790785   3.4480775    3.44807801   3.57644917
   3.5764493    3.62885453   3.66223233   3.76280756   3.76280777
   3.79271578   3.79566391   3.79566394   3.89591962   3.89591976
   3.90153711   4.06549031   4.06549048   4.11666356   4.11666359
   4.13689044   4.14654589   4.23800017   4.23800025   4.32781036
   4.34403668   4.34403678   4.40568332   4.42005392   4.44823001
   4.44823022   4.47221584   4.60630308   4.64346853   4.64346856
   4.68370629   4.70472137   4.70472169   4.90189713   5.17829308
   5.18375692   5.18375738   5.20160846   5.20160909   5.2282117
   5.24532915   5.34732596   5.34732736   5.68649992   5.71468455
   5.72004114   5.72004138   5.73298003   5.7329802    5.74302861
   5.82658398   5.82658444   5.84392221   6.28750274   6.28750288
   6.32114123   6.3211415   13.97974108  14.0603502 ]
multiplicity <S^2> = 4.8814707e-08  2S+1 = 1.0000001
E1 = -189.50100297850668  Ecoul = 67.78790553785342
cycle= 7 E= -79.2600347494265  delta_E= -1.2e-06  |g|= 0.000104  |ddm|= 0.00199
    CPU time for cycle= 7      4.77 sec, wall time      0.99 sec
  alpha nocc = 9  HOMO = -0.487981156626679  LUMO = 0.141582347182661
  beta  nocc = 9  HOMO = -0.487980806796818  LUMO = 0.141581727579739
  alpha mo_energy =
[-11.20834957 -11.20773934  -1.01978951  -0.84403731  -0.59841452
  -0.59841433  -0.5099024   -0.48798136  -0.48798116   0.14158235
   0.18254435   0.20959382   0.20959382   0.23764884   0.23764886
   0.34201128   0.38351597   0.40159616   0.40159617   0.41376509
   0.41376514   0.60494282   0.60494294   0.62744608   0.65204904
   0.6755083    0.68231832   0.68231852   0.72700633   0.72700633
   0.81435065   0.82435557   0.96706483   0.96706487   1.05076903
   1.12354698   1.14619562   1.14619563   1.23574859   1.25743075
   1.25743086   1.29399444   1.29399445   1.30518845   1.36312318
   1.37291329   1.37291338   1.4522593    1.50196655   1.50196664
   1.59109808   1.59109808   1.60837554   1.60837565   1.7719815
   1.77198175   1.78766715   1.85316591   2.46045762   2.46045815
   2.57634129   2.62590146   2.62590157   2.67605624   2.70856627
   2.86529863   2.86529873   2.90556901   3.07058959   3.07058972
   3.09016856   3.0933539    3.18385379   3.19179338   3.19179374
   3.24427922   3.24427934   3.30629541   3.37851396   3.37851399
   3.40791836   3.40791837   3.44808646   3.44808697   3.57646059
   3.57646073   3.62886633   3.66224397   3.76281442   3.76281463
   3.79272373   3.79567229   3.79567233   3.89592827   3.89592841
   3.90154632   4.06549433   4.0654945    4.11666817   4.1166682
   4.13689901   4.14655728   4.23801089   4.23801097   4.32782111
   4.34404091   4.34404101   4.40568571   4.42006838   4.4482392
   4.44823941   4.47221798   4.60631007   4.64347326   4.64347329
   4.68371677   4.70472871   4.70472902   4.90190795   5.17830164
   5.18376355   5.183764     5.20161464   5.20161527   5.22822213
   5.245339     5.34734066   5.34734205   5.68650772   5.71469445
   5.72005104   5.72005129   5.7329908    5.73299098   5.74303642
   5.82659221   5.82659267   5.84393363   6.28751452   6.28751466
   6.32115577   6.32115604  13.97976571  14.06037344]
  beta  mo_energy =
[-11.2083488  -11.20773858  -1.0197876   -0.84403847  -0.598413
  -0.59841281  -0.50990512  -0.48798101  -0.48798081   0.14158173
   0.18254457   0.20959434   0.20959434   0.2376492    0.23764923
   0.3420109    0.38351601   0.40159636   0.40159637   0.41376435
   0.41376439   0.60494364   0.60494376   0.62744523   0.65205021
   0.67550713   0.68231933   0.68231953   0.7270061    0.7270061
   0.81434985   0.82435534   0.96706455   0.96706459   1.05076869
   1.12354661   1.14619584   1.14619585   1.23574839   1.25743106
   1.25743117   1.29399452   1.29399454   1.30518805   1.36312308
   1.37291299   1.37291307   1.45225896   1.50196703   1.50196713
   1.59109856   1.59109856   1.60837589   1.60837599   1.77198149
   1.77198174   1.78766673   1.85316536   2.46045721   2.46045773
   2.57634187   2.62590118   2.62590129   2.67605633   2.70856615
   2.86529907   2.86529916   2.90556939   3.07058986   3.07058999
   3.09016932   3.09335384   3.18385446   3.19179434   3.1917947
   3.244279     3.24427912   3.30629533   3.37851418   3.37851421
   3.40791881   3.40791881   3.44808715   3.44808766   3.5764607
   3.57646083   3.62886575   3.66224343   3.76281439   3.7628146
   3.7927237    3.79567242   3.79567245   3.89592809   3.89592823
   3.90154633   4.06549406   4.06549423   4.116668     4.11666803
   4.13689841   4.14655688   4.2380107    4.23801078   4.32782066
   4.34404048   4.34404058   4.4056854    4.42006798   4.44823898
   4.44823918   4.47221766   4.60630989   4.64347294   4.64347297
   4.68371656   4.70472874   4.70472906   4.90190754   5.17830187
   5.18376356   5.18376401   5.2016147    5.20161533   5.22822205
   5.24533915   5.34734044   5.34734183   5.68650765   5.71469477
   5.72005088   5.72005112   5.73299073   5.7329909    5.74303648
   5.82659237   5.82659283   5.84393393   6.28751468   6.28751481
   6.32115573   6.32115599  13.97976603  14.06037391]
multiplicity <S^2> = 1.9211299e-10  2S+1 = 1
E1 = -189.50098863401237  Ecoul = 67.78789117507628
cycle= 8 E= -79.2600347677093  delta_E= -1.83e-08  |g|= 1.13e-05  |ddm|= 0.000293
    CPU time for cycle= 8      4.21 sec, wall time      1.29 sec
  alpha nocc = 9  HOMO = -0.487981267562803  LUMO = 0.141583144782287
  beta  nocc = 9  HOMO = -0.487981172300464  LUMO = 0.141582929589974
  alpha mo_energy =
[-11.20834781 -11.20773759  -1.01978676  -0.84403596  -0.5984146
  -0.59841442  -0.50990167  -0.48798147  -0.48798127   0.14158314
   0.18254554   0.20959435   0.20959436   0.23764915   0.23764918
   0.34201172   0.38351694   0.40159679   0.4015968    0.41376542
   0.41376546   0.60494346   0.60494358   0.62744735   0.65205121
   0.67550946   0.68231888   0.68231908   0.7270068    0.72700681
   0.81435137   0.82435641   0.96706552   0.96706556   1.0507697
   1.12354758   1.1461964    1.14619641   1.23574958   1.2574316
   1.25743171   1.29399528   1.29399529   1.30518918   1.36312463
   1.37291403   1.37291411   1.45225998   1.50196736   1.50196745
   1.59109902   1.59109902   1.6083763    1.6083764    1.77198224
   1.7719825    1.78766819   1.85316694   2.46045827   2.4604588
   2.57634299   2.62590221   2.62590232   2.67605738   2.7085672
   2.86529981   2.86529991   2.90557036   3.07059048   3.07059061
   3.09017006   3.09335513   3.18385517   3.19179505   3.19179541
   3.24427996   3.24428009   3.30629642   3.37851507   3.3785151
   3.40791956   3.40791957   3.44808768   3.44808819   3.5764615
   3.57646163   3.62886683   3.66224449   3.7628151    3.76281531
   3.79272455   3.79567319   3.79567322   3.89592893   3.89592906
   3.90154732   4.06549469   4.06549487   4.11666869   4.11666872
   4.13689937   4.14655777   4.23801167   4.23801175   4.32782173
   4.34404116   4.34404126   4.40568597   4.4200689    4.44823993
   4.44824014   4.47221823   4.60631054   4.64347375   4.64347378
   4.68371736   4.70472949   4.70472981   4.90190841   5.17830283
   5.18376423   5.18376469   5.20161539   5.20161602   5.22822292
   5.24533993   5.34734139   5.34734279   5.68650833   5.71469576
   5.72005143   5.72005167   5.73299129   5.73299147   5.74303709
   5.82659312   5.82659359   5.84393475   6.28751526   6.28751539
   6.32115636   6.32115663  13.97976702  14.0603749 ]
  beta  mo_energy =
[-11.20834779 -11.20773757  -1.01978645  -0.8440367   -0.59841427
  -0.59841409  -0.50990258  -0.48798137  -0.48798117   0.14158293
   0.18254561   0.2095945    0.2095945    0.23764923   0.23764926
   0.34201158   0.38351705   0.40159689   0.4015969    0.41376531
   0.41376535   0.60494368   0.6049438    0.62744698   0.65205138
   0.67550898   0.68231906   0.68231926   0.72700673   0.72700674
   0.81435127   0.82435644   0.96706551   0.96706555   1.05076973
   1.1235476    1.14619645   1.14619647   1.23574946   1.25743159
   1.2574317    1.29399529   1.29399531   1.30518914   1.36312456
   1.37291401   1.3729141    1.45225991   1.50196747   1.50196757
   1.59109909   1.59109909   1.60837638   1.60837648   1.7719822
   1.77198245   1.78766795   1.85316666   2.46045818   2.46045871
   2.57634313   2.62590216   2.62590227   2.6760574    2.70856714
   2.86529986   2.86529995   2.90557035   3.07059044   3.07059057
   3.09017022   3.09335504   3.18385531   3.19179522   3.19179558
   3.24427979   3.24427991   3.30629623   3.37851501   3.37851504
   3.40791963   3.40791964   3.44808775   3.44808826   3.57646149
   3.57646163   3.62886672   3.66224438   3.76281513   3.76281534
   3.79272458   3.79567324   3.79567327   3.8959289    3.89592903
   3.90154735   4.0654947    4.06549487   4.11666871   4.11666873
   4.13689928   4.14655763   4.23801163   4.23801171   4.32782164
   4.34404112   4.34404123   4.40568596   4.42006873   4.44823988
   4.44824009   4.47221822   4.60631051   4.64347372   4.64347376
   4.6837173    4.7047295    4.70472982   4.90190827   5.17830289
   5.18376425   5.18376471   5.20161541   5.20161604   5.2282229
   5.24533994   5.3473413    5.34734269   5.6865083    5.71469584
   5.72005136   5.72005161   5.73299124   5.73299141   5.74303709
   5.82659315   5.82659361   5.84393478   6.28751526   6.28751539
   6.32115629   6.32115656  13.979767    14.06037493]
multiplicity <S^2> = 1.3603341e-11  2S+1 = 1
E1 = -189.50099784135932  Ecoul = 67.78790038225937
cycle= 9 E= -79.2600347678732  delta_E= -1.64e-10  |g|= 1.8e-06  |ddm|= 3.07e-05
    CPU time for cycle= 9      3.70 sec, wall time      0.94 sec
  alpha nocc = 9  HOMO = -0.48798103237804  LUMO = 0.141583155941519
  beta  nocc = 9  HOMO = -0.487980992862871  LUMO = 0.141583045606767
  alpha mo_energy =
[-11.20834729 -11.20773707  -1.01978623  -0.84403574  -0.59841423
  -0.59841405  -0.50990152  -0.48798123  -0.48798103   0.14158316
   0.18254558   0.20959444   0.20959444   0.23764922   0.23764925
   0.34201173   0.38351702   0.40159686   0.40159688   0.41376546
   0.41376551   0.60494366   0.60494378   0.62744737   0.65205141
   0.67550941   0.68231906   0.68231926   0.72700692   0.72700693
   0.81435144   0.8243565    0.96706563   0.96706567   1.05076979
   1.12354765   1.14619655   1.14619656   1.23574964   1.25743174
   1.25743185   1.2939954    1.29399541   1.30518926   1.36312475
   1.37291411   1.37291419   1.45226002   1.50196754   1.50196764
   1.59109918   1.59109918   1.60837644   1.60837655   1.77198233
   1.77198258   1.78766821   1.85316696   2.46045839   2.46045891
   2.57634347   2.62590236   2.62590247   2.67605756   2.70856732
   2.86530015   2.86530024   2.90557071   3.07059066   3.0705908
   3.09017035   3.09335538   3.18385543   3.19179545   3.19179581
   3.24428007   3.24428019   3.30629651   3.37851527   3.3785153
   3.40791987   3.40791988   3.44808797   3.44808848   3.57646167
   3.57646181   3.62886684   3.6622445    3.76281527   3.76281548
   3.79272473   3.79567336   3.79567339   3.89592904   3.89592918
   3.90154753   4.06549482   4.06549499   4.11666886   4.11666889
   4.1368994    4.14655797   4.23801175   4.23801184   4.32782178
   4.34404122   4.34404133   4.40568602   4.42006905   4.44824006
   4.44824026   4.47221828   4.60631064   4.64347383   4.64347386
   4.68371754   4.7047297    4.70473002   4.90190847   5.17830311
   5.1837644    5.18376486   5.20161559   5.20161622   5.22822312
   5.24534015   5.34734152   5.34734292   5.68650855   5.71469604
   5.72005149   5.72005174   5.73299141   5.73299158   5.74303728
   5.82659337   5.82659383   5.84393508   6.28751548   6.28751561
   6.32115652   6.32115679  13.97976733  14.06037528]
  beta  mo_energy =
[-11.20834728 -11.20773706  -1.01978608  -0.84403613  -0.59841407
  -0.59841389  -0.50990197  -0.48798119  -0.48798099   0.14158305
   0.18254562   0.20959452   0.20959452   0.23764927   0.23764929
   0.34201166   0.38351708   0.40159691   0.40159692   0.4137654
   0.41376545   0.60494377   0.6049439    0.62744718   0.6520515
   0.67550917   0.68231916   0.68231936   0.72700689   0.72700689
   0.81435138   0.82435651   0.96706563   0.96706567   1.0507698
   1.12354766   1.14619657   1.14619659   1.23574958   1.25743174
   1.25743185   1.2939954    1.29399542   1.30518924   1.36312472
   1.3729141    1.37291418   1.45225998   1.5019676    1.5019677
   1.59109922   1.59109922   1.60837648   1.60837659   1.7719823
   1.77198256   1.78766809   1.85316682   2.46045834   2.46045887
   2.57634354   2.62590233   2.62590244   2.67605757   2.70856729
   2.86530018   2.86530027   2.90557071   3.07059064   3.07059078
   3.09017043   3.09335534   3.1838555    3.19179554   3.1917959
   3.24427998   3.2442801    3.30629642   3.37851524   3.37851527
   3.40791991   3.40791991   3.448088     3.44808851   3.57646167
   3.5764618    3.62886679   3.66224445   3.76281529   3.7628155
   3.79272475   3.79567339   3.79567342   3.89592903   3.89592916
   3.90154755   4.06549482   4.06549499   4.11666887   4.1166689
   4.13689935   4.1465579    4.23801173   4.23801182   4.32782173
   4.3440412    4.34404131   4.40568601   4.42006896   4.44824003
   4.44824024   4.47221827   4.60631062   4.64347381   4.64347385
   4.6837175    4.70472971   4.70473003   4.9019084    5.17830314
   5.18376441   5.18376487   5.2016156    5.20161623   5.22822311
   5.24534015   5.34734147   5.34734287   5.68650854   5.71469609
   5.72005146   5.7200517    5.73299138   5.73299155   5.74303728
   5.82659338   5.82659384   5.8439351    6.28751548   6.28751561
   6.32115649   6.32115676  13.97976733  14.0603753 ]
multiplicity <S^2> = 3.504752e-12  2S+1 = 1
E1 = -189.50099418836362  Ecoul = 67.78789672926045
Extra cycle  E= -79.2600347678764  delta_E= -3.21e-12  |g|= 8.2e-07  |ddm|= 1.62e-06
    CPU time for scf_cycle     53.47 sec, wall time     12.96 sec
    CPU time for SCF     53.48 sec, wall time     12.96 sec
converged SCF energy = -79.2600347678764  <S^2> = 3.504752e-12  2S+1 = 1
    CPU time for UHF partial hessian    111.06 sec, wall time    114.73 sec
    CPU time for UHF hessian    291.18 sec, wall time    279.48 sec
E1 = -189.50099418836362  Ecoul = 67.78789672926045
E1 = -189.50099418836362  Ecoul = 67.78789672926045
