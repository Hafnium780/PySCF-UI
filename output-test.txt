#INFO: **** input file is /Users/jaydenl/Dev/ASDRP/QCHEM/PySCF-UI/stream.py ****
import streamlit as st
import streamlit.components.v1 as components
from pyscf import gto, scf
from streamlit.runtime.scriptrunner import add_script_run_ctx
import threading
import time
from stmol import *
import py3Dmol
from rdkit import Chem
from rdkit.Chem import rdDetermineBonds
from rdkit.Chem.rdmolfiles import MolFromXYZFile
from rdkit.Chem import Descriptors
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from collections import defaultdict
import altair as alt
import os

if 'queue' not in st.session_state:
    st.session_state['queue'] = []
if 'results' not in st.session_state:
    st.session_state['results'] = []
if 'computing' not in st.session_state:
    st.session_state['computing'] = False
    
# get all files in directory names precomputed_molecules:
precomputed_molecules = list(map(lambda x: x.split(".")[0], os.listdir("precomputed_molecules")))


def compute_pyscf(atom, basis_option, verbose_option):
    # print(atom)
    # print(basis_option)
    # print(verbose_option)
    mol = gto.Mole()
    mol.atom = atom
    mol.basis = basis_option
    mol.verbose = int(verbose_option[0])
    mol.output = 'output-test.txt'
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    outputFile = open("output-test.txt", "r")
    # Extract energy and time information
    time = None
    energy = None
    for line in outputFile.readlines():
        if line.startswith("    CPU time for SCF"):
            time = float(line.split(" ")[-2])

        elif line.startswith("converged SCF energy = "):
            energy = float(line.split(" ")[-1])
    return energy, time


def getMoleculeName(atom):
    d = {}
    for line in atom.split("\n"):
        try:
            name = line.split()[0]
            if name in d:
                d[name] += 1
            else:
                d[name] = 1
        except:
            pass
    name = ""
    for key in d:
        name += key + str(d[key])
    return name


# Streamlit layout
st.title("PySCF")

# Function to process the uploaded text file


def process_text_file(uploaded_file):
    if uploaded_file is not None:
        # Read the contents of the file
        text_contents = uploaded_file.getvalue().decode("utf-8")
        return text_contents
    else:
        return None
    
def addToQueue(atom):
    st.session_state['queue'].append(atom)

tabDatabase, tabTextInput, tabFileInput = st.tabs(["Database", "Text Input", "File Input"])
with tabDatabase:
    selectedMolecule = st.selectbox('Search Molecule Database', precomputed_molecules)
    if st.button('Add to Queue', use_container_width=True, key="db"):
        if selectedMolecule:
            parseDatafile = open("precomputed_molecules/" + selectedMolecule + ".geom.txt", "r").readlines()[4:]
            parseDatafile = "\n".join(parseDatafile[:-1])
            addToQueue(parseDatafile)
        else:
            st.warning(
                "Please select a molecule using dropdown menu or inputting a text file.")
    
with tabTextInput:
    # Create a Streamlit button which gives example
    with st.expander("See Example Input"):
        st.write("C 0.0000000 0.0000000 0.0000000")
        st.write("H 0.6311940 0.6311940 0.6311940")
        st.write("H -0.6311940 -0.6311940 0.6311940")
        st.write("H -0.6311940 0.6311940 -0.6311940")
        st.write("H 0.6311940 -0.6311940 -0.631194")
    # Fills xyz_input text area to the contents of the uploaded file
    xyz_input = st.text_area("XYZ Input", key="textxyz")
    
    if st.button('Add to Queue', use_container_width=True, key="text"):
        if xyz_input:
            addToQueue(xyz_input)
        else:
            st.warning(
                "Please provide an XYZ input using the text box or inputting a text file.")

with tabFileInput:
    # Create a Streamlit button which gives example
    with st.expander("See Example Input"):
        st.write("C 0.0000000 0.0000000 0.0000000")
        st.write("H 0.6311940 0.6311940 0.6311940")
        st.write("H -0.6311940 -0.6311940 0.6311940")
        st.write("H -0.6311940 0.6311940 -0.6311940")
        st.write("H 0.6311940 -0.6311940 -0.631194")
    # Display file uploader for a single text file and processes it
    uploaded_file = st.file_uploader("Upload a XYZ input", type=["txt"])
    text_contents = process_text_file(uploaded_file)
    xyz_input = st.text_area(
        "XYZ Input", value=text_contents, key="filexyz") if text_contents else None
    if st.button('Add to Queue', use_container_width=True, key="filequeue"):
        if text_contents:
            addToQueue(text_contents)
        else:
            st.warning(
                "Please provide an XYZ input using file uploader")


basis_option = st.selectbox("Basis", ["cc-pVTZ", "asdf"])
verbose_option = st.selectbox("Verbose", index=2, options=[
                              "3, energy only", "4, cycles and energy", "5, cycles energy and runtime", "9, max"])

col1, col2, col3, col4 = st.columns(4, gap="small")

# if col1.button("Add to Queue"):
#     if xyz_input:
#         addToQueue(xyz_input)
#     else:
#         st.warning(
#             "Please provide an XYZ input using the text box or inputting a text file.")

# Computes only if something is added to the queue; grayed out otherwise
compute_disabled = len(st.session_state['queue']) == 0
if st.button("Compute", disabled=compute_disabled, type="primary", use_container_width=True) or st.session_state['computing'] == True:
    if len(st.session_state['queue']) > 0:
        with st.spinner("Computing " + getMoleculeName(st.session_state['queue'][0]) + "..."):
            st.session_state['computing'] = True
            atom = st.session_state['queue'][0]
            st.session_state['queue'].pop(0)
            # st.write("Computing...")
            # progress_text = "Computing..."
            # my_bar = st.progress(0, text=progress_text)

            # for percent_complete in range(100):
            #     time.sleep(0.01)
            #     my_bar.progress(percent_complete + 1, text=progress_text)
            # time.sleep(1)
            # my_bar.empty()
            
            # Delete empty lines
            parsed = [line for line in atom.splitlines() if line.strip() != ""]
            xyz = "\n".join(parsed)
            mol = f"{len(parsed)}\nname\n{str(xyz)}"
            
            # output xyz into molecule.xyz file
            with open('molecule.xyz', 'w') as f:
                f.write(f"{len(parsed)}\nhi\n{str(xyz)}")
                
            raw_mol = MolFromXYZFile('molecule.xyz')
            rdkit_mol = Chem.Mol(raw_mol)
            rdDetermineBonds.DetermineBonds(rdkit_mol, charge=0)
                
            
            energy, time_val = compute_pyscf(
                atom, basis_option, verbose_option)
            molecule_name = getMoleculeName(atom)
            st.session_state['results'].append(
                (molecule_name, energy, time_val, mol, rdkit_mol))
            st.rerun()
    elif st.session_state['computing'] == True:
        st.session_state['computing'] = False
    else:
        st.warning("Please add an XYZ input to the queue.")

if 'queue' in st.session_state:
    st.subheader("Queue")
    for queue_item in st.session_state['queue']:
        st.write(getMoleculeName(queue_item))
        

tab1, tab2, tab3 = st.tabs(['Results', 'View Graphs', 'View Logs'])
        
with tab1:
    if 'results' in st.session_state:
        st.subheader("Results")
        for result_item in st.session_state['results']:
            with st.container():
                mol = result_item[4]
                result_col_1, result_col_2 = st.columns([2,1])
                result_col_1.write(
                    f"{result_item[0]} | Energy: {result_item[1]} | Time: {result_item[2]} seconds")
                result_col_1.write(
                    f"\# of Atoms: {mol.GetNumAtoms()} | \# of Bonds: {mol.GetNumBonds()} | \# of Rings:  {mol.GetRingInfo().NumRings()}")
                result_col_1.write(f"Molecular Weight: {Descriptors.MolWt(mol)}")
    
                with result_col_2:
                    speck_plot(result_item[3], component_h=200, component_w=200, wbox_height="auto", wbox_width="auto")

with tab2:
    def count_atoms(m):
        atomic_count = defaultdict(lambda : 0)
        for atom in m.GetAtoms():
            atomic_count[atom.GetAtomicNum()] += 1
        return atomic_count
            
    if 'results' in st.session_state and len(st.session_state['results']) > 1:
        st.subheader("Comparative Graphs")
        
        atom_counts = [count_atoms(result_item[4]) for result_item in st.session_state['results']]
        
        # Prepare datasets
        num_atoms = [result_item[4].GetNumAtoms() for result_item in st.session_state['results']]
        num_bonds = [result_item[4].GetNumBonds() for result_item in st.session_state['results']]
        num_conformers = [result_item[4].GetNumConformers() for result_item in st.session_state['results']]
        # 6 and 1 are atomic code
        num_carbons = [atom_counts[i][6] for i in range(len(atom_counts))]
        num_hydrogens = [atom_counts[i][1] for i in range(len(atom_counts))]
        
        energies = [result_item[1] for result_item in st.session_state['results']]
        runtimes = [result_item[2] for result_item in st.session_state['results']]

        df_atoms = pd.DataFrame({'Atoms': num_atoms, 'Energy': energies, 'Runtime': runtimes})
        df_bonds = pd.DataFrame({'Bonds': num_bonds, 'Energy': energies, 'Runtime': runtimes})
        df_conformers = pd.DataFrame({'Conformers': num_conformers, 'Energy': energies, 'Runtime': runtimes})
        df_carbons = pd.DataFrame({'Carbons': num_carbons, 'Energy': energies, 'Runtime': runtimes})
        df_hydrogens = pd.DataFrame({'Hydrogens': num_hydrogens, 'Energy': energies, 'Runtime': runtimes})
        

        # Generate Graphs  
        for df, label in zip([df_atoms, df_bonds, df_carbons, df_hydrogens], ['Atoms', 'Bonds', 'Carbons', 'Hydrogens']):
            for target in ['Energy', 'Runtime']:
                st.markdown(f'### Number of {label} vs. {target}')

                # Linear Regression
                coeffs_linear = np.polyfit(df[label].values, df[target].values, 1)
                poly1d_fn_linear = np.poly1d(coeffs_linear)
                x = np.linspace(min(df[label]), max(df[label]), 100)
                
                # Quadratic Regression
                coeffs_quad = np.polyfit(df[label].values, df[target].values, 2)
                poly1d_fn_quad = np.poly1d(coeffs_quad)
                
                # Display Equations
                st.markdown(f"<span style='color: red;'>Best Fit Linear Equation ({target}): Y = {coeffs_linear[0]:.4f}x + {coeffs_linear[1]:.4f}</span>", unsafe_allow_html=True)
                st.markdown(f"<span style='color: green;'>Best Fit Quadratic Equation ({target}): Y = {coeffs_quad[0]:.4f}x² + {coeffs_quad[1]:.4f}x + {coeffs_quad[2]:.4f}</span>", unsafe_allow_html=True)

                # Create a DataFrame for the regression lines
                df_line = pd.DataFrame({label: x, 'Linear': poly1d_fn_linear(x), 'Quadratic': poly1d_fn_quad(x)})

                # Plot
                scatter = alt.Chart(df).mark_circle(size=60).encode(
                    x=label,
                    y=target,
                    tooltip=[label, target]
                )

                line_linear = alt.Chart(df_line).mark_line(color='red').encode(
                    x=label,
                    y='Linear'
                )

                line_quad = alt.Chart(df_line).mark_line(color='green').encode(
                    x=label,
                    y='Quadratic'
                )

                # Display the plot
                st.altair_chart(scatter + line_linear + line_quad, use_container_width=True)
 
            # Display Equation
            # st.write(f"Best Fit Equation ({target}): Y = {coeffs[0]:.4f}x + {coeffs[1]:.4f}")

with tab3:
    with open('output-test.txt', 'r') as file:
        log_data = file.read()
        st.markdown(f'```\n{log_data}\n```')

        
# xyzview = py3Dmol.view(query='pdb:1A2C') 
# xyzview.setStyle({'cartoon':{'color':'spectrum'}})
# showmol(xyzview, height = 500,width=800)

# def draw_with_spheres(mol):
#     v = py3Dmol.view(width=300,height=300)
#     IPythonConsole.addMolToView(mol,v)
#     v.zoomTo()
#     v.setStyle({'sphere':{'radius':0.3},'stick':{'radius':0.2}});
#     v.show()


# Attempt at creating an async queue, need to find a way to detect browser closing to stop the queue

# def runQueue():
#     for i in range(1, 10):
#         time.sleep(1)
#         print("test", str(i))


# if 'queue-running' not in st.session_state:
#     st.session_state['queue-running'] = True
#     t = threading.Thread(target=runQueue)
#     add_script_run_ctx(t)
#     t.start()

# components.html("""<html>
# <script>
#     const origClose = window.close;
#     window.close = () => {
#         console.log("asdf");
#         // origClose();
#     }
#     document.addEventListener("beforeunload", () => {
#                 alert(1);
#                 console.log(a.a.a.a);
#     })
# </script>
# <div style="color: white" onclick="">
#                 hihihihi
# </div>
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Jaydens-MacBook', release='23.0.0', version='Darwin Kernel Version 23.0.0: Fri Sep 15 14:41:34 PDT 2023; root:xnu-10002.1.13~1/RELEASE_ARM64_T8103', machine='arm64', processor='arm')  Threads 1
Python 3.8.18 | packaged by conda-forge | (default, Oct 10 2023, 15:46:56) 
[Clang 16.0.6 ]
numpy 1.24.4  scipy 1.10.1
Date: Mon Feb  5 20:46:14 2024
PySCF version 2.4.0
PySCF path  /Users/jaydenl/anaconda3/envs/pyscfui/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 14
[INPUT] num. electrons = 34
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 C      0.000000000000   0.000000000000   0.370441000000 AA    0.000000000000   0.000000000000   0.700032035310 Bohr   0.0
[INPUT]  2 H      0.000000000000   0.000000000000   1.457913000000 AA    0.000000000000   0.000000000000   2.755056283443 Bohr   0.0
[INPUT]  3 C      0.000000000000   1.454919000000  -0.095706000000 AA    0.000000000000   2.749398443426  -0.180858128478 Bohr   0.0
[INPUT]  4 C      1.259997000000  -0.727459000000  -0.095706000000 AA    2.381049247774  -1.374698276850  -0.180858128478 Bohr   0.0
[INPUT]  5 C     -1.259997000000  -0.727459000000  -0.095706000000 AA   -2.381049247774  -1.374698276850  -0.180858128478 Bohr   0.0
[INPUT]  6 H      0.000000000000   1.514176000000  -1.180114000000 AA    0.000000000000   2.861377944389  -2.230092255765 Bohr   0.0
[INPUT]  7 H      1.311314000000  -0.757088000000  -1.180114000000 AA    2.478024323308  -1.430688972195  -2.230092255765 Bohr   0.0
[INPUT]  8 H     -1.311314000000  -0.757088000000  -1.180114000000 AA   -2.478024323308  -1.430688972195  -2.230092255765 Bohr   0.0
[INPUT]  9 H      0.876442000000   1.982934000000   0.263747000000 AA    1.656235344066   3.747202183088   0.498409596176 Bohr   0.0
[INPUT] 10 H     -0.876442000000   1.982934000000   0.263747000000 AA   -1.656235344066   3.747202183088   0.498409596176 Bohr   0.0
[INPUT] 11 H      1.279050000000  -1.750488000000   0.263747000000 AA    2.417054199625  -3.307942904338   0.498409596176 Bohr   0.0
[INPUT] 12 H      2.155492000000  -0.232446000000   0.263747000000 AA    4.073289543691  -0.439259278751   0.498409596176 Bohr   0.0
[INPUT] 13 H     -2.155492000000  -0.232446000000   0.263747000000 AA   -4.073289543691  -0.439259278751   0.498409596176 Bohr   0.0
[INPUT] 14 H     -1.279050000000  -1.750488000000   0.263747000000 AA   -2.417054199625  -3.307942904338   0.498409596176 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] H
[INPUT] 0    0    [3    /1   ]  33.87             0.006068
                                5.095             0.045308
                                1.159             0.202822
[INPUT] 0    0    [1    /1   ]  0.3258               1
[INPUT] 0    0    [1    /1   ]  0.1027               1
[INPUT] 1    0    [1    /1   ]  1.407                1
[INPUT] 1    0    [1    /1   ]  0.388                1
[INPUT] 2    0    [1    /1   ]  1.057                1
[INPUT] C
[INPUT] 0    0    [8    /2   ]  8236              0.000531 -0.000113
                                1235              0.004108 -0.000878
                                280.8             0.021087 -0.00454
                                79.27             0.081853 -0.018133
                                25.59             0.234817 -0.05576
                                8.997             0.434401 -0.126895
                                3.319             0.346129 -0.170352
                                0.3643            -0.008983 0.598684
[INPUT] 0    0    [1    /1   ]  0.9059               1
[INPUT] 0    0    [1    /1   ]  0.1285               1
[INPUT] 1    0    [3    /1   ]  18.71             0.014031
                                4.133             0.086866
                                1.2               0.290216
[INPUT] 1    0    [1    /1   ]  0.3827               1
[INPUT] 1    0    [1    /1   ]  0.1209               1
[INPUT] 2    0    [1    /1   ]  1.097                1
[INPUT] 2    0    [1    /1   ]  0.318                1
[INPUT] 3    0    [1    /1   ]  0.761                1

nuclear repulsion = 135.020655287832
number of shells = 96
number of NR pGTOs = 328
number of NR cGTOs = 260
basis = cc-pVTZ
ecp = {}
CPU time:       433.78


******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/_x/xd2ms3z958s6pfllwphw48vm0000gn/T/tmpq25mrgsb
max_memory 4000 MB (current use 0 MB)
Set gradient conv threshold to 3.16228e-05
Initial guess from minao.
    CPU time for init_direct_scf      0.05 sec, wall time      0.01 sec
    CPU time for vj and vk     11.82 sec, wall time     11.30 sec
E1 = -475.33869965717645  E_coul = 182.44784273189455
init E= -157.87020163745
cond(S) = 10934.347100963521
    CPU time for initialize scf     16.49 sec, wall time     12.13 sec
  HOMO = -0.349276005565913  LUMO = 0.0895925209722809
  mo_energy =
[-11.32302574 -11.32126603 -11.32126601 -11.31031028  -1.57971101
  -1.19439962  -1.1943995   -0.8581615   -0.61086119  -0.5448659
  -0.54486583  -0.45708591  -0.45708586  -0.41817931  -0.35671632
  -0.35671604  -0.34927601   0.08959252   0.1473846    0.14738461
   0.1478225    0.17743688   0.17743688   0.1779368    0.22842019
   0.2284202    0.23783996   0.24994496   0.28417163   0.28417173
   0.34987544   0.3498755    0.40006936   0.40006947   0.41093958
   0.43322616   0.47080866   0.47080878   0.53504932   0.5433789
   0.54644791   0.54644793   0.55490595   0.57273735   0.57273735
   0.57628364   0.58727735   0.59315531   0.59315532   0.61620732
   0.63142263   0.63142267   0.7551959    0.75519603   0.76493837
   0.86068215   0.86068219   0.90255537   0.92248585   0.92248592
   0.9492679    1.00197927   1.05249395   1.05249407   1.07109326
   1.07109328   1.13229803   1.13229809   1.13510163   1.18392691
   1.18392694   1.19604982   1.20518835   1.2377842    1.27544083
   1.305471     1.30547106   1.31709614   1.31709614   1.35852126
   1.38446857   1.38446868   1.41000888   1.410009     1.4546125
   1.46500063   1.47015355   1.47015365   1.48947489   1.489475
   1.56739605   1.56831172   1.56831191   1.58958708   1.58958712
   1.62550243   1.64236214   1.69508696   1.69508698   1.71176862
   1.71450829   1.77193486   1.77193506   1.8589844    1.87788627
   1.87788675   2.43543099   2.43543155   2.51994583   2.52334406
   2.56989616   2.56989626   2.57780601   2.57780664   2.71010576
   2.7552453    2.75524534   2.8002456    2.80024571   2.81445731
   2.85731168   2.87124476   2.87124477   2.88076827   2.89788024
   2.98567473   2.98567474   3.04121913   3.04121924   3.04134205
   3.05504135   3.05504144   3.0610409    3.09844914   3.12913735
   3.12913753   3.22145712   3.24135215   3.2413523    3.25189689
   3.29129712   3.31188852   3.31188857   3.32233548   3.32233575
   3.34282155   3.34282159   3.3457955    3.41586883   3.41967772
   3.41967804   3.42865276   3.51726772   3.5172679    3.56880477
   3.56880486   3.60227513   3.60896302   3.62930863   3.62930868
   3.67013398   3.7072378    3.70723812   3.71341212   3.74337518
   3.74337536   3.7801469    3.78014693   3.81702253   3.84461954
   3.89638936   3.89638955   3.90572479   3.94938239   3.97101229
   3.97101235   4.0414102    4.04667733   4.04667738   4.08943253
   4.08943258   4.09595246   4.10874159   4.10874178   4.22335306
   4.2233533    4.24209557   4.25117745   4.25495165   4.25495176
   4.2800716    4.30628637   4.30628646   4.40039832   4.40039848
   4.41872532   4.41872592   4.46353411   4.46353411   4.46468306
   4.47968991   4.47975976   4.52287352   4.52287354   4.55536168
   4.60080053   4.64194294   4.64194314   4.66406461   4.66406468
   4.69992426   4.7360048    4.73600485   4.85881751   4.85881788
   4.90255159   4.9867119    5.0358503    5.03585112   5.08365293
   5.08365345   5.12839188   5.16850154   5.19223444   5.19223456
   5.25378081   5.28979826   5.28979831   5.41450073   5.42258055
   5.4225807    5.44908407   5.44908472   5.46919053   5.53482965
   5.6014751    5.60147569   5.61982633   5.67406299   5.67406314
   5.68912416   5.69314685   5.69314691   5.77192622   5.77730636
   5.77730655   5.79179193   5.86941192   5.86941198   6.11046724
   6.21184082   6.22596725   6.22596726   6.23716093   6.23716129
   6.2776335   12.07053023  14.24140585  14.31624316  14.31624328]
    CPU time for vj and vk     11.89 sec, wall time     10.97 sec
E1 = -477.56790752836986  E_coul = 185.2306566357426
cycle= 1 E= -157.316595604795  delta_E= 0.554  |g|= 0.329  |ddm|= 2.07
    CPU time for cycle= 1     12.47 sec, wall time     11.13 sec
  HOMO = -0.467844690153265  LUMO = 0.132106573896569
  mo_energy =
[-11.27266472 -11.21790826 -11.21790823 -11.21788103  -1.10408421
  -0.94658569  -0.9465856   -0.78696675  -0.64457382  -0.60164397
  -0.60164388  -0.54262129  -0.54262125  -0.51762582  -0.46965036
  -0.46965009  -0.46784469   0.13210657   0.17472592   0.17821434
   0.17821435   0.20882667   0.20882667   0.20909219   0.2574856
   0.25748562   0.27237145   0.27752948   0.31839159   0.31839164
   0.37463373   0.37463381   0.43914261   0.44468166   0.44468176
   0.47717999   0.502041     0.50204109   0.55992071   0.58570543
   0.58766767   0.5876677    0.61372214   0.62817811   0.62817815
   0.65152569   0.65921137   0.66064289   0.6606429    0.68266378
   0.69889094   0.69889102   0.79198274   0.79198286   0.80873952
   0.89074778   0.89074781   0.94124538   0.95826277   0.95826282
   0.97906976   1.04503649   1.09271293   1.092713     1.09919052
   1.09919059   1.16251478   1.16718899   1.16718904   1.22063634
   1.22063635   1.23034825   1.23913117   1.2765554    1.32294699
   1.33742016   1.33742023   1.35440554   1.35440554   1.3927621
   1.42648644   1.42648649   1.45507087   1.45507101   1.49532509
   1.49929819   1.50681254   1.50681267   1.52522669   1.52522678
   1.60326733   1.60326751   1.61309621   1.62246416   1.62246423
   1.66035654   1.6750139    1.7380158    1.73801584   1.75514105
   1.76836532   1.83152283   1.83152304   1.91333217   1.9196512
   1.91965173   2.49448911   2.49448965   2.57450786   2.58592597
   2.62918244   2.62918246   2.64146896   2.64146949   2.77050213
   2.82166837   2.82166842   2.86400982   2.86400992   2.87449799
   2.92246064   2.93681956   2.93681958   2.9462764    2.95393907
   3.0527864    3.05278641   3.11208479   3.11208489   3.11256436
   3.12403777   3.12403783   3.12905369   3.16376807   3.19591954
   3.19591971   3.28858892   3.309445     3.30944514   3.322902
   3.36132062   3.37909166   3.37909172   3.39229173   3.39229198
   3.41091465   3.41128853   3.41128858   3.48290457   3.4880444
   3.4880447    3.49509637   3.57305627   3.57305644   3.62325464
   3.62325466   3.66242055   3.66330025   3.68705967   3.68705969
   3.72136265   3.76198426   3.76198457   3.77217997   3.79767445
   3.79767468   3.83866734   3.83866741   3.87186902   3.90025305
   3.94938464   3.94938485   3.95905621   4.01388918   4.02637776
   4.02637784   4.09779826   4.10055812   4.10055821   4.14147263
   4.14147269   4.14993259   4.16269866   4.16269893   4.27358215
   4.27358237   4.28861476   4.30294581   4.30294593   4.31424682
   4.32785895   4.35438834   4.35438845   4.44269101   4.44269106
   4.47134572   4.47134619   4.51510761   4.51559845   4.51559848
   4.51690691   4.53566204   4.57095126   4.5709513    4.6077723
   4.64855552   4.69688383   4.69688411   4.7354982    4.73549831
   4.75159952   4.78241979   4.78241985   4.91408658   4.91408695
   4.96645657   5.04044512   5.09517351   5.09517435   5.14121335
   5.1412139    5.19410039   5.22460575   5.24716864   5.24716879
   5.31161199   5.34874293   5.34874299   5.4793286    5.49063159
   5.49063167   5.51797572   5.51797633   5.53681493   5.59657109
   5.66861329   5.6686139    5.68901575   5.73974196   5.73974214
   5.75493979   5.76056728   5.76056735   5.83882998   5.84194273
   5.84194296   5.85500727   5.94036905   5.94036909   6.18033687
   6.29420542   6.30771549   6.3077155    6.3192661    6.31926645
   6.35999831  12.11682848  14.31408835  14.39228267  14.39228277]
    CPU time for vj and vk     12.31 sec, wall time     11.75 sec
E1 = -478.2833027202601  E_coul = 185.90923622079535
cycle= 2 E= -157.353411211633  delta_E= -0.0368  |g|= 0.0882  |ddm|= 0.257
    CPU time for cycle= 2     15.12 sec, wall time     12.21 sec
  HOMO = -0.450784563247606  LUMO = 0.13889375059252
  mo_energy =
[-11.19259606 -11.19255427 -11.19255426 -11.18767858  -1.07155599
  -0.92358776  -0.92358769  -0.76147383  -0.62477216  -0.58481113
  -0.58481105  -0.53039517  -0.53039512  -0.50697167  -0.45209241
  -0.45209216  -0.45078456   0.13889375   0.18084859   0.18325979
   0.1832598    0.21538819   0.21538819   0.21661495   0.26304512
   0.26304516   0.27689189   0.28890283   0.328378     0.32837804
   0.38291613   0.3829162    0.44625593   0.45942742   0.45942751
   0.49425768   0.51154509   0.51154518   0.5668227    0.59766489
   0.59992777   0.59992781   0.62756561   0.64147967   0.6414797
   0.66463576   0.67262656   0.67262657   0.68056906   0.70510671
   0.72089108   0.72089117   0.8054217    0.80542181   0.81871012
   0.90106915   0.90106918   0.95436277   0.96810016   0.96810021
   0.98988355   1.05758464   1.10427144   1.10427145   1.10976933
   1.10976945   1.17174858   1.17976976   1.17976981   1.23149366
   1.23149368   1.24424124   1.24881472   1.28958159   1.33857152
   1.34767479   1.34767486   1.36724609   1.36724609   1.40676643
   1.44092302   1.44092304   1.47246002   1.47246022   1.50749449
   1.50891114   1.52076376   1.52076389   1.53623439   1.53623449
   1.6142769    1.61427706   1.62984898   1.6326169    1.63261697
   1.67562776   1.68535143   1.75120767   1.75120771   1.76652969
   1.78332797   1.84772528   1.84772551   1.93435098   1.93518296
   1.9351835    2.51234783   2.51234839   2.59759838   2.60461037
   2.65318936   2.65318952   2.66531348   2.66531384   2.79030894
   2.84354578   2.84354581   2.88744975   2.88744985   2.90178483
   2.94376157   2.96304418   2.96304419   2.96788416   2.97896415
   3.07462421   3.07462421   3.13064807   3.13064814   3.13658554
   3.14399941   3.14399946   3.14669683   3.1862011    3.21897191
   3.21897208   3.30694782   3.32860929   3.32860943   3.34249966
   3.38125996   3.40004581   3.40004585   3.41309464   3.41309487
   3.43133093   3.431331     3.43593001   3.50144839   3.50819254
   3.50819285   3.51393396   3.60213496   3.60213511   3.64096402
   3.64096403   3.67909707   3.68710819   3.7077058    3.7077058
   3.73868395   3.78021512   3.78021543   3.79090225   3.8148817
   3.81488193   3.85735101   3.85735108   3.89298711   3.91882547
   3.96756577   3.96756596   3.97839469   4.0418105    4.04976878
   4.04976885   4.11701569   4.12131504   4.12131521   4.16107548
   4.16107552   4.17494928   4.18222087   4.1822212    4.29223399
   4.29223421   4.30616566   4.32293784   4.32293796   4.33883788
   4.34434177   4.37338355   4.37338364   4.45868968   4.4586897
   4.49306026   4.49306069   4.53156033   4.53336569   4.53584745
   4.53584749   4.55660106   4.58909533   4.58909539   4.62399623
   4.6669968    4.71709466   4.71709493   4.76226625   4.76226637
   4.77080511   4.80260066   4.80260073   4.93683427   4.93683466
   4.98937259   5.061849     5.1167035    5.11670437   5.16121889
   5.16121945   5.21459705   5.24406515   5.26743308   5.26743322
   5.33810568   5.37143172   5.3714318    5.49797103   5.51172793
   5.51172798   5.53967269   5.53967326   5.55844923   5.61786404
   5.68962671   5.68962729   5.71108913   5.76065063   5.76065081
   5.77483417   5.78226016   5.78226026   5.85832475   5.86470853
   5.86470873   5.882836     5.96635414   5.96635419   6.21815916
   6.31738061   6.33028987   6.33028989   6.34219012   6.34219045
   6.3831594   12.16755575  14.34082481  14.41427328  14.41427341]
    CPU time for vj and vk     11.98 sec, wall time     10.72 sec
E1 = -477.97329252879985  E_coul = 185.59647489915065
cycle= 3 E= -157.356162341817  delta_E= -0.00275  |g|= 0.0287  |ddm|= 0.0837
    CPU time for cycle= 3     14.08 sec, wall time     11.09 sec
  HOMO = -0.459373049207747  LUMO = 0.137776651479995
  mo_energy =
[-11.22283167 -11.20454473 -11.20454473 -11.20451254  -1.08204438
  -0.92899783  -0.92899775  -0.76870668  -0.63194782  -0.59090036
  -0.59090028  -0.53475634  -0.5347563   -0.51128188  -0.46230333
  -0.46230306  -0.45937305   0.13777665   0.17938729   0.18249789
   0.1824979    0.21444216   0.21444216   0.2150843    0.26220205
   0.26220208   0.27627594   0.28658497   0.32592905   0.32592908
   0.38073089   0.38073096   0.44459407   0.45472099   0.45472109
   0.48881618   0.50950276   0.50950285   0.56596736   0.5934908
   0.59598872   0.59598876   0.6239976    0.63785024   0.63785027
   0.66173077   0.67093061   0.67093062   0.67520851   0.69812348
   0.71347121   0.7134713    0.80182145   0.80182157   0.81664318
   0.89857948   0.89857951   0.94926315   0.96516361   0.96516366
   0.98759694   1.05324885   1.10085597   1.10085603   1.10728274
   1.10728282   1.17062537   1.17604119   1.17604124   1.22857047
   1.22857048   1.24000743   1.24664296   1.28561246   1.33341407
   1.34517761   1.34517768   1.36382793   1.36382793   1.40191458
   1.43606389   1.43606391   1.4663374    1.46633756   1.50465719
   1.50648516   1.51580413   1.51580426   1.53342464   1.53342473
   1.61121745   1.61121761   1.62498713   1.62956139   1.62956147
   1.67080523   1.68259594   1.74757543   1.74757547   1.76264777
   1.78036834   1.8444552    1.84445542   1.9280159    1.93018722
   1.93018776   2.50885162   2.50885217   2.59097084   2.60045783
   2.64544568   2.64544568   2.65696462   2.65696515   2.78530168
   2.83688509   2.83688512   2.87924539   2.8792455    2.89210828
   2.93653521   2.95390663   2.95390663   2.959755     2.97058537
   3.06750745   3.06750746   3.12581641   3.12581649   3.12849742
   3.13862356   3.13862362   3.14232827   3.17881659   3.21090008
   3.21090024   3.30280376   3.32370039   3.32370053   3.33594878
   3.37529162   3.39363276   3.39363279   3.40656579   3.40656603
   3.42572819   3.42572825   3.42784832   3.49712701   3.50307065
   3.50307095   3.50929157   3.59278768   3.59278785   3.63843235
   3.63843239   3.67781663   3.6805445    3.70262186   3.70262188
   3.73587815   3.77655391   3.77655422   3.78698032   3.81164035
   3.81164057   3.85311721   3.85311728   3.88739141   3.91419712
   3.96380904   3.96380923   3.97439358   4.03316761   4.04431617
   4.04431624   4.11382627   4.1162111    4.11621122   4.15832669
   4.15832673   4.16854619   4.17917094   4.17917123   4.28931855
   4.28931877   4.30512158   4.3194012    4.31940132   4.33179642
   4.34266227   4.37091785   4.37091795   4.45752412   4.45752416
   4.48780585   4.48780631   4.53009312   4.53145851   4.53157063
   4.53157066   4.55224964   4.58614956   4.58614961   4.62178665
   4.66437554   4.71323024   4.71323052   4.75464898   4.7546491
   4.76796094   4.79918145   4.79918152   4.9306976    4.93069799
   4.98451163   5.05664462   5.11094004   5.1109409    5.15695124
   5.1569518    5.20921875   5.24020266   5.26343963   5.26343977
   5.33159997   5.36612516   5.36612524   5.49341778   5.50629789
   5.50629795   5.53468894   5.53468952   5.55351157   5.61330442
   5.68512044   5.68512103   5.70610543   5.75688556   5.75688573
   5.77137653   5.77783761   5.7778377    5.85546161   5.85946186
   5.85946207   5.87519909   5.95924947   5.95924951   6.20614738
   6.31319065   6.32642245   6.32642246   6.33787882   6.33787916
   6.37892629  12.14776645  14.33046517  14.40586774  14.40586786]
    CPU time for vj and vk     11.59 sec, wall time     10.21 sec
E1 = -478.1403852805307  E_coul = 185.76333642674942
cycle= 4 E= -157.356393565949  delta_E= -0.000231  |g|= 0.0046  |ddm|= 0.0243
    CPU time for cycle= 4     13.69 sec, wall time     10.53 sec
  HOMO = -0.458872039858186  LUMO = 0.137980380919114
  mo_energy =
[-11.22088785 -11.20428501 -11.20428501 -11.2042511   -1.08087606
  -0.92846745  -0.92846738  -0.76814838  -0.63134044  -0.59056666
  -0.59056658  -0.53450678  -0.53450673  -0.51125317  -0.46187192
  -0.46187165  -0.45887204   0.13798038   0.17972769   0.18257185
   0.18257187   0.21461487   0.21461487   0.21535863   0.26238843
   0.26238846   0.27634088   0.28680739   0.32622023   0.32622027
   0.38080767   0.38080774   0.44471406   0.45508274   0.45508284
   0.48944555   0.5095628    0.50956288   0.56600363   0.59396943
   0.59636927   0.59636931   0.62424353   0.6382458    0.63824584
   0.6619504    0.67088573   0.67088573   0.67566778   0.69886615
   0.71398496   0.71398505   0.80209737   0.80209748   0.81677814
   0.89885421   0.89885424   0.94979723   0.96550482   0.96550488
   0.98770705   1.05364737   1.10115261   1.10115267   1.10754627
   1.10754635   1.17070351   1.17622354   1.17622359   1.22874347
   1.22874349   1.24035228   1.24690661   1.28592643   1.3337086
   1.34545232   1.34545239   1.36402582   1.36402582   1.40236288
   1.43650784   1.43650786   1.46670178   1.46670195   1.50491861
   1.50677168   1.51626273   1.51626286   1.53370915   1.53370923
   1.61147112   1.61147128   1.62543654   1.62990655   1.62990662
   1.67126491   1.68291303   1.74780217   1.74780221   1.7628945
   1.78045175   1.84456287   1.84456309   1.9284411    1.93053452
   1.93053506   2.50915199   2.50915254   2.59147188   2.60063745
   2.64614162   2.64614163   2.65753851   2.65753903   2.78571812
   2.83728599   2.83728602   2.87986381   2.87986391   2.89300572
   2.93714587   2.95450689   2.95450689   2.96049584   2.97125461
   3.06794059   3.06794059   3.12601722   3.12601731   3.12901079
   3.13886509   3.13886515   3.14263965   3.17931501   3.21138593
   3.21138609   3.30292366   3.32399678   3.32399692   3.33633057
   3.37565615   3.39402171   3.39402175   3.40699977   3.407
   3.42600712   3.42600718   3.42842524   3.49732298   3.50329697
   3.50329728   3.50956701   3.59354901   3.59354917   3.63851524
   3.63851527   3.67784675   3.68102106   3.70296978   3.7029698
   3.73628565   3.77683448   3.77683478   3.78717915   3.81204719
   3.81204741   3.85349402   3.85349409   3.88802418   3.91467069
   3.96414368   3.96414388   3.97463566   4.0336998    4.04480063
   4.0448007    4.11424981   4.11675362   4.11675374   4.15877853
   4.15877857   4.16906344   4.17944609   4.17944638   4.28964058
   4.2896408    4.30529292   4.31979285   4.31979297   4.33243802
   4.34301518   4.37120593   4.37120604   4.45774373   4.45774377
   4.4883216    4.48832206   4.53038192   4.53167092   4.53194408
   4.53194411   4.55257652   4.58653092   4.58653097   4.62200938
   4.66459052   4.71351991   4.71352018   4.75498154   4.75498167
   4.76837993   4.79958448   4.79958455   4.93133625   4.93133664
   4.98488059   5.05707242   5.11138587   5.11138672   5.15731697
   5.15731753   5.20950813   5.24058473   5.26386872   5.26386886
   5.33213914   5.36648507   5.36648514   5.49386149   5.50682101
   5.50682107   5.53507839   5.53507896   5.55390566   5.61366445
   5.68541164   5.68541222   5.70648064   5.75707035   5.75707053
   5.77150592   5.77809015   5.77809024   5.8555789    5.85983751
   5.85983772   5.87579645   5.9598312    5.95983125   6.2069846
   6.31336737   6.32649292   6.32649294   6.33806056   6.3380609
   6.37904425  12.14895642  14.33092073  14.40616022  14.40616035]
    CPU time for vj and vk     11.68 sec, wall time     11.15 sec
E1 = -478.1234526994722  E_coul = 185.74639588987972
cycle= 5 E= -157.356401521761  delta_E= -7.96e-06  |g|= 0.000756  |ddm|= 0.00519
    CPU time for cycle= 5     14.08 sec, wall time     11.49 sec
  HOMO = -0.458912440104296  LUMO = 0.137992511756453
  mo_energy =
[-11.22092783 -11.20415259 -11.20415259 -11.20411881  -1.08092643
  -0.92845544  -0.92845536  -0.76813     -0.63135668  -0.59056532
  -0.59056524  -0.53453029  -0.53453025  -0.51121687  -0.46196379
  -0.46196352  -0.45891244   0.13799251   0.17972258   0.18258966
   0.18258967   0.21463137   0.21463137   0.21538823   0.26238081
   0.26238084   0.27637392   0.28681657   0.32619855   0.32619859
   0.38082325   0.38082332   0.44472635   0.45507816   0.45507825
   0.48937914   0.50957518   0.50957527   0.5659843    0.59397412
   0.596367     0.59636704   0.62421168   0.63822391   0.63822395
   0.66197858   0.67090787   0.67090787   0.67570857   0.69879651
   0.71397719   0.71397728   0.80213124   0.80213135   0.81677273
   0.89883286   0.89883289   0.94974897   0.96545674   0.9654568
   0.98775008   1.05362837   1.10113955   1.1011396    1.10751778
   1.10751786   1.17071851   1.17622684   1.17622689   1.22875647
   1.22875649   1.24034613   1.24686741   1.28593036   1.33369512
   1.34544248   1.34544255   1.36402797   1.36402797   1.40234932
   1.43648717   1.43648719   1.46669171   1.46669187   1.50493234
   1.50673961   1.5162432    1.51624334   1.53371531   1.5337154
   1.6114953    1.61149545   1.62541689   1.62988156   1.62988163
   1.67127544   1.6828932    1.7478084    1.74780844   1.76287713
   1.78050974   1.84460725   1.84460747   1.92845858   1.93053624
   1.93053678   2.50915247   2.50915302   2.59148248   2.60066336
   2.64611591   2.64611592   2.65752678   2.6575273    2.78568701
   2.83728268   2.83728272   2.87984586   2.87984596   2.89296371
   2.93712959   2.95450376   2.95450377   2.96043949   2.97123546
   3.06795322   3.06795322   3.12602515   3.12602524   3.12903278
   3.13887476   3.13887482   3.14260726   3.17930323   3.21138167
   3.21138184   3.30296156   3.32399573   3.32399587   3.33633566
   3.37566514   3.39403532   3.39403536   3.40699868   3.40699892
   3.42601333   3.42601339   3.42838912   3.49737396   3.50331993
   3.50332023   3.50957063   3.59353168   3.59353184   3.63856813
   3.63856816   3.67788825   3.68102524   3.70298449   3.70298451
   3.73626294   3.77687112   3.77687142   3.78722719   3.81203537
   3.8120356    3.8534892    3.85348927   3.88798384   3.91466496
   3.96416125   3.96416145   3.97469724   4.03376358   4.04481968
   4.04481975   4.11426386   4.11672907   4.11672919   4.15879391
   4.15879395   4.1691075    4.17948499   4.17948528   4.2896794
   4.28967962   4.30535488   4.31981731   4.31981743   4.33242759
   4.34300541   4.37125858   4.37125869   4.4577845    4.45778454
   4.48832299   4.48832345   4.53040706   4.53170524   4.53197129
   4.53197132   4.55261174   4.58655072   4.58655076   4.62200965
   4.66464785   4.71356301   4.71356328   4.75503276   4.75503289
   4.76835511   4.79965886   4.79965892   4.93133752   4.93133791
   4.98489264   5.05711384   5.11139847   5.11139933   5.1573327
   5.15733326   5.20951363   5.24057853   5.26388261   5.26388275
   5.33221148   5.36653228   5.36653235   5.4938441    5.50679599
   5.50679605   5.53509993   5.53510051   5.5539073    5.6137021
   5.68544093   5.68544152   5.70650642   5.75711341   5.75711359
   5.77154989   5.77812506   5.77812515   5.85561646   5.85988477
   5.85988498   5.87583538   5.95982308   5.95982313   6.20700988
   6.31339431   6.32655771   6.32655773   6.33809565   6.33809599
   6.3791192   12.14895306  14.33097213  14.40622846  14.40622858]
    CPU time for vj and vk     10.24 sec, wall time     10.09 sec
E1 = -478.1231577012669  E_coul = 185.7461005564964
cycle= 6 E= -157.356401856939  delta_E= -3.35e-07  |g|= 0.000183  |ddm|= 0.00155
    CPU time for cycle= 6     12.26 sec, wall time     10.41 sec
  HOMO = -0.458930209689119  LUMO = 0.137986500017818
  mo_energy =
[-11.22092237 -11.20422929 -11.20422929 -11.20419542  -1.08095465
  -0.92848326  -0.92848319  -0.76815983  -0.63137198  -0.59058975
  -0.59058967  -0.53453295  -0.5345329   -0.51123933  -0.46200118
  -0.46200092  -0.45893021   0.1379865    0.17972685   0.18258314
   0.18258315   0.21462916   0.21462916   0.21538524   0.26238663
   0.26238666   0.27636813   0.28681259   0.32619655   0.32619659
   0.38081153   0.3808116    0.44471936   0.45505378   0.45505387
   0.48937558   0.50956562   0.5095657    0.56598926   0.59396342
   0.59635401   0.59635405   0.62420337   0.63822198   0.63822201
   0.66196677   0.67089375   0.67089375   0.67568452   0.69879714
   0.7139577    0.71395779   0.80211655   0.80211666   0.81676327
   0.89882971   0.89882974   0.94973437   0.96545282   0.96545287
   0.98773152   1.05361362   1.10112588   1.10112594   1.10751955
   1.10751963   1.17071      1.17621155   1.1762116    1.22874119
   1.22874121   1.24033779   1.24687026   1.28591484   1.33368354
   1.34544021   1.34544028   1.36401873   1.36401873   1.40234107
   1.43647624   1.43647626   1.46667703   1.4666772    1.50492014
   1.50674202   1.51622772   1.51622786   1.53370718   1.53370726
   1.61148116   1.61148132   1.62541256   1.62987473   1.6298748
   1.67126501   1.68288755   1.74779721   1.74779725   1.76286375
   1.78049358   1.84459212   1.84459235   1.92844475   1.93052211
   1.93052265   2.50914446   2.50914501   2.59146518   2.60064763
   2.6460962    2.64609621   2.65750239   2.6575029    2.78568075
   2.83726421   2.83726425   2.87982508   2.87982519   2.89294545
   2.93710878   2.95448099   2.95448099   2.96042051   2.9712239
   3.06792564   3.06792564   3.12600347   3.12600355   3.12900278
   3.13885332   3.13885338   3.14259061   3.17928217   3.21135596
   3.21135613   3.3029413    3.32397951   3.32397965   3.3363078
   3.37563668   3.39401061   3.39401065   3.40697286   3.40697309
   3.42599476   3.42599483   3.42837835   3.49734956   3.50330446
   3.50330477   3.50956139   3.59351561   3.59351578   3.63855637
   3.6385564    3.6778857    3.68100878   3.70297044   3.70297046
   3.73626957   3.77685177   3.77685208   3.78720385   3.81203067
   3.8120309    3.85348196   3.85348204   3.887982     3.9146494
   3.96415091   3.9641511    3.97467706   4.03373467   4.04480997
   4.04481004   4.11425546   4.11672732   4.11672745   4.15879441
   4.15879445   4.16909324   4.17948123   4.17948152   4.28967365
   4.28967387   4.3053527    4.31981228   4.31981239   4.33241497
   4.3430145    4.37124979   4.37124989   4.45778354   4.45778358
   4.48831599   4.48831645   4.53039885   4.53171274   4.53196206
   4.53196209   4.55260082   4.58654905   4.58654909   4.62201102
   4.66463978   4.71355224   4.71355251   4.75501031   4.75501044
   4.76837077   4.79964446   4.79964453   4.93132853   4.93132892
   4.98488828   5.05709722   5.111383     5.11138386   5.15732228
   5.15732284   5.20949998   5.24057746   5.26387677   5.26387691
   5.33218916   5.36651073   5.3665108    5.49382441   5.50678271
   5.50678277   5.53508356   5.53508414   5.55389871   5.61368486
   5.68542628   5.68542687   5.70649255   5.75710471   5.75710488
   5.77153953   5.77811374   5.77811383   5.85561036   5.85986495
   5.85986517   5.87581201   5.95981321   5.95981326   6.20698242
   6.31338642   6.32653863   6.32653865   6.33808248   6.33808282
   6.37909262  12.14893959  14.33093083  14.40618173  14.40618186]
    CPU time for vj and vk     10.94 sec, wall time      9.84 sec
E1 = -478.12333910620094  E_coul = 185.74628194312535
cycle= 7 E= -157.356401875244  delta_E= -1.83e-08  |g|= 4.16e-05  |ddm|= 0.000383
    CPU time for cycle= 7     13.20 sec, wall time     10.18 sec
  HOMO = -0.458927537521115  LUMO = 0.137986794539062
  mo_energy =
[-11.2209425  -11.20421402 -11.20421401 -11.20418019  -1.08095441
  -0.92848233  -0.92848226  -0.76816018  -0.63136846  -0.59058614
  -0.59058606  -0.53453023  -0.53453018  -0.51123358  -0.46200015
  -0.46199988  -0.45892754   0.13798679   0.17972745   0.18258339
   0.1825834    0.21462968   0.21462968   0.21538746   0.26238619
   0.26238622   0.27636955   0.28681254   0.3261963    0.32619634
   0.38081264   0.38081271   0.44472084   0.45505683   0.45505692
   0.48937664   0.5095659    0.50956598   0.56598741   0.59396664
   0.59635647   0.59635651   0.6242019    0.6382234    0.63822343
   0.66197036   0.67089373   0.67089374   0.67568777   0.69879688
   0.71395905   0.71395914   0.80212017   0.80212028   0.81676407
   0.89883003   0.89883006   0.9497361    0.96545273   0.96545278
   0.98773441   1.0536161    1.10112761   1.10112767   1.10751918
   1.10751926   1.1707108    1.17621247   1.17621253   1.22874369
   1.22874371   1.24033878   1.24686972   1.28591674   1.33368381
   1.34544088   1.34544095   1.36401916   1.36401916   1.40234302
   1.43647747   1.43647749   1.46667729   1.46667746   1.50492236
   1.50674173   1.51622919   1.51622933   1.53370923   1.53370931
   1.61148445   1.61148461   1.6254126    1.62987567   1.62987575
   1.67126746   1.682888     1.74779852   1.74779856   1.76286537
   1.78049626   1.84459418   1.8445944    1.92844607   1.93052349
   1.93052403   2.509146     2.50914656   2.59146689   2.60064984
   2.64609764   2.64609764   2.65750515   2.65750566   2.78568107
   2.83726613   2.83726616   2.8798276    2.8798277    2.89294674
   2.93711214   2.95448287   2.95448287   2.96042279   2.97122505
   3.0679298    3.06792981   3.12600728   3.12600737   3.1290075
   3.13885667   3.13885673   3.14259312   3.1792848    3.21135866
   3.21135882   3.30294511   3.3239824    3.32398255   3.33631289
   3.37564119   3.39401463   3.39401467   3.40697687   3.4069771
   3.42599746   3.42599752   3.42837843   3.49735478   3.50330728
   3.50330759   3.50956365   3.59351526   3.59351543   3.63855841
   3.63855844   3.67788632   3.68101038   3.70297219   3.7029722
   3.73626945   3.77685513   3.77685544   3.78720743   3.8120322
   3.81203243   3.85348357   3.85348365   3.88798203   3.91465191
   3.96415307   3.96415327   3.97468091   4.03373939   4.04481121
   4.04481128   4.11425807   4.11672743   4.11672755   4.15879638
   4.15879642   4.16909554   4.17948305   4.17948335   4.28967621
   4.28967643   4.30535431   4.31981318   4.3198133    4.33241709
   4.34301442   4.37125237   4.37125247   4.45778451   4.45778456
   4.48831708   4.48831754   4.53040005   4.53171298   4.53196369
   4.53196372   4.55260269   4.58655058   4.58655063   4.62201106
   4.66464179   4.71355424   4.71355452   4.75501307   4.75501319
   4.76836912   4.79964922   4.79964928   4.93133102   4.93133141
   4.9848892    5.05710014   5.11138562   5.11138647   5.15732436
   5.15732492   5.20950158   5.24057807   5.26387863   5.26387877
   5.3321945    5.36651393   5.366514     5.49382774   5.50678512
   5.50678518   5.53508714   5.53508772   5.55390059   5.61368803
   5.68542937   5.68542996   5.70649597   5.75710705   5.75710723
   5.77154223   5.77811631   5.77811639   5.85561262   5.85986921
   5.85986942   5.87581593   5.95981484   5.95981489   6.20698394
   6.3133892    6.32654342   6.32654344   6.33808617   6.33808651
   6.37909854  12.14893317  14.33093735  14.40619079  14.40619091]
    CPU time for vj and vk     10.10 sec, wall time      9.43 sec
E1 = -478.1232648840579  E_coul = 185.7462077200373
cycle= 8 E= -157.356401876189  delta_E= -9.45e-10  |g|= 6.38e-06  |ddm|= 9.49e-05
    CPU time for cycle= 8     12.20 sec, wall time      9.74 sec
  HOMO = -0.458928275852436  LUMO = 0.137986345435065
  mo_energy =
[-11.22094231 -11.20421864 -11.20421864 -11.2041848   -1.08095617
  -0.92848416  -0.92848409  -0.76816134  -0.63136968  -0.59058759
  -0.59058751  -0.53453172  -0.53453167  -0.51123488  -0.46200175
  -0.46200149  -0.45892828   0.13798635   0.17972709   0.182583
   0.18258301   0.21462922   0.21462922   0.21538721   0.26238571
   0.26238574   0.27636923   0.28681194   0.32619561   0.32619565
   0.38081219   0.38081226   0.44472045   0.45505604   0.45505613
   0.48937565   0.50956525   0.50956534   0.5659867    0.59396615
   0.59635557   0.59635561   0.62420074   0.63822234   0.63822237
   0.66196922   0.67089269   0.67089269   0.67568718   0.69879551
   0.71395798   0.71395808   0.80211935   0.80211947   0.81676327
   0.89882922   0.89882925   0.94973524   0.9654518    0.96545185
   0.98773374   1.05361508   1.10112657   1.10112663   1.10751837
   1.10751844   1.17071014   1.17621153   1.17621158   1.22874279
   1.22874281   1.24033803   1.24686869   1.28591594   1.33368278
   1.34544019   1.34544025   1.3640183    1.3640183    1.40234218
   1.43647647   1.43647649   1.46667629   1.46667646   1.50492124
   1.50674067   1.51622829   1.51622843   1.53370828   1.53370837
   1.6114837    1.61148386   1.62541166   1.62987471   1.62987479
   1.67126701   1.68288712   1.74779754   1.74779758   1.76286405
   1.78049524   1.84459295   1.84459317   1.92844518   1.93052257
   1.93052311   2.50914465   2.5091452    2.59146589   2.60064847
   2.64609622   2.64609622   2.65750355   2.65750406   2.78567966
   2.83726451   2.83726454   2.87982595   2.87982606   2.89294545
   2.93711025   2.95448127   2.95448127   2.96042081   2.97122377
   3.06792813   3.06792813   3.12600548   3.12600556   3.12900584
   3.13885499   3.13885505   3.14259132   3.17928318   3.21135697
   3.21135714   3.3029435    3.32398065   3.3239808    3.33631084
   3.37563937   3.39401288   3.39401291   3.40697498   3.40697521
   3.42599574   3.42599581   3.42837695   3.49735289   3.50330554
   3.50330584   3.50956183   3.59351431   3.59351448   3.63855743
   3.63855746   3.67788529   3.68100911   3.70297093   3.70297094
   3.73626822   3.7768539    3.7768542    3.78720623   3.81203082
   3.81203104   3.85348217   3.85348225   3.88798071   3.91465049
   3.96415192   3.96415212   3.97467999   4.03373835   4.04481005
   4.04481012   4.11425676   4.11672612   4.11672624   4.15879545
   4.15879549   4.16909454   4.179482     4.1794823    4.28967544
   4.28967566   4.30535346   4.31981221   4.31981233   4.33241577
   4.34301324   4.37125158   4.37125169   4.4577837    4.45778374
   4.48831606   4.48831652   4.53039893   4.5317122    4.53196271
   4.53196274   4.55260162   4.58654955   4.5865496    4.62200979
   4.66464091   4.71355312   4.71355339   4.75501154   4.75501166
   4.76836783   4.79964879   4.79964886   4.93132994   4.93133033
   4.98488786   5.05709895   5.11138446   5.11138531   5.15732296
   5.15732352   5.20950004   5.2405766    5.26387741   5.26387755
   5.33219397   5.36651268   5.36651275   5.49382606   5.50678337
   5.50678343   5.53508549   5.53508606   5.55389887   5.61368665
   5.68542775   5.68542834   5.70649438   5.75710571   5.75710588
   5.7715408    5.77811484   5.77811493   5.85561116   5.85986797
   5.85986819   5.87581506   5.95981321   5.95981326   6.20698326
   6.31338732   6.32654165   6.32654167   6.33808426   6.3380846
   6.37909674  12.14893265  14.33093457  14.40618772  14.40618784]
    CPU time for vj and vk      9.82 sec, wall time      9.27 sec
E1 = -478.1232943883748  E_coul = 185.7462372243369
Extra cycle  E= -157.356401876206  delta_E= -1.73e-11  |g|= 2.37e-06  |ddm|= 1.23e-05
    CPU time for scf_cycle    135.65 sec, wall time    108.55 sec
    CPU time for SCF    135.66 sec, wall time    108.55 sec
converged SCF energy = -157.356401876206
